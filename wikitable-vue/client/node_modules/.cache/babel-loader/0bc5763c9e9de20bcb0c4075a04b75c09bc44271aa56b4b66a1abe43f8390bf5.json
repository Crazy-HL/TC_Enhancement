{"ast":null,"code":"import { computed } from \"vue\";\nexport default {\n  __name: 'DanmuDisplay',\n  props: {\n    comments: Array,\n    activeSentence: Number\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 颜色池\n    const colorPool = [\"#FF6B6B\", \"#4ECDC4\", \"#45B7D1\", \"#FFA07A\", \"#98D8C8\", \"#F06292\", \"#7986CB\", \"#9575CD\", \"#64B5F6\", \"#4DB6AC\", \"#81C784\", \"#FFD54F\"];\n\n    // 获取随机颜色\n    const getRandomColor = () => {\n      return colorPool[Math.floor(Math.random() * colorPool.length)];\n    };\n\n    // 获取某句子的相关评论\n    const getCommentsForSentence = sentenceIndex => {\n      return props.comments.filter(comment => comment.link === sentenceIndex);\n    };\n    const __returned__ = {\n      props,\n      colorPool,\n      getRandomColor,\n      getCommentsForSentence,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","colorPool","getRandomColor","Math","floor","random","length","getCommentsForSentence","sentenceIndex","comments","filter","comment","link"],"sources":["D:/ZhiHu/zhihu-bullet/wikitable-vue/client/src/components/DanmuDisplay.vue"],"sourcesContent":["<template>\r\n\t<div\r\n\t\tclass=\"danmu-container\"\r\n\t\tv-if=\"\r\n\t\t\tactiveSentence !== null &&\r\n\t\t\tgetCommentsForSentence(activeSentence).length > 0\r\n\t\t\">\r\n\t\t<div\r\n\t\t\tv-for=\"comment in getCommentsForSentence(activeSentence)\"\r\n\t\t\t:key=\"comment.comment_id\"\r\n\t\t\tclass=\"danmu-item\"\r\n\t\t\t:style=\"{\r\n\t\t\t\ttop: `${Math.random() * 80}px`,\r\n\t\t\t\tanimationDuration: `${10 + Math.random() * 10}s`,\r\n\t\t\t\tcolor: getRandomColor()\r\n\t\t\t}\">\r\n\t\t\t<span class=\"danmu-user\">{{ comment.user_nickname }}：</span>\r\n\t\t\t<span class=\"danmu-content\">{{ comment.content }}</span>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcomments: Array,\r\n\t\tactiveSentence: Number\r\n\t});\r\n\r\n\t// 颜色池\r\n\tconst colorPool = [\r\n\t\t\"#FF6B6B\",\r\n\t\t\"#4ECDC4\",\r\n\t\t\"#45B7D1\",\r\n\t\t\"#FFA07A\",\r\n\t\t\"#98D8C8\",\r\n\t\t\"#F06292\",\r\n\t\t\"#7986CB\",\r\n\t\t\"#9575CD\",\r\n\t\t\"#64B5F6\",\r\n\t\t\"#4DB6AC\",\r\n\t\t\"#81C784\",\r\n\t\t\"#FFD54F\"\r\n\t];\r\n\r\n\t// 获取随机颜色\r\n\tconst getRandomColor = () => {\r\n\t\treturn colorPool[Math.floor(Math.random() * colorPool.length)];\r\n\t};\r\n\r\n\t// 获取某句子的相关评论\r\n\tconst getCommentsForSentence = sentenceIndex => {\r\n\t\treturn props.comments.filter(comment => comment.link === sentenceIndex);\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.danmu-container {\r\n\t\tposition: fixed;\r\n\t\ttop: 20px;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\toverflow: hidden;\r\n\t\tz-index: 100;\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\t.danmu-item {\r\n\t\tposition: absolute;\r\n\t\twhite-space: nowrap;\r\n\t\tfont-size: 16px;\r\n\t\ttext-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);\r\n\t\tpadding: 4px 8px;\r\n\t\tborder-radius: 15px;\r\n\t\tbackground-color: rgba(255, 255, 255, 0.8);\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\t\tanimation: danmu-move linear;\r\n\t\tleft: 100%;\r\n\t}\r\n\r\n\t.danmu-user {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-right: 5px;\r\n\t}\r\n\r\n\t@keyframes danmu-move {\r\n\t\tto {\r\n\t\t\ttransform: translateX(-100vw);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"AAuBC,SAASA,QAAQ,QAAQ,KAAK;;;;;;;;;;;;IAE9B,MAAMC,KAAK,GAAGC,OAGZ;;IAEF;IACA,MAAMC,SAAS,GAAG,CACjB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACT;;IAED;IACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;MAC5B,OAAOD,SAAS,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,SAAS,CAACK,MAAM,CAAC,CAAC;IAC/D,CAAC;;IAED;IACA,MAAMC,sBAAsB,GAAGC,aAAa,IAAI;MAC/C,OAAOT,KAAK,CAACU,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAKJ,aAAa,CAAC;IACxE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}