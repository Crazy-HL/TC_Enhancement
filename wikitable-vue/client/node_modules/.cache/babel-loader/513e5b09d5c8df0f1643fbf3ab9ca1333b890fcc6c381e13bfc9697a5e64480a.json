{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-305a2353\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"article-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"control-panel\"\n}, [/*#__PURE__*/_createCommentVNode(\" 原有控制面板内容保持不变 \")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"main-content\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"panel global-comments-panel\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"panel article-panel\",\n  ref: \"articleContainer\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  class: \"article-title\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"article-meta\"\n}, [/*#__PURE__*/_createCommentVNode(\" 文章元信息 \")], -1 /* HOISTED */));\nconst _hoisted_9 = {\n  key: 0,\n  class: \"article-content\"\n};\nconst _hoisted_10 = [\"id\", \"onMouseenter\"];\nconst _hoisted_11 = {\n  key: 0,\n  class: \"annotation-marker\"\n};\nconst _hoisted_12 = {\n  key: 2,\n  class: \"panel annotation-panel\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 顶部控制面板 \"), _hoisted_2, _createCommentVNode(\" 三栏主要内容区 \"), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 第一栏：文章整体评论 \"), $setup.globalComments && $setup.globalComments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createCommentVNode(\" 全局评论内容 \")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 第二栏：文章内容 \"), $setup.article ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [$setup.article ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"h1\", _hoisted_7, _toDisplayString($setup.article.title), 1 /* TEXT */), _hoisted_8, $setup.sentences && $setup.sentences.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sentences, (sentence, index) => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: index\n    }, [_createCommentVNode(\" 确保所有数据访问前都做了检查 \"), $setup.comments && $setup.hasComments(index) ? (_openBlock(), _createBlock($setup[\"CommentStats\"], {\n      key: 0,\n      comments: $setup.getCommentsForSentence(index),\n      \"show-emotion\": false,\n      class: \"before-stats\"\n    }, null, 8 /* PROPS */, [\"comments\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", {\n      class: _normalizeClass([\"sentence\", $setup.getSentenceClasses(index)]),\n      id: 'sentence-' + index,\n      onMouseenter: $event => _ctx.highlightComments(index),\n      onMouseleave: _cache[0] || (_cache[0] = function () {\n        return _ctx.unhighlightComments && _ctx.unhighlightComments(...arguments);\n      })\n    }, [_createTextVNode(_toDisplayString(sentence) + \" \", 1 /* TEXT */), $setup.hasComments(index) ? (_openBlock(), _createElementBlock(\"sup\", _hoisted_11, _toDisplayString($setup.getCommentsForSentence(index).length), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_10), $setup.comments && $setup.hasComments(index) ? (_openBlock(), _createBlock($setup[\"CommentStats\"], {\n      key: 1,\n      comments: $setup.getCommentsForSentence(index),\n      \"show-standpoint\": false,\n      \"show-type\": true,\n      class: \"after-stats\"\n    }, null, 8 /* PROPS */, [\"comments\"])) : _createCommentVNode(\"v-if\", true), _ctx.showInlineComments && _ctx.showTopCommentInline(index) ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 2,\n      class: _normalizeClass([\"inline-comment\", `comment-type-${_ctx.getCommentType($setup.getTopComment(index))}`])\n    }, \" 【\" + _toDisplayString(_ctx.getCommentTypeLabel($setup.getTopComment(index))) + \"：\" + _toDisplayString(_ctx.formatCommentContent($setup.getTopComment(index).content)) + \"】 \", 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 第三栏：句子相关评论 \"), $setup.activeSentence !== null && $setup.hasComments($setup.activeSentence) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createCommentVNode(\" 相关评论内容 \")])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","key","ref","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$setup","globalComments","length","_hoisted_4","article","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","title","_hoisted_8","sentences","_hoisted_9","_Fragment","_renderList","sentence","index","comments","hasComments","_createBlock","getCommentsForSentence","_normalizeClass","getSentenceClasses","id","onMouseenter","$event","_ctx","highlightComments","onMouseleave","_cache","unhighlightComments","arguments","_createTextVNode","_hoisted_11","_hoisted_10","showInlineComments","showTopCommentInline","getCommentType","getTopComment","getCommentTypeLabel","formatCommentContent","content","activeSentence","_hoisted_12"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\ArticleContent.vue"],"sourcesContent":["<template>\r\n\t<div class=\"article-container\">\r\n\t\t<!-- 顶部控制面板 -->\r\n\t\t<div class=\"control-panel\">\r\n\t\t\t<!-- 原有控制面板内容保持不变 -->\r\n\t\t</div>\r\n\r\n\t\t<!-- 三栏主要内容区 -->\r\n\t\t<div class=\"main-content\">\r\n\t\t\t<!-- 第一栏：文章整体评论 -->\r\n\t\t\t<div\r\n\t\t\t\tclass=\"panel global-comments-panel\"\r\n\t\t\t\tv-if=\"globalComments && globalComments.length > 0\">\r\n\t\t\t\t<!-- 全局评论内容 -->\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 第二栏：文章内容 -->\r\n\t\t\t<div class=\"panel article-panel\" v-if=\"article\" ref=\"articleContainer\">\r\n\t\t\t\t<div v-if=\"article\">\r\n\t\t\t\t\t<h1 class=\"article-title\">{{ article.title }}</h1>\r\n\t\t\t\t\t<div class=\"article-meta\">\r\n\t\t\t\t\t\t<!-- 文章元信息 -->\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"article-content\" v-if=\"sentences && sentences.length\">\r\n\t\t\t\t\t\t<template v-for=\"(sentence, index) in sentences\" :key=\"index\">\r\n\t\t\t\t\t\t\t<!-- 确保所有数据访问前都做了检查 -->\r\n\t\t\t\t\t\t\t<CommentStats\r\n\t\t\t\t\t\t\t\tv-if=\"comments && hasComments(index)\"\r\n\t\t\t\t\t\t\t\t:comments=\"getCommentsForSentence(index)\"\r\n\t\t\t\t\t\t\t\t:show-emotion=\"false\"\r\n\t\t\t\t\t\t\t\tclass=\"before-stats\" />\r\n\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclass=\"sentence\"\r\n\t\t\t\t\t\t\t\t:id=\"'sentence-' + index\"\r\n\t\t\t\t\t\t\t\t:class=\"getSentenceClasses(index)\"\r\n\t\t\t\t\t\t\t\t@mouseenter=\"highlightComments(index)\"\r\n\t\t\t\t\t\t\t\t@mouseleave=\"unhighlightComments\">\r\n\t\t\t\t\t\t\t\t{{ sentence }}\r\n\t\t\t\t\t\t\t\t<sup v-if=\"hasComments(index)\" class=\"annotation-marker\">\r\n\t\t\t\t\t\t\t\t\t{{ getCommentsForSentence(index).length }}\r\n\t\t\t\t\t\t\t\t</sup>\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t<CommentStats\r\n\t\t\t\t\t\t\t\tv-if=\"comments && hasComments(index)\"\r\n\t\t\t\t\t\t\t\t:comments=\"getCommentsForSentence(index)\"\r\n\t\t\t\t\t\t\t\t:show-standpoint=\"false\"\r\n\t\t\t\t\t\t\t\t:show-type=\"true\"\r\n\t\t\t\t\t\t\t\tclass=\"after-stats\" />\r\n\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tv-if=\"showInlineComments && showTopCommentInline(index)\"\r\n\t\t\t\t\t\t\t\tclass=\"inline-comment\"\r\n\t\t\t\t\t\t\t\t:class=\"`comment-type-${getCommentType(getTopComment(index))}`\">\r\n\t\t\t\t\t\t\t\t【{{ getCommentTypeLabel(getTopComment(index)) }}：{{\r\n\t\t\t\t\t\t\t\t\tformatCommentContent(getTopComment(index).content)\r\n\t\t\t\t\t\t\t\t}}】\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 第三栏：句子相关评论 -->\r\n\t\t\t<div\r\n\t\t\t\tclass=\"panel annotation-panel\"\r\n\t\t\t\tv-if=\"activeSentence !== null && hasComments(activeSentence)\">\r\n\t\t\t\t<!-- 相关评论内容 -->\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, computed, watch, nextTick } from \"vue\";\r\n\timport api from \"@/api\";\r\n\timport CommentStats from \"./CommentStats.vue\";\r\n\r\n\t// 初始化所有数据为null或空数组\r\n\tconst article = ref(null);\r\n\tconst sentences = ref([]);\r\n\tconst comments = ref([]);\r\n\tconst activeSentence = ref(null);\r\n\r\n\t// 添加数据加载状态\r\n\tconst isLoading = ref(true);\r\n\r\n\t// 计算属性添加空值检查\r\n\tconst globalComments = computed(() => {\r\n\t\treturn comments.value?.filter(comment => comment.link === -1) || [];\r\n\t});\r\n\r\n\t// 方法中添加空值检查\r\n\tconst getCommentsForSentence = index => {\r\n\t\treturn comments.value?.filter(comment => comment.link === index) || [];\r\n\t};\r\n\r\n\tconst hasComments = index => {\r\n\t\tconst sentenceComments = getCommentsForSentence(index);\r\n\t\treturn sentenceComments?.length > 0;\r\n\t};\r\n\r\n\tconst getTopComment = index => {\r\n\t\tconst sentenceComments = getCommentsForSentence(index);\r\n\t\tif (!sentenceComments?.length) return null;\r\n\t\treturn [...sentenceComments].sort((a, b) => b.like_count - a.like_count)[0];\r\n\t};\r\n\r\n\tconst getSentenceClasses = index => {\r\n\t\tconst classes = {\r\n\t\t\t\"has-comment\": hasComments(index),\r\n\t\t\tactive: activeSentence.value === index\r\n\t\t};\r\n\r\n\t\tif (hasComments(index)) {\r\n\t\t\tconst topComment = getTopComment(index);\r\n\t\t\tif (topComment) {\r\n\t\t\t\tclasses[`comment-level-${getCommentLevel(index).level}`] = true;\r\n\t\t\t\tclasses[`comment-type-${getCommentType(topComment)}`] = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn classes;\r\n\t};\r\n\r\n\t// 其他方法保持不变...\r\n\r\n\tonMounted(async () => {\r\n\t\ttry {\r\n\t\t\tisLoading.value = true;\r\n\r\n\t\t\t// 使用Promise.all并行加载数据\r\n\t\t\tconst [articleData, commentsData] = await Promise.all([\r\n\t\t\t\tapi.get(\"article\"),\r\n\t\t\t\tapi.get(\"comments\")\r\n\t\t\t]);\r\n\r\n\t\t\tarticle.value = articleData[0] || null;\r\n\t\t\tsentences.value = splitIntoSentences(article.value?.content_text || \"\");\r\n\t\t\tcomments.value = commentsData || [];\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"加载数据失败:\", error);\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}