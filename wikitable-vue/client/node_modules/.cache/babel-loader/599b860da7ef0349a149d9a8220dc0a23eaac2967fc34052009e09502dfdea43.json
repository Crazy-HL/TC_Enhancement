{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ec3c90c2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = [\"title\"];\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"annotation-marker\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"span\", {\n    class: _normalizeClass([\"sentence\", {\n      'has-comments': $props.hasComments,\n      'active-sentence': $props.isActive,\n      'highlight-content': $props.highlightContent && $props.hasComments\n    }]),\n    id: 'sentence-' + $props.sentenceIndex,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.handleClick && $options.handleClick(...arguments);\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.sentence.split(''), (word, wordIndex) => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: wordIndex\n    }, [$props.showHighlight && word in $props.highFrequencyWords ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      class: \"circled-word\",\n      style: _normalizeStyle({\n        '--stroke-width': $options.getStrokeWidth($props.highFrequencyWords[word]),\n        '--circle-color': $props.hasComments ? $options.commentColor : '#FFEB3B'\n      }),\n      title: `${word} (出现 ${$props.highFrequencyWords[word]} 次)`\n    }, _toDisplayString(word), 13 /* TEXT, STYLE, PROPS */, _hoisted_2)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(word), 1 /* TEXT */))], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)), $props.commentCount > 0 && $props.showMarker ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($props.commentCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 10 /* CLASS, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_normalizeClass","$props","hasComments","isActive","highlightContent","id","sentenceIndex","onClick","_cache","$options","handleClick","arguments","_Fragment","_renderList","sentence","split","word","wordIndex","showHighlight","highFrequencyWords","style","_normalizeStyle","getStrokeWidth","commentColor","title","_hoisted_2","_hoisted_3","_toDisplayString","commentCount","showMarker","_hoisted_4","_createCommentVNode","_hoisted_1"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\HighFrequencyWords.vue"],"sourcesContent":["<template>\r\n\t<span\r\n\t\tclass=\"sentence\"\r\n\t\t:id=\"'sentence-' + sentenceIndex\"\r\n\t\t:class=\"{\r\n\t\t\t'has-comments': hasComments,\r\n\t\t\t'active-sentence': isActive,\r\n\t\t\t'highlight-content': highlightContent && hasComments\r\n\t\t}\"\r\n\t\t@click=\"handleClick\">\r\n\t\t<template v-for=\"(word, wordIndex) in sentence.split('')\" :key=\"wordIndex\">\r\n\t\t\t<span\r\n\t\t\t\tv-if=\"showHighlight && word in highFrequencyWords\"\r\n\t\t\t\tclass=\"circled-word\"\r\n\t\t\t\t:style=\"{\r\n\t\t\t\t\t'--stroke-width': getStrokeWidth(highFrequencyWords[word]),\r\n\t\t\t\t\t'--circle-color': hasComments ? commentColor : '#FFEB3B'\r\n\t\t\t\t}\"\r\n\t\t\t\t:title=\"`${word} (出现 ${highFrequencyWords[word]} 次)`\">\r\n\t\t\t\t{{ word }}\r\n\t\t\t</span>\r\n\t\t\t<span v-else>{{ word }}</span>\r\n\t\t</template>\r\n\t\t<span v-if=\"commentCount > 0 && showMarker\" class=\"annotation-marker\">\r\n\t\t\t{{ commentCount }}\r\n\t\t</span>\r\n\t</span>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\tsentence: String,\r\n\t\t\tsentenceIndex: Number,\r\n\t\t\thighFrequencyWords: Object,\r\n\t\t\tshowHighlight: Boolean,\r\n\t\t\thasComments: Boolean,\r\n\t\t\tcommentLevel: Object,\r\n\t\t\thighlightContent: Boolean,\r\n\t\t\tisActive: Boolean,\r\n\t\t\tshowMarker: Boolean,\r\n\t\t\tcommentCount: Number\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tcommentColor() {\r\n\t\t\t\tconst type = this.commentLevel.type;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t1: \"#4285f4\", // 陈述\r\n\t\t\t\t\t\t2: \"#ea4335\", // 疑问\r\n\t\t\t\t\t\t3: \"#34a853\", // 感叹\r\n\t\t\t\t\t\t4: \"#9c27b0\", // 建议\r\n\t\t\t\t\t\t5: \"#ff6d00\" // 讽刺\r\n\t\t\t\t\t}[type] || \"#4285f4\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\thandleClick() {\r\n\t\t\t\tthis.$emit(\"click\", this.sentenceIndex);\r\n\t\t\t},\r\n\t\t\tgetStrokeWidth(frequency) {\r\n\t\t\t\t// 根据频率计算线条粗细，控制在1px到4px之间\r\n\t\t\t\tconst minFrequency = 1;\r\n\t\t\t\tconst maxFrequency = Math.max(\r\n\t\t\t\t\t...Object.values(this.highFrequencyWords)\r\n\t\t\t\t);\r\n\t\t\t\tconst minWidth = 1;\r\n\t\t\t\tconst maxWidth = 4;\r\n\r\n\t\t\t\t// 线性映射频率到线条宽度\r\n\t\t\t\tconst width =\r\n\t\t\t\t\tminWidth +\r\n\t\t\t\t\t((frequency - minFrequency) * (maxWidth - minWidth)) /\r\n\t\t\t\t\t\t(maxFrequency - minFrequency);\r\n\r\n\t\t\t\t// 确保在范围内\r\n\t\t\t\treturn Math.min(maxWidth, Math.max(minWidth, width)) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.sentence {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline;\r\n\t\tline-height: 1.8;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.sentence:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.has-comments {\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.active-sentence {\r\n\t\tbackground-color: rgba(255, 152, 0, 0.1);\r\n\t}\r\n\r\n\t.highlight-content {\r\n\t\tbackground-color: rgba(66, 133, 244, 0.1);\r\n\t}\r\n\r\n\t.annotation-marker {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline-block;\r\n\t\tmin-width: 16px;\r\n\t\theight: 16px;\r\n\t\tline-height: 16px;\r\n\t\tfont-size: 10px;\r\n\t\ttext-align: center;\r\n\t\tcolor: white;\r\n\t\tbackground-color: #ff9800;\r\n\t\tborder-radius: 8px;\r\n\t\tpadding: 0 4px;\r\n\t\tmargin-left: 4px;\r\n\t\tvertical-align: super;\r\n\t}\r\n\r\n\t.circled-word {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline-block;\r\n\t\tpadding: 0 2px;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t.circled-word::before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: calc(100% + 8px);\r\n\t\theight: calc(100% + 4px);\r\n\t\tborder: var(--stroke-width) solid var(--circle-color);\r\n\t\tborder-radius: 50%;\r\n\t\tbox-sizing: border-box;\r\n\t\tz-index: -1;\r\n\t\topacity: 0.8;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.circled-word:hover::before {\r\n\t\topacity: 1;\r\n\t\tbox-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;mBAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;EAuB8CC,KAAK,EAAC;;;uBAtBnDC,mBAAA,CAyBO;IAxBND,KAAK,EAFPE,eAAA,EAEQ,UAAU;sBAEcC,MAAA,CAAAC,WAAW;yBAAyBD,MAAA,CAAAE,QAAQ;2BAA2BF,MAAA,CAAAG,gBAAgB,IAAIH,MAAA,CAAAC;;IADxHG,EAAE,gBAAgBJ,MAAA,CAAAK,aAAa;IAM/BC,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAC,SAAA,CAAW;IAAA;yBACnBZ,mBAAA,CAYWa,SAAA,QAtBbC,WAAA,CAUwCZ,MAAA,CAAAa,QAAQ,CAACC,KAAK,MAVtD,CAUoBC,IAAI,EAAEC,SAAS;yBAVnClB,mBAAA,CAAAa,SAAA;MAAAf,GAAA,EAUkEoB;IAAS,IAEjEhB,MAAA,CAAAiB,aAAa,IAAIF,IAAI,IAAIf,MAAA,CAAAkB,kBAAkB,I,cADlDpB,mBAAA,CASO;MApBVF,GAAA;MAaIC,KAAK,EAAC,cAAc;MACnBsB,KAAK,EAdVC,eAAA;0BAcsCZ,QAAA,CAAAa,cAAc,CAACrB,MAAA,CAAAkB,kBAAkB,CAACH,IAAI;0BAA4Bf,MAAA,CAAAC,WAAW,GAAGO,QAAA,CAAAc,YAAY;;MAI7HC,KAAK,KAAKR,IAAI,QAAQf,MAAA,CAAAkB,kBAAkB,CAACH,IAAI;wBAC3CA,IAAI,gCAnBXS,UAAA,M,cAqBG1B,mBAAA,CAA8B,QArBjC2B,UAAA,EAAAC,gBAAA,CAqBmBX,IAAI,kB;kCAETf,MAAA,CAAA2B,YAAY,QAAQ3B,MAAA,CAAA4B,UAAU,I,cAA1C9B,mBAAA,CAEO,QAFP+B,UAEO,EAAAH,gBAAA,CADH1B,MAAA,CAAA2B,YAAY,oBAxBlBG,mBAAA,e,yBAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}