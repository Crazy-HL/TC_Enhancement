{"ast":null,"code":"import { computed } from \"vue\";\nexport default {\n  __name: 'CommentStats',\n  props: {\n    comments: {\n      type: Array,\n      required: true\n    },\n    showStandpoint: {\n      type: Boolean,\n      default: true\n    },\n    showType: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 类型相关方法\n    const getCommentType = comment => {\n      return comment?.comment_type || 1;\n    };\n    const getCommentTypeLabel = comment => {\n      const type = getCommentType(comment);\n      const types = {\n        1: \"陈述\",\n        2: \"疑问\",\n        3: \"感叹\",\n        4: \"建议\",\n        5: \"讽刺\"\n      };\n      return types[type] || \"陈述\";\n    };\n\n    // 类型数据计算\n    const typeStats = computed(() => {\n      const stats = {\n        statement: 0,\n        question: 0,\n        exclamation: 0,\n        suggestion: 0,\n        sarcasm: 0,\n        total: 0\n      };\n      props.comments.forEach(comment => {\n        const type = getCommentType(comment);\n        if (type === 1) stats.statement++;else if (type === 2) stats.question++;else if (type === 3) stats.exclamation++;else if (type === 4) stats.suggestion++;else if (type === 5) stats.sarcasm++;\n        stats.total++;\n      });\n      return stats;\n    });\n\n    // 类型饼图tooltip\n    const typeTooltip = computed(() => {\n      const {\n        statement,\n        question,\n        exclamation,\n        suggestion,\n        sarcasm,\n        total\n      } = typeStats.value;\n      if (total === 0) return \"无类型数据\";\n      return `陈述 ${statement} (${Math.round(statement / total * 100)}%)\\n\n疑问 ${question} (${Math.round(question / total * 100)}%)\\n\n感叹 ${exclamation} (${Math.round(exclamation / total * 100)}%)\\n\n建议 ${suggestion} (${Math.round(suggestion / total * 100)}%)\\n\n讽刺 ${sarcasm} (${Math.round(sarcasm / total * 100)}%)`;\n    });\n\n    // 类型饼图样式\n    const pieChartStyle = computed(() => {\n      const {\n        statement,\n        question,\n        exclamation,\n        suggestion,\n        sarcasm,\n        total\n      } = typeStats.value;\n      if (total === 0) return {};\n      const statementPct = statement / total * 100;\n      const questionPct = question / total * 100;\n      const exclamationPct = exclamation / total * 100;\n      const suggestionPct = suggestion / total * 100;\n      const sarcasmPct = sarcasm / total * 100;\n      return {\n        background: `conic-gradient(\n      #4285f4 0% ${statementPct}%, \n      #ea4335 ${statementPct}% ${statementPct + questionPct}%, \n      #34a853 ${statementPct + questionPct}% ${statementPct + questionPct + exclamationPct}%, \n      #9c27b0 ${statementPct + questionPct + exclamationPct}% ${statementPct + questionPct + exclamationPct + suggestionPct}%, \n      #ff9800 ${statementPct + questionPct + exclamationPct + suggestionPct}% 100%\n    )`\n      };\n    });\n\n    // 立场数据计算\n    const standpointStats = computed(() => {\n      const stats = {\n        support: 0,\n        oppose: 0,\n        neutral: 0,\n        total: 0\n      };\n      props.comments.forEach(comment => {\n        if (comment.standpoint === 1) stats.support++;else if (comment.standpoint === -1) stats.oppose++;else stats.neutral++;\n        stats.total++;\n      });\n      return stats;\n    });\n\n    // 立场tooltip\n    const standpointTooltip = computed(() => {\n      const {\n        support,\n        oppose,\n        neutral,\n        total\n      } = standpointStats.value;\n      if (total === 0) return \"无立场数据\";\n      const supportPct = Math.round(support / total * 100);\n      const opposePct = Math.round(oppose / total * 100);\n      const neutralPct = Math.round(neutral / total * 100);\n      return `支持 ${supportPct}% | 中立 ${neutralPct}% | 反对 ${opposePct}%`;\n    });\n\n    // 立场图表样式\n    const standpointStyle = computed(() => {\n      const {\n        support,\n        oppose,\n        neutral,\n        total\n      } = standpointStats.value;\n      if (total === 0) return {};\n      const supportHeight = Math.round(support / total * 100);\n      const neutralHeight = Math.round(neutral / total * 100);\n      const opposeHeight = Math.round(oppose / total * 100); // 修复了缺少的右括号\n\n      return {\n        \"--support-height\": `${supportHeight}%`,\n        \"--neutral-height\": `${neutralHeight}%`,\n        \"--oppose-height\": `${opposeHeight}%`\n      };\n    });\n    const __returned__ = {\n      props,\n      getCommentType,\n      getCommentTypeLabel,\n      typeStats,\n      typeTooltip,\n      pieChartStyle,\n      standpointStats,\n      standpointTooltip,\n      standpointStyle,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","getCommentType","comment","comment_type","getCommentTypeLabel","type","types","typeStats","stats","statement","question","exclamation","suggestion","sarcasm","total","comments","forEach","typeTooltip","value","Math","round","pieChartStyle","statementPct","questionPct","exclamationPct","suggestionPct","sarcasmPct","background","standpointStats","support","oppose","neutral","standpoint","standpointTooltip","supportPct","opposePct","neutralPct","standpointStyle","supportHeight","neutralHeight","opposeHeight"],"sources":["D:/ZhiHu/zhihu-bullet/wikitable-vue/client/src/components/CommentStats.vue"],"sourcesContent":["<template>\r\n\t<span class=\"comment-stats\">\r\n\t\t<!-- 立场堆叠图 (迷你纵向) -->\r\n\t\t<span\r\n\t\t\tv-if=\"showStandpoint\"\r\n\t\t\tclass=\"standpoint-chart\"\r\n\t\t\t:title=\"standpointTooltip\"\r\n\t\t\t:style=\"standpointStyle\">\r\n\t\t\t<span class=\"stacked-bar\">\r\n\t\t\t\t<span class=\"bar-segment support\"></span>\r\n\t\t\t\t<span class=\"bar-segment neutral\"></span>\r\n\t\t\t\t<span class=\"bar-segment oppose\"></span>\r\n\t\t\t</span>\r\n\t\t</span>\r\n\r\n\t\t<!-- 类型饼图 -->\r\n\t\t<span\r\n\t\t\tv-if=\"showType\"\r\n\t\t\tclass=\"type-pie-chart\"\r\n\t\t\t:style=\"pieChartStyle\"\r\n\t\t\t:title=\"typeTooltip\">\r\n\t\t</span>\r\n\t</span>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcomments: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tshowStandpoint: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tshowType: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t}\r\n\t});\r\n\r\n\t// 类型相关方法\r\n\tconst getCommentType = comment => {\r\n\t\treturn comment?.comment_type || 1;\r\n\t};\r\n\r\n\tconst getCommentTypeLabel = comment => {\r\n\t\tconst type = getCommentType(comment);\r\n\t\tconst types = {\r\n\t\t\t1: \"陈述\",\r\n\t\t\t2: \"疑问\",\r\n\t\t\t3: \"感叹\",\r\n\t\t\t4: \"建议\",\r\n\t\t\t5: \"讽刺\"\r\n\t\t};\r\n\t\treturn types[type] || \"陈述\";\r\n\t};\r\n\r\n\t// 类型数据计算\r\n\tconst typeStats = computed(() => {\r\n\t\tconst stats = {\r\n\t\t\tstatement: 0,\r\n\t\t\tquestion: 0,\r\n\t\t\texclamation: 0,\r\n\t\t\tsuggestion: 0,\r\n\t\t\tsarcasm: 0,\r\n\t\t\ttotal: 0\r\n\t\t};\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tconst type = getCommentType(comment);\r\n\t\t\tif (type === 1) stats.statement++;\r\n\t\t\telse if (type === 2) stats.question++;\r\n\t\t\telse if (type === 3) stats.exclamation++;\r\n\t\t\telse if (type === 4) stats.suggestion++;\r\n\t\t\telse if (type === 5) stats.sarcasm++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn stats;\r\n\t});\r\n\r\n\t// 类型饼图tooltip\r\n\tconst typeTooltip = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return \"无类型数据\";\r\n\r\n\t\treturn `陈述 ${statement} (${Math.round((statement / total) * 100)}%)\\n\r\n疑问 ${question} (${Math.round((question / total) * 100)}%)\\n\r\n感叹 ${exclamation} (${Math.round((exclamation / total) * 100)}%)\\n\r\n建议 ${suggestion} (${Math.round((suggestion / total) * 100)}%)\\n\r\n讽刺 ${sarcasm} (${Math.round((sarcasm / total) * 100)}%)`;\r\n\t});\r\n\r\n\t// 类型饼图样式\r\n\tconst pieChartStyle = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return {};\r\n\r\n\t\tconst statementPct = (statement / total) * 100;\r\n\t\tconst questionPct = (question / total) * 100;\r\n\t\tconst exclamationPct = (exclamation / total) * 100;\r\n\t\tconst suggestionPct = (suggestion / total) * 100;\r\n\t\tconst sarcasmPct = (sarcasm / total) * 100;\r\n\r\n\t\treturn {\r\n\t\t\tbackground: `conic-gradient(\r\n      #4285f4 0% ${statementPct}%, \r\n      #ea4335 ${statementPct}% ${statementPct + questionPct}%, \r\n      #34a853 ${statementPct + questionPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct\r\n\t\t\t}%, \r\n      #9c27b0 ${statementPct + questionPct + exclamationPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t}%, \r\n      #ff9800 ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t}% 100%\r\n    )`\r\n\t\t};\r\n\t});\r\n\r\n\t// 立场数据计算\r\n\tconst standpointStats = computed(() => {\r\n\t\tconst stats = { support: 0, oppose: 0, neutral: 0, total: 0 };\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tif (comment.standpoint === 1) stats.support++;\r\n\t\t\telse if (comment.standpoint === -1) stats.oppose++;\r\n\t\t\telse stats.neutral++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn stats;\r\n\t});\r\n\r\n\t// 立场tooltip\r\n\tconst standpointTooltip = computed(() => {\r\n\t\tconst { support, oppose, neutral, total } = standpointStats.value;\r\n\t\tif (total === 0) return \"无立场数据\";\r\n\r\n\t\tconst supportPct = Math.round((support / total) * 100);\r\n\t\tconst opposePct = Math.round((oppose / total) * 100);\r\n\t\tconst neutralPct = Math.round((neutral / total) * 100);\r\n\r\n\t\treturn `支持 ${supportPct}% | 中立 ${neutralPct}% | 反对 ${opposePct}%`;\r\n\t});\r\n\r\n\t// 立场图表样式\r\n\tconst standpointStyle = computed(() => {\r\n\t\tconst { support, oppose, neutral, total } = standpointStats.value;\r\n\t\tif (total === 0) return {};\r\n\r\n\t\tconst supportHeight = Math.round((support / total) * 100);\r\n\t\tconst neutralHeight = Math.round((neutral / total) * 100);\r\n\t\tconst opposeHeight = Math.round((oppose / total) * 100); // 修复了缺少的右括号\r\n\r\n\t\treturn {\r\n\t\t\t\"--support-height\": `${supportHeight}%`,\r\n\t\t\t\"--neutral-height\": `${neutralHeight}%`,\r\n\t\t\t\"--oppose-height\": `${opposeHeight}%`\r\n\t\t};\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.comment-stats {\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: center;\r\n\t\tvertical-align: middle;\r\n\t\tgap: 4px;\r\n\t\tmargin: 0 2px;\r\n\t\tline-height: 1;\r\n\t}\r\n\r\n\t/* 迷你立场堆叠图 (纵向) */\r\n\t.standpoint-chart {\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: flex-end;\r\n\t\twidth: 8px;\r\n\t\theight: 16px;\r\n\t}\r\n\r\n\t.stacked-bar {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tgap: 1px;\r\n\t}\r\n\r\n\t.bar-segment {\r\n\t\twidth: 100%;\r\n\t\tmin-height: 1px;\r\n\t\ttransition: height 0.2s ease;\r\n\t}\r\n\r\n\t.bar-segment.support {\r\n\t\tbackground-color: #ccebc5;\r\n\t\theight: var(--support-height, 0%);\r\n\t}\r\n\r\n\t.bar-segment.neutral {\r\n\t\tbackground-color: #b3cde3;\r\n\t\theight: var(--neutral-height, 0%);\r\n\t}\r\n\r\n\t.bar-segment.oppose {\r\n\t\tbackground-color: #fbb4ae;\r\n\t\theight: var(--oppose-height, 0%);\r\n\t}\r\n\r\n\t/* 类型饼图 */\r\n\t.type-pie-chart {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground: conic-gradient(#4285f4 0% 100%);\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}