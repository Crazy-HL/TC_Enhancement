{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-210a5d07\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"title\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 原有模板内容保持不变 \"), _ctx.showHighlight && _ctx.word in _ctx.highFrequencyWords ? (_openBlock(), _createElementBlock(\"span\", {\n    key: 0,\n    class: \"circled-word\",\n    style: _normalizeStyle({\n      '--stroke-width': $options.getStrokeWidth(_ctx.highFrequencyWords[_ctx.word]),\n      '--circle-color': _ctx.hasComments ? _ctx.commentColor : '#FFEB3B'\n    }),\n    title: `${_ctx.word} (出现 ${_ctx.highFrequencyWords[_ctx.word]} 次)`\n  }, _toDisplayString(_ctx.word), 13 /* TEXT, STYLE, PROPS */, _hoisted_1)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 其余模板内容 \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createCommentVNode","_ctx","showHighlight","word","highFrequencyWords","key","class","style","_normalizeStyle","$options","getStrokeWidth","hasComments","commentColor","title","_hoisted_1"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\HighFrequencyLegend.vue"],"sourcesContent":["<template>\r\n\t<!-- 原有模板内容保持不变 -->\r\n\t<span\r\n\t\tv-if=\"showHighlight && word in highFrequencyWords\"\r\n\t\tclass=\"circled-word\"\r\n\t\t:style=\"{\r\n\t\t\t'--stroke-width': getStrokeWidth(highFrequencyWords[word]),\r\n\t\t\t'--circle-color': hasComments ? commentColor : '#FFEB3B'\r\n\t\t}\"\r\n\t\t:title=\"`${word} (出现 ${highFrequencyWords[word]} 次)`\">\r\n\t\t{{ word }}\r\n\t</span>\r\n\t<!-- 其余模板内容 -->\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tmethods: {\r\n\t\t\tgetStrokeWidth(frequency) {\r\n\t\t\t\t// 根据频率计算线条粗细，控制在1px到4px之间\r\n\t\t\t\tconst minFrequency = 1;\r\n\t\t\t\tconst maxFrequency = Math.max(\r\n\t\t\t\t\t...Object.values(this.highFrequencyWords)\r\n\t\t\t\t);\r\n\t\t\t\tconst minWidth = 1;\r\n\t\t\t\tconst maxWidth = 4;\r\n\r\n\t\t\t\t// 线性映射频率到线条宽度\r\n\t\t\t\tconst width =\r\n\t\t\t\t\tminWidth +\r\n\t\t\t\t\t((frequency - minFrequency) * (maxWidth - minWidth)) /\r\n\t\t\t\t\t\t(maxFrequency - minFrequency);\r\n\r\n\t\t\t\t// 确保在范围内\r\n\t\t\t\treturn Math.min(maxWidth, Math.max(minWidth, width)) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.circled-word {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline-block;\r\n\t\tpadding: 0 2px;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t.circled-word::before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: calc(100% + 8px);\r\n\t\theight: calc(100% + 4px);\r\n\t\tborder: var(--stroke-width) solid var(--circle-color);\r\n\t\tborder-radius: 50%;\r\n\t\tbox-sizing: border-box;\r\n\t\tz-index: -1;\r\n\t\topacity: 0.8;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.circled-word:hover::before {\r\n\t\topacity: 1;\r\n\t\tbox-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;;uBAAAA,mBAAA,CAAAC,SAAA,SACCC,mBAAA,gBAAmB,EAEZC,IAAA,CAAAC,aAAa,IAAID,IAAA,CAAAE,IAAI,IAAIF,IAAA,CAAAG,kBAAkB,I,cADlDN,mBAAA,CASO;IAXRO,GAAA;IAIEC,KAAK,EAAC,cAAc;IACnBC,KAAK,EALRC,eAAA;wBAKkCC,QAAA,CAAAC,cAAc,CAACT,IAAA,CAAAG,kBAAkB,CAACH,IAAA,CAAAE,IAAI;wBAA0BF,IAAA,CAAAU,WAAW,GAAGV,IAAA,CAAAW,YAAY;;IAIzHC,KAAK,KAAKZ,IAAA,CAAAE,IAAI,QAAQF,IAAA,CAAAG,kBAAkB,CAACH,IAAA,CAAAE,IAAI;sBAC3CF,IAAA,CAAAE,IAAI,gCAVTW,UAAA,KAAAd,mBAAA,gBAYCA,mBAAA,YAAe,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}