{"ast":null,"code":"import { computed } from \"vue\";\nexport default {\n  __name: 'CommentStats',\n  props: {\n    comments: {\n      type: Array,\n      required: true\n    },\n    showStandpoint: {\n      type: Boolean,\n      default: true\n    },\n    showType: {\n      type: Boolean,\n      default: false\n    },\n    showEmotion: {\n      type: Boolean,\n      default: true\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 计算饼图大小 - 基于评论数量动态调整 (8px-16px)\n    const pieChartSize = computed(() => {\n      const count = props.comments.length;\n      if (count <= 1) return 8; // 最小尺寸\n      if (count >= 10) return 16; // 最大尺寸不超过行高\n      return 8 + Math.round(count / 10 * 8); // 线性增长\n    });\n\n    // 类型相关方法\n    const getCommentType = comment => {\n      return comment?.comment_type || 1;\n    };\n    const getCommentTypeLabel = comment => {\n      const type = getCommentType(comment);\n      const types = {\n        1: \"陈述\",\n        2: \"疑问\",\n        3: \"感叹\",\n        4: \"建议\",\n        5: \"讽刺\"\n      };\n      return types[type] || \"陈述\";\n    };\n\n    // 类型数据计算\n    const typeStats = computed(() => {\n      const stats = {\n        statement: 0,\n        question: 0,\n        exclamation: 0,\n        suggestion: 0,\n        sarcasm: 0,\n        total: 0\n      };\n      props.comments.forEach(comment => {\n        const type = getCommentType(comment);\n        if (type === 1) stats.statement++;else if (type === 2) stats.question++;else if (type === 3) stats.exclamation++;else if (type === 4) stats.suggestion++;else if (type === 5) stats.sarcasm++;\n        stats.total++;\n      });\n      return {\n        statement: stats.statement,\n        question: stats.question,\n        exclamation: stats.exclamation,\n        suggestion: stats.suggestion,\n        sarcasm: stats.sarcasm,\n        total: stats.total\n      };\n    });\n\n    // 类型tooltip\n    const typeTooltip = computed(() => {\n      const {\n        statement,\n        question,\n        exclamation,\n        suggestion,\n        sarcasm,\n        total\n      } = typeStats.value;\n      if (total === 0) return \"无类型数据\";\n      const statementPct = Math.round(statement / total * 100);\n      const questionPct = Math.round(question / total * 100);\n      const exclamationPct = Math.round(exclamation / total * 100);\n      const suggestionPct = Math.round(suggestion / total * 100);\n      const sarcasmPct = Math.round(sarcasm / total * 100);\n      return `陈述: ${statement} (${statementPct}%)\n疑问: ${question} (${questionPct}%)\n感叹: ${exclamation} (${exclamationPct}%)\n建议: ${suggestion} (${suggestionPct}%)\n讽刺: ${sarcasm} (${sarcasmPct}%)`;\n    });\n\n    // 饼图样式\n    const pieChartStyle = computed(() => {\n      const {\n        statement,\n        question,\n        exclamation,\n        suggestion,\n        sarcasm,\n        total\n      } = typeStats.value;\n      if (total === 0) return {};\n      const statementPct = statement / total * 100;\n      const questionPct = question / total * 100;\n      const exclamationPct = exclamation / total * 100;\n      const suggestionPct = suggestion / total * 100;\n      const sarcasmPct = sarcasm / total * 100;\n      return {\n        background: `conic-gradient(\n        #4285f4 0% ${statementPct}%,\n        #ea4335 ${statementPct}% ${statementPct + questionPct}%,\n        #34a853 ${statementPct + questionPct}% ${statementPct + questionPct + exclamationPct}%,\n        #9c27b0 ${statementPct + questionPct + exclamationPct}% ${statementPct + questionPct + exclamationPct + suggestionPct}%,\n        #ff9800 ${statementPct + questionPct + exclamationPct + suggestionPct}% 100%\n      )`\n      };\n    });\n\n    // 立场数据计算\n    const standpointStats = computed(() => {\n      const stats = {\n        support: 0,\n        oppose: 0,\n        neutral: 0,\n        total: 0\n      };\n      props.comments.forEach(comment => {\n        if (comment.standpoint === 1) stats.support++;else if (comment.standpoint === -1) stats.oppose++;else stats.neutral++;\n        stats.total++;\n      });\n      return stats;\n    });\n\n    // 立场tooltip\n    const standpointTooltip = computed(() => {\n      const {\n        support,\n        oppose,\n        neutral,\n        total\n      } = standpointStats.value;\n      if (total === 0) return \"无立场数据\";\n      const supportPct = Math.round(support / total * 100);\n      const opposePct = Math.round(oppose / total * 100);\n      const neutralPct = Math.round(neutral / total * 100);\n      return `支持 ${supportPct}% | 中立 ${neutralPct}% | 反对 ${opposePct}%`;\n    });\n\n    // 立场图表样式\n    const standpointStyle = computed(() => {\n      const {\n        support,\n        oppose,\n        neutral,\n        total\n      } = standpointStats.value;\n      if (total === 0) return {};\n      const supportHeight = Math.round(support / total * 100);\n      const neutralHeight = Math.round(neutral / total * 100);\n      const opposeHeight = Math.round(oppose / total * 100);\n      return {\n        \"--support-height\": `${supportHeight}%`,\n        \"--neutral-height\": `${neutralHeight}%`,\n        \"--oppose-height\": `${opposeHeight}%`\n      };\n    });\n    const __returned__ = {\n      props,\n      pieChartSize,\n      getCommentType,\n      getCommentTypeLabel,\n      typeStats,\n      typeTooltip,\n      pieChartStyle,\n      standpointStats,\n      standpointTooltip,\n      standpointStyle,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","pieChartSize","count","comments","length","Math","round","getCommentType","comment","comment_type","getCommentTypeLabel","type","types","typeStats","stats","statement","question","exclamation","suggestion","sarcasm","total","forEach","typeTooltip","value","statementPct","questionPct","exclamationPct","suggestionPct","sarcasmPct","pieChartStyle","background","standpointStats","support","oppose","neutral","standpoint","standpointTooltip","supportPct","opposePct","neutralPct","standpointStyle","supportHeight","neutralHeight","opposeHeight"],"sources":["D:/ZhiHu/zhihu-bullet/wikitable-vue/client/src/components/CommentStats.vue"],"sourcesContent":["<template>\r\n\t<span class=\"comment-stats\">\r\n\t\t<!-- 立场堆叠图 -->\r\n\t\t<span\r\n\t\t\tv-if=\"showStandpoint\"\r\n\t\t\tclass=\"standpoint-chart\"\r\n\t\t\t:title=\"standpointTooltip\"\r\n\t\t\t:style=\"standpointStyle\">\r\n\t\t\t<span class=\"stacked-bar\">\r\n\t\t\t\t<span class=\"bar-segment support\"></span>\r\n\t\t\t\t<span class=\"bar-segment neutral\"></span>\r\n\t\t\t\t<span class=\"bar-segment oppose\"></span>\r\n\t\t\t</span>\r\n\t\t</span>\r\n\r\n\t\t<!-- 类型饼图 -->\r\n\t\t<span\r\n\t\t\tv-if=\"showType\"\r\n\t\t\tclass=\"type-pie-chart\"\r\n\t\t\t:title=\"typeTooltip\"\r\n\t\t\t:style=\"{\r\n\t\t\t\t...pieChartStyle,\r\n\t\t\t\twidth: pieChartSize + 'px',\r\n\t\t\t\theight: pieChartSize + 'px'\r\n\t\t\t}\"></span>\r\n\t</span>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcomments: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tshowStandpoint: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tshowType: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tshowEmotion: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t}\r\n\t});\r\n\r\n\t// 计算饼图大小 - 基于评论数量动态调整 (8px-16px)\r\n\tconst pieChartSize = computed(() => {\r\n\t\tconst count = props.comments.length;\r\n\t\tif (count <= 1) return 8; // 最小尺寸\r\n\t\tif (count >= 10) return 16; // 最大尺寸不超过行高\r\n\t\treturn 8 + Math.round((count / 10) * 8); // 线性增长\r\n\t});\r\n\r\n\t// 类型相关方法\r\n\tconst getCommentType = comment => {\r\n\t\treturn comment?.comment_type || 1;\r\n\t};\r\n\r\n\tconst getCommentTypeLabel = comment => {\r\n\t\tconst type = getCommentType(comment);\r\n\t\tconst types = {\r\n\t\t\t1: \"陈述\",\r\n\t\t\t2: \"疑问\",\r\n\t\t\t3: \"感叹\",\r\n\t\t\t4: \"建议\",\r\n\t\t\t5: \"讽刺\"\r\n\t\t};\r\n\t\treturn types[type] || \"陈述\";\r\n\t};\r\n\r\n\t// 类型数据计算\r\n\tconst typeStats = computed(() => {\r\n\t\tconst stats = {\r\n\t\t\tstatement: 0,\r\n\t\t\tquestion: 0,\r\n\t\t\texclamation: 0,\r\n\t\t\tsuggestion: 0,\r\n\t\t\tsarcasm: 0,\r\n\t\t\ttotal: 0\r\n\t\t};\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tconst type = getCommentType(comment);\r\n\t\t\tif (type === 1) stats.statement++;\r\n\t\t\telse if (type === 2) stats.question++;\r\n\t\t\telse if (type === 3) stats.exclamation++;\r\n\t\t\telse if (type === 4) stats.suggestion++;\r\n\t\t\telse if (type === 5) stats.sarcasm++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tstatement: stats.statement,\r\n\t\t\tquestion: stats.question,\r\n\t\t\texclamation: stats.exclamation,\r\n\t\t\tsuggestion: stats.suggestion,\r\n\t\t\tsarcasm: stats.sarcasm,\r\n\t\t\ttotal: stats.total\r\n\t\t};\r\n\t});\r\n\r\n\t// 类型tooltip\r\n\tconst typeTooltip = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return \"无类型数据\";\r\n\r\n\t\tconst statementPct = Math.round((statement / total) * 100);\r\n\t\tconst questionPct = Math.round((question / total) * 100);\r\n\t\tconst exclamationPct = Math.round((exclamation / total) * 100);\r\n\t\tconst suggestionPct = Math.round((suggestion / total) * 100);\r\n\t\tconst sarcasmPct = Math.round((sarcasm / total) * 100);\r\n\r\n\t\treturn `陈述: ${statement} (${statementPct}%)\r\n疑问: ${question} (${questionPct}%)\r\n感叹: ${exclamation} (${exclamationPct}%)\r\n建议: ${suggestion} (${suggestionPct}%)\r\n讽刺: ${sarcasm} (${sarcasmPct}%)`;\r\n\t});\r\n\r\n\t// 饼图样式\r\n\tconst pieChartStyle = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return {};\r\n\r\n\t\tconst statementPct = (statement / total) * 100;\r\n\t\tconst questionPct = (question / total) * 100;\r\n\t\tconst exclamationPct = (exclamation / total) * 100;\r\n\t\tconst suggestionPct = (suggestion / total) * 100;\r\n\t\tconst sarcasmPct = (sarcasm / total) * 100;\r\n\r\n\t\treturn {\r\n\t\t\tbackground: `conic-gradient(\r\n        #4285f4 0% ${statementPct}%,\r\n        #ea4335 ${statementPct}% ${statementPct + questionPct}%,\r\n        #34a853 ${statementPct + questionPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct\r\n\t\t\t}%,\r\n        #9c27b0 ${statementPct + questionPct + exclamationPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t}%,\r\n        #ff9800 ${\r\n\t\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t\t}% 100%\r\n      )`\r\n\t\t};\r\n\t});\r\n\r\n\t// 立场数据计算\r\n\tconst standpointStats = computed(() => {\r\n\t\tconst stats = { support: 0, oppose: 0, neutral: 0, total: 0 };\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tif (comment.standpoint === 1) stats.support++;\r\n\t\t\telse if (comment.standpoint === -1) stats.oppose++;\r\n\t\t\telse stats.neutral++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn stats;\r\n\t});\r\n\r\n\t// 立场tooltip\r\n\tconst standpointTooltip = computed(() => {\r\n\t\tconst { support, oppose, neutral, total } = standpointStats.value;\r\n\t\tif (total === 0) return \"无立场数据\";\r\n\r\n\t\tconst supportPct = Math.round((support / total) * 100);\r\n\t\tconst opposePct = Math.round((oppose / total) * 100);\r\n\t\tconst neutralPct = Math.round((neutral / total) * 100);\r\n\r\n\t\treturn `支持 ${supportPct}% | 中立 ${neutralPct}% | 反对 ${opposePct}%`;\r\n\t});\r\n\r\n\t// 立场图表样式\r\n\tconst standpointStyle = computed(() => {\r\n\t\tconst { support, oppose, neutral, total } = standpointStats.value;\r\n\t\tif (total === 0) return {};\r\n\r\n\t\tconst supportHeight = Math.round((support / total) * 100);\r\n\t\tconst neutralHeight = Math.round((neutral / total) * 100);\r\n\t\tconst opposeHeight = Math.round((oppose / total) * 100);\r\n\r\n\t\treturn {\r\n\t\t\t\"--support-height\": `${supportHeight}%`,\r\n\t\t\t\"--neutral-height\": `${neutralHeight}%`,\r\n\t\t\t\"--oppose-height\": `${opposeHeight}%`\r\n\t\t};\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.comment-stats {\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: center;\r\n\t\tvertical-align: middle;\r\n\t\tgap: 4px;\r\n\t\tmargin: 0 2px;\r\n\t\tline-height: inherit;\r\n\t}\r\n\r\n\t/* 迷你立场堆叠图 (纵向) */\r\n\t.standpoint-chart {\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: flex-end;\r\n\t\twidth: 8px;\r\n\t\theight: 16px;\r\n\t}\r\n\r\n\t.stacked-bar {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tgap: 1px;\r\n\t}\r\n\r\n\t.bar-segment {\r\n\t\twidth: 100%;\r\n\t\tmin-height: 1px;\r\n\t\ttransition: height 0.2s ease;\r\n\t}\r\n\r\n\t.bar-segment.support {\r\n\t\tbackground-color: #ccebc5;\r\n\t\theight: var(--support-height, 0%);\r\n\t}\r\n\r\n\t.bar-segment.neutral {\r\n\t\tbackground-color: #b3cde3;\r\n\t\theight: var(--neutral-height, 0%);\r\n\t}\r\n\r\n\t.bar-segment.oppose {\r\n\t\tbackground-color: #fbb4ae;\r\n\t\theight: var(--oppose-height, 0%);\r\n\t}\r\n\r\n\t/* 类型饼图 - 确保垂直居中 */\r\n\t.type-pie-chart {\r\n\t\tdisplay: inline-block;\r\n\t\tborder-radius: 50%;\r\n\t\tvertical-align: middle;\r\n\t\tposition: relative;\r\n\t\ttop: 50%;\r\n\t\ttransform: translateY(-50%);\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}