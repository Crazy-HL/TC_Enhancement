{"ast":null,"code":"import { computed } from \"vue\";\nexport default {\n  __name: 'CommentStats',\n  props: {\n    comments: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 类型数据计算\n    const typeStats = computed(() => {\n      const stats = {\n        statement: 0,\n        question: 0,\n        exclamation: 0,\n        suggestion: 0,\n        sarcasm: 0,\n        total: 0\n      };\n      props.comments.forEach(comment => {\n        const type = comment.comment_type || 1;\n        if (type === 1) stats.statement++;else if (type === 2) stats.question++;else if (type === 3) stats.exclamation++;else if (type === 4) stats.suggestion++;else if (type === 5) stats.sarcasm++;\n        stats.total++;\n      });\n      return {\n        statement: stats.statement,\n        question: stats.question,\n        exclamation: stats.exclamation,\n        suggestion: stats.suggestion,\n        sarcasm: stats.sarcasm,\n        total: stats.total\n      };\n    });\n\n    // 饼图样式\n    const pieChartStyle = computed(() => {\n      const {\n        statement,\n        question,\n        exclamation,\n        suggestion,\n        sarcasm,\n        total\n      } = typeStats.value;\n      if (total === 0) return {\n        background: \"#f0f0f0\"\n      };\n      const statementPct = statement / total * 100;\n      const questionPct = question / total * 100;\n      const exclamationPct = exclamation / total * 100;\n      const suggestionPct = suggestion / total * 100;\n      const sarcasmPct = sarcasm / total * 100;\n      return {\n        background: `conic-gradient(\n      #4285f4 0% ${statementPct}%,\n      #ea4335 ${statementPct}% ${statementPct + questionPct}%,\n      #34a853 ${statementPct + questionPct}% ${statementPct + questionPct + exclamationPct}%,\n      #9c27b0 ${statementPct + questionPct + exclamationPct}% ${statementPct + questionPct + exclamationPct + suggestionPct}%,\n      #ff9800 ${statementPct + questionPct + exclamationPct + suggestionPct}% 100%\n    )`,\n        width: \"40px\",\n        height: \"40px\",\n        borderRadius: \"50%\"\n      };\n    });\n\n    // 类型图注\n    const typeLegend = [{\n      label: \"陈述\",\n      key: \"statement\",\n      color: \"#4285f4\"\n    }, {\n      label: \"疑问\",\n      key: \"question\",\n      color: \"#ea4335\"\n    }, {\n      label: \"感叹\",\n      key: \"exclamation\",\n      color: \"#34a853\"\n    }, {\n      label: \"建议\",\n      key: \"suggestion\",\n      color: \"#9c27b0\"\n    }, {\n      label: \"讽刺\",\n      key: \"sarcasm\",\n      color: \"#ff9800\"\n    }];\n    const __returned__ = {\n      props,\n      typeStats,\n      pieChartStyle,\n      typeLegend,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","typeStats","stats","statement","question","exclamation","suggestion","sarcasm","total","comments","forEach","comment","type","comment_type","pieChartStyle","value","background","statementPct","questionPct","exclamationPct","suggestionPct","sarcasmPct","width","height","borderRadius","typeLegend","label","key","color"],"sources":["D:/ZhiHu/zhihu-bullet/wikitable-vue/client/src/components/CommentStats.vue"],"sourcesContent":["<template>\r\n\t<div class=\"chart-legend-container\">\r\n\t\t<!-- 饼图图注 -->\r\n\t\t<div class=\"pie-legend\">\r\n\t\t\t<div class=\"pie-chart\" :style=\"pieChartStyle\"></div>\r\n\t\t\t<div class=\"legend-labels horizontal\">\r\n\t\t\t\t<div v-for=\"item in typeLegend\" :key=\"item.label\" class=\"legend-label\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"legend-color\"\r\n\t\t\t\t\t\t:style=\"{ backgroundColor: item.color }\"></span>\r\n\t\t\t\t\t<span class=\"legend-text\">{{ item.label }}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcomments: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true\r\n\t\t}\r\n\t});\r\n\r\n\t// 类型数据计算\r\n\tconst typeStats = computed(() => {\r\n\t\tconst stats = {\r\n\t\t\tstatement: 0,\r\n\t\t\tquestion: 0,\r\n\t\t\texclamation: 0,\r\n\t\t\tsuggestion: 0,\r\n\t\t\tsarcasm: 0,\r\n\t\t\ttotal: 0\r\n\t\t};\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tconst type = comment.comment_type || 1;\r\n\t\t\tif (type === 1) stats.statement++;\r\n\t\t\telse if (type === 2) stats.question++;\r\n\t\t\telse if (type === 3) stats.exclamation++;\r\n\t\t\telse if (type === 4) stats.suggestion++;\r\n\t\t\telse if (type === 5) stats.sarcasm++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tstatement: stats.statement,\r\n\t\t\tquestion: stats.question,\r\n\t\t\texclamation: stats.exclamation,\r\n\t\t\tsuggestion: stats.suggestion,\r\n\t\t\tsarcasm: stats.sarcasm,\r\n\t\t\ttotal: stats.total\r\n\t\t};\r\n\t});\r\n\r\n\t// 饼图样式\r\n\tconst pieChartStyle = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return { background: \"#f0f0f0\" };\r\n\r\n\t\tconst statementPct = (statement / total) * 100;\r\n\t\tconst questionPct = (question / total) * 100;\r\n\t\tconst exclamationPct = (exclamation / total) * 100;\r\n\t\tconst suggestionPct = (suggestion / total) * 100;\r\n\t\tconst sarcasmPct = (sarcasm / total) * 100;\r\n\r\n\t\treturn {\r\n\t\t\tbackground: `conic-gradient(\r\n      #4285f4 0% ${statementPct}%,\r\n      #ea4335 ${statementPct}% ${statementPct + questionPct}%,\r\n      #34a853 ${statementPct + questionPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct\r\n\t\t\t}%,\r\n      #9c27b0 ${statementPct + questionPct + exclamationPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t}%,\r\n      #ff9800 ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t}% 100%\r\n    )`,\r\n\t\t\twidth: \"40px\",\r\n\t\t\theight: \"40px\",\r\n\t\t\tborderRadius: \"50%\"\r\n\t\t};\r\n\t});\r\n\r\n\t// 类型图注\r\n\tconst typeLegend = [\r\n\t\t{ label: \"陈述\", key: \"statement\", color: \"#4285f4\" },\r\n\t\t{ label: \"疑问\", key: \"question\", color: \"#ea4335\" },\r\n\t\t{ label: \"感叹\", key: \"exclamation\", color: \"#34a853\" },\r\n\t\t{ label: \"建议\", key: \"suggestion\", color: \"#9c27b0\" },\r\n\t\t{ label: \"讽刺\", key: \"sarcasm\", color: \"#ff9800\" }\r\n\t];\r\n</script>\r\n\r\n<style scoped>\r\n\t.chart-legend-container {\r\n\t\tdisplay: flex;\r\n\t\tgap: 15px;\r\n\t}\r\n\r\n\t.pie-legend {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 8px;\r\n\t}\r\n\r\n\t.pie-chart {\r\n\t\twidth: 40px;\r\n\t\theight: 40px;\r\n\t\tborder-radius: 50%;\r\n\t\tflex-shrink: 0;\r\n\t\tbackground: #f0f0f0; /* 默认背景色 */\r\n\t}\r\n\r\n\t.legend-labels {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 4px;\r\n\t}\r\n\r\n\t.legend-labels.horizontal {\r\n\t\tflex-direction: row;\r\n\t\tflex-wrap: wrap;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.legend-label {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 1.2;\r\n\t\tmargin-right: 8px;\r\n\t}\r\n\r\n\t.legend-color {\r\n\t\twidth: 10px;\r\n\t\theight: 10px;\r\n\t\tborder-radius: 2px;\r\n\t\tflex-shrink: 0;\r\n\t\tdisplay: inline-block;\r\n\t}\r\n\r\n\t.legend-text {\r\n\t\twhite-space: nowrap;\r\n\t\tcolor: #555;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.pie-legend {\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: flex-start;\r\n\t\t}\r\n\r\n\t\t.legend-labels.horizontal {\r\n\t\t\tflex-direction: row;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\tgap: 8px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}