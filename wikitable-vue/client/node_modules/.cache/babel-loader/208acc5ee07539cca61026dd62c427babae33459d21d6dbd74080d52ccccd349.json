{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a0c44a0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"comment-stats\"\n};\nconst _hoisted_2 = [\"title\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"span\", _hoisted_1, [_createCommentVNode(\" 类型饼图 \"), $props.showType ? (_openBlock(), _createElementBlock(\"span\", {\n    key: 0,\n    class: \"type-pie-chart\",\n    title: $setup.typeTooltip,\n    style: _normalizeStyle($setup.pieChartStyle)\n  }, null, 12 /* STYLE, PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","$props","showType","key","title","$setup","typeTooltip","style","_normalizeStyle","pieChartStyle","_hoisted_2"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\CommentStats.vue"],"sourcesContent":["<template>\r\n\t<span class=\"comment-stats\">\r\n\t\t<!-- 类型饼图 -->\r\n\t\t<span\r\n\t\t\tv-if=\"showType\"\r\n\t\t\tclass=\"type-pie-chart\"\r\n\t\t\t:title=\"typeTooltip\"\r\n\t\t\t:style=\"pieChartStyle\"></span>\r\n\t</span>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcomments: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tshowType: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t}\r\n\t});\r\n\r\n\t// 获取评论类型\r\n\tconst getCommentType = comment => {\r\n\t\treturn comment?.comment_type || 1;\r\n\t};\r\n\r\n\t// 获取评论类型标签\r\n\tconst getCommentTypeLabel = comment => {\r\n\t\tconst type = getCommentType(comment);\r\n\t\tconst types = {\r\n\t\t\t1: \"陈述\",\r\n\t\t\t2: \"疑问\",\r\n\t\t\t3: \"感叹\",\r\n\t\t\t4: \"建议\",\r\n\t\t\t5: \"讽刺\"\r\n\t\t};\r\n\t\treturn types[type] || \"陈述\";\r\n\t};\r\n\r\n\t// 计算类型统计数据\r\n\tconst typeStats = computed(() => {\r\n\t\tconst stats = {\r\n\t\t\tstatement: 0,\r\n\t\t\tquestion: 0,\r\n\t\t\texclamation: 0,\r\n\t\t\tsuggestion: 0,\r\n\t\t\tsarcasm: 0,\r\n\t\t\ttotal: 0\r\n\t\t};\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tconst type = getCommentType(comment);\r\n\t\t\tif (type === 1) stats.statement++;\r\n\t\t\telse if (type === 2) stats.question++;\r\n\t\t\telse if (type === 3) stats.exclamation++;\r\n\t\t\telse if (type === 4) stats.suggestion++;\r\n\t\t\telse if (type === 5) stats.sarcasm++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tstatement: stats.statement,\r\n\t\t\tquestion: stats.question,\r\n\t\t\texclamation: stats.exclamation,\r\n\t\t\tsuggestion: stats.suggestion,\r\n\t\t\tsarcasm: stats.sarcasm,\r\n\t\t\ttotal: stats.total\r\n\t\t};\r\n\t});\r\n\r\n\t// 生成类型提示文本\r\n\tconst typeTooltip = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return \"无类型数据\";\r\n\r\n\t\tconst statementPct = Math.round((statement / total) * 100);\r\n\t\tconst questionPct = Math.round((question / total) * 100);\r\n\t\tconst exclamationPct = Math.round((exclamation / total) * 100);\r\n\t\tconst suggestionPct = Math.round((suggestion / total) * 100);\r\n\t\tconst sarcasmPct = Math.round((sarcasm / total) * 100);\r\n\r\n\t\treturn `陈述: ${statement} (${statementPct}%)\r\n疑问: ${question} (${questionPct}%)\r\n感叹: ${exclamation} (${exclamationPct}%)\r\n建议: ${suggestion} (${suggestionPct}%)\r\n讽刺: ${sarcasm} (${sarcasmPct}%)`;\r\n\t});\r\n\r\n\t// 生成饼图样式\r\n\tconst pieChartStyle = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return {};\r\n\r\n\t\tconst statementPct = (statement / total) * 100;\r\n\t\tconst questionPct = (question / total) * 100;\r\n\t\tconst exclamationPct = (exclamation / total) * 100;\r\n\t\tconst suggestionPct = (suggestion / total) * 100;\r\n\t\tconst sarcasmPct = (sarcasm / total) * 100;\r\n\r\n\t\treturn {\r\n\t\t\tbackground: `conic-gradient(\r\n        #4285f4 0% ${statementPct}%,\r\n        #ea4335 ${statementPct}% ${statementPct + questionPct}%,\r\n        #34a853 ${statementPct + questionPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct\r\n\t\t\t}%,\r\n        #9c27b0 ${statementPct + questionPct + exclamationPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t}%,\r\n        #ff9800 ${\r\n\t\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t\t}% 100%\r\n      )`\r\n\t\t};\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.comment-stats {\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: center;\r\n\t\tvertical-align: middle;\r\n\t\tgap: 4px;\r\n\t\tmargin: 0 2px;\r\n\t\tline-height: 1;\r\n\t}\r\n\r\n\t/* 类型饼图样式 */\r\n\t.type-pie-chart {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground: conic-gradient(#4285f4 0% 100%);\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAe;mBAD5B;;uBACCC,mBAAA,CAOO,QAPPC,UAOO,GANNC,mBAAA,UAAa,EAENC,MAAA,CAAAC,QAAQ,I,cADfJ,mBAAA,CAI+B;IAPjCK,GAAA;IAKGN,KAAK,EAAC,gBAAgB;IACrBO,KAAK,EAAEC,MAAA,CAAAC,WAAW;IAClBC,KAAK,EAPTC,eAAA,CAOWH,MAAA,CAAAI,aAAa;kCAPxBC,UAAA,KAAAV,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}