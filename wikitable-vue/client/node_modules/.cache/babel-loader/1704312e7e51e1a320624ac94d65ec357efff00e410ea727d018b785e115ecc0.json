{"ast":null,"code":"import { ref, onMounted, computed, watch, nextTick } from \"vue\";\nimport api from \"@/api\";\nimport CommentStats from \"./CommentStats.vue\";\n\n// 响应式数据\n\nexport default {\n  __name: 'ArticleContent',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const article = ref(null);\n    const sentences = ref([]);\n    const comments = ref([]);\n    const activeSentence = ref(null);\n    const showInlineComments = ref(true);\n    const showPieCharts = ref(true);\n    const showStackedCharts = ref(true);\n    const connectionStyle = ref({\n      left: \"0px\",\n      top: \"0px\",\n      width: \"0px\",\n      transform: \"rotate(0deg)\"\n    });\n\n    // 计算属性\n    const globalComments = computed(() => {\n      return comments.value?.filter(comment => comment.link === -1) || [];\n    });\n    const maxLikeCount = computed(() => {\n      return comments.value.length ? Math.max(...comments.value.map(c => c.like_count), 100) : 100;\n    });\n\n    // 方法\n    const getCommentsForSentence = index => {\n      return comments.value?.filter(comment => comment.link === index) || [];\n    };\n    const hasComments = index => {\n      return getCommentsForSentence(index).length > 0;\n    };\n    const getTopComment = index => {\n      const sentenceComments = getCommentsForSentence(index);\n      return sentenceComments.length ? [...sentenceComments].sort((a, b) => b.like_count - a.like_count)[0] : null;\n    };\n    const getSentenceClasses = index => {\n      const classes = {\n        \"has-comment\": hasComments(index),\n        active: activeSentence.value === index\n      };\n      if (hasComments(index)) {\n        const topComment = getTopComment(index);\n        if (topComment) {\n          classes[`comment-level-${getCommentLevel(index).level}`] = true;\n          classes[`comment-type-${getCommentType(topComment)}`] = true;\n        }\n      }\n      return classes;\n    };\n\n    // 其他方法...\n\n    onMounted(async () => {\n      try {\n        const [articleData, commentsData] = await Promise.all([api.get(\"article\"), api.get(\"comments\")]);\n        article.value = articleData[0] || null;\n        sentences.value = splitIntoSentences(article.value?.content_text || \"\");\n        comments.value = commentsData || [];\n      } catch (error) {\n        console.error(\"加载数据失败:\", error);\n      }\n    });\n    const __returned__ = {\n      article,\n      sentences,\n      comments,\n      activeSentence,\n      showInlineComments,\n      showPieCharts,\n      showStackedCharts,\n      connectionStyle,\n      globalComments,\n      maxLikeCount,\n      getCommentsForSentence,\n      hasComments,\n      getTopComment,\n      getSentenceClasses,\n      ref,\n      onMounted,\n      computed,\n      watch,\n      nextTick,\n      get api() {\n        return api;\n      },\n      CommentStats\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","watch","nextTick","api","CommentStats","article","sentences","comments","activeSentence","showInlineComments","showPieCharts","showStackedCharts","connectionStyle","left","top","width","transform","globalComments","value","filter","comment","link","maxLikeCount","length","Math","max","map","c","like_count","getCommentsForSentence","index","hasComments","getTopComment","sentenceComments","sort","a","b","getSentenceClasses","classes","active","topComment","getCommentLevel","level","getCommentType","articleData","commentsData","Promise","all","get","splitIntoSentences","content_text","error","console"],"sources":["D:/ZhiHu/zhihu-bullet/wikitable-vue/client/src/components/ArticleContent.vue"],"sourcesContent":["<template>\r\n\t<div class=\"article-container\">\r\n\t\t<!-- 顶部控制面板 -->\r\n\t\t<div class=\"control-panel\">\r\n\t\t\t<div class=\"control-group-container\">\r\n\t\t\t\t<div class=\"control-group\">\r\n\t\t\t\t\t<label class=\"icon-toggle\">\r\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"showInlineComments\" />\r\n\t\t\t\t\t\t<svg viewBox=\"0 0 24 24\" width=\"18\" height=\"18\">\r\n\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\t\t\t\t\td=\"M12,3C17,3 21,7 21,12C21,17 17,21 12,21C7,21 3,17 3,12C3,7 7,3 12,3M12,7C10.9,7 10,7.9 10,9C10,10.1 10.9,11 12,11C13.1,11 14,10.1 14,9C14,7.9 13.1,7 12,7M12,15.2C10.67,15.2 9.5,14.5 8.8,13.5C8.9,12.6 9.8,12 10.9,12C11.5,12 12.1,12.2 12.5,12.6C12.9,13 13.3,13.4 13.6,13.8C14.4,14.4 15.5,14.5 16.4,14.1C16.9,13.9 17.4,13.5 17.7,13C16.5,14.4 14.4,15.2 12,15.2Z\" />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<span class=\"control-label\">内联评论</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- 其他控制按钮... -->\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"slider-group\" v-if=\"showInlineComments\">\r\n\t\t\t\t<!-- 滑动条内容... -->\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"comment-type-legend\">\r\n\t\t\t\t<!-- 图例内容... -->\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 主要内容区 -->\r\n\t\t<div class=\"main-content\">\r\n\t\t\t<!-- 全局评论面板 -->\r\n\t\t\t<div class=\"panel global-comments-panel\" v-if=\"globalComments.length > 0\">\r\n\t\t\t\t<!-- 全局评论内容... -->\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 文章内容面板 -->\r\n\t\t\t<div class=\"panel article-panel\" v-if=\"article\" ref=\"articleContainer\">\r\n\t\t\t\t<template v-if=\"article\">\r\n\t\t\t\t\t<h1 class=\"article-title\">{{ article.title }}</h1>\r\n\t\t\t\t\t<div class=\"article-meta\">\r\n\t\t\t\t\t\t<span class=\"author\">作者：{{ article.user_nickname }}</span>\r\n\t\t\t\t\t\t<span class=\"publish-time\"\r\n\t\t\t\t\t\t\t>发布时间：{{ formatTime(article.created_time) }}</span\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<span class=\"update-time\"\r\n\t\t\t\t\t\t\t>更新时间：{{ formatTime(article.updated_time) }}</span\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"article-content\" v-if=\"sentences.length\">\r\n\t\t\t\t\t\t<template v-for=\"(sentence, index) in sentences\" :key=\"index\">\r\n\t\t\t\t\t\t\t<CommentStats\r\n\t\t\t\t\t\t\t\tv-if=\"hasComments(index) && showStackedCharts\"\r\n\t\t\t\t\t\t\t\t:comments=\"getCommentsForSentence(index)\"\r\n\t\t\t\t\t\t\t\t:show-emotion=\"false\"\r\n\t\t\t\t\t\t\t\tclass=\"before-stats\" />\r\n\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclass=\"sentence\"\r\n\t\t\t\t\t\t\t\t:id=\"'sentence-' + index\"\r\n\t\t\t\t\t\t\t\t:class=\"getSentenceClasses(index)\"\r\n\t\t\t\t\t\t\t\t@mouseenter=\"highlightComments(index)\"\r\n\t\t\t\t\t\t\t\t@mouseleave=\"unhighlightComments\">\r\n\t\t\t\t\t\t\t\t{{ sentence }}\r\n\t\t\t\t\t\t\t\t<sup v-if=\"hasComments(index)\" class=\"annotation-marker\">\r\n\t\t\t\t\t\t\t\t\t{{ getCommentsForSentence(index).length }}\r\n\t\t\t\t\t\t\t\t</sup>\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t<CommentStats\r\n\t\t\t\t\t\t\t\tv-if=\"hasComments(index) && showPieCharts\"\r\n\t\t\t\t\t\t\t\t:comments=\"getCommentsForSentence(index)\"\r\n\t\t\t\t\t\t\t\t:show-standpoint=\"false\"\r\n\t\t\t\t\t\t\t\t:show-type=\"true\"\r\n\t\t\t\t\t\t\t\tclass=\"after-stats\" />\r\n\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tv-if=\"showInlineComments && showTopCommentInline(index)\"\r\n\t\t\t\t\t\t\t\tclass=\"inline-comment\"\r\n\t\t\t\t\t\t\t\t:class=\"`comment-type-${getCommentType(getTopComment(index))}`\">\r\n\t\t\t\t\t\t\t\t【{{ getCommentTypeLabel(getTopComment(index)) }}：{{\r\n\t\t\t\t\t\t\t\t\tformatCommentContent(getTopComment(index).content)\r\n\t\t\t\t\t\t\t\t}}】\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 注释面板 -->\r\n\t\t\t<div\r\n\t\t\t\tclass=\"panel annotation-panel\"\r\n\t\t\t\tv-if=\"activeSentence !== null && hasComments(activeSentence)\">\r\n\t\t\t\t<!-- 注释内容... -->\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 连接线 -->\r\n\t\t<div class=\"connection-container\" ref=\"connectionContainer\">\r\n\t\t\t<svg\r\n\t\t\t\tclass=\"connection-line\"\r\n\t\t\t\tv-if=\"activeSentence !== null && hasComments(activeSentence)\"\r\n\t\t\t\t:style=\"connectionStyle\">\r\n\t\t\t\t<line\r\n\t\t\t\t\tx1=\"0\"\r\n\t\t\t\t\ty1=\"0\"\r\n\t\t\t\t\tx2=\"100%\"\r\n\t\t\t\t\ty2=\"0\"\r\n\t\t\t\t\tstroke=\"#FF5722\"\r\n\t\t\t\t\tstroke-width=\"2\"\r\n\t\t\t\t\tstroke-dasharray=\"4,2\" />\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, computed, watch, nextTick } from \"vue\";\r\n\timport api from \"@/api\";\r\n\timport CommentStats from \"./CommentStats.vue\";\r\n\r\n\t// 响应式数据\r\n\tconst article = ref(null);\r\n\tconst sentences = ref([]);\r\n\tconst comments = ref([]);\r\n\tconst activeSentence = ref(null);\r\n\tconst showInlineComments = ref(true);\r\n\tconst showPieCharts = ref(true);\r\n\tconst showStackedCharts = ref(true);\r\n\tconst connectionStyle = ref({\r\n\t\tleft: \"0px\",\r\n\t\ttop: \"0px\",\r\n\t\twidth: \"0px\",\r\n\t\ttransform: \"rotate(0deg)\"\r\n\t});\r\n\r\n\t// 计算属性\r\n\tconst globalComments = computed(() => {\r\n\t\treturn comments.value?.filter(comment => comment.link === -1) || [];\r\n\t});\r\n\r\n\tconst maxLikeCount = computed(() => {\r\n\t\treturn comments.value.length\r\n\t\t\t? Math.max(...comments.value.map(c => c.like_count), 100)\r\n\t\t\t: 100;\r\n\t});\r\n\r\n\t// 方法\r\n\tconst getCommentsForSentence = index => {\r\n\t\treturn comments.value?.filter(comment => comment.link === index) || [];\r\n\t};\r\n\r\n\tconst hasComments = index => {\r\n\t\treturn getCommentsForSentence(index).length > 0;\r\n\t};\r\n\r\n\tconst getTopComment = index => {\r\n\t\tconst sentenceComments = getCommentsForSentence(index);\r\n\t\treturn sentenceComments.length\r\n\t\t\t? [...sentenceComments].sort((a, b) => b.like_count - a.like_count)[0]\r\n\t\t\t: null;\r\n\t};\r\n\r\n\tconst getSentenceClasses = index => {\r\n\t\tconst classes = {\r\n\t\t\t\"has-comment\": hasComments(index),\r\n\t\t\tactive: activeSentence.value === index\r\n\t\t};\r\n\r\n\t\tif (hasComments(index)) {\r\n\t\t\tconst topComment = getTopComment(index);\r\n\t\t\tif (topComment) {\r\n\t\t\t\tclasses[`comment-level-${getCommentLevel(index).level}`] = true;\r\n\t\t\t\tclasses[`comment-type-${getCommentType(topComment)}`] = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn classes;\r\n\t};\r\n\r\n\t// 其他方法...\r\n\r\n\tonMounted(async () => {\r\n\t\ttry {\r\n\t\t\tconst [articleData, commentsData] = await Promise.all([\r\n\t\t\t\tapi.get(\"article\"),\r\n\t\t\t\tapi.get(\"comments\")\r\n\t\t\t]);\r\n\r\n\t\t\tarticle.value = articleData[0] || null;\r\n\t\t\tsentences.value = splitIntoSentences(article.value?.content_text || \"\");\r\n\t\t\tcomments.value = commentsData || [];\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"加载数据失败:\", error);\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变... */\r\n\r\n\t/* 新增的评论类型样式 */\r\n\t.sentence.has-comment.comment-type-1 {\r\n\t\ttext-decoration: blue wavy underline;\r\n\t\ttext-decoration-thickness: 2px;\r\n\t}\r\n\r\n\t.sentence.has-comment.comment-type-2 {\r\n\t\toutline: 2px dotted #ea4335;\r\n\t\tborder-radius: 50%;\r\n\t\tpadding: 0 2px;\r\n\t}\r\n\r\n\t.sentence.has-comment.comment-type-3 {\r\n\t\ttext-decoration: green double underline;\r\n\t\ttext-decoration-thickness: 2px;\r\n\t}\r\n\r\n\t.sentence.has-comment.comment-type-4 {\r\n\t\ttext-decoration: purple solid underline;\r\n\t\ttext-decoration-thickness: 2px;\r\n\t}\r\n\r\n\t.sentence.has-comment.comment-type-5 {\r\n\t\toutline: 2px solid #ff9800;\r\n\t\tborder-radius: 4px;\r\n\t\tpadding: 0 2px;\r\n\t}\r\n\r\n\t/* 内联评论样式 */\r\n\t.inline-comment {\r\n\t\tfont-size: 0.85em;\r\n\t\tmargin-left: 0.5em;\r\n\t}\r\n\r\n\t.inline-comment.comment-type-1 {\r\n\t\tcolor: #4285f4;\r\n\t}\r\n\r\n\t.inline-comment.comment-type-2 {\r\n\t\tcolor: #ea4335;\r\n\t}\r\n\r\n\t.inline-comment.comment-type-3 {\r\n\t\tcolor: #34a853;\r\n\t}\r\n\r\n\t.inline-comment.comment-type-4 {\r\n\t\tcolor: #9c27b0;\r\n\t}\r\n\r\n\t.inline-comment.comment-type-5 {\r\n\t\tcolor: #ff9800;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}