{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ec3c90c2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = [\"title\"];\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"annotation-marker\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"span\", {\n    class: _normalizeClass([\"sentence\", {\n      'has-comments': _ctx.hasComments,\n      'active-sentence': _ctx.isActive,\n      'highlight-content': _ctx.highlightContent && _ctx.hasComments\n    }]),\n    id: 'sentence-' + _ctx.sentenceIndex,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.handleClick && _ctx.handleClick(...arguments);\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tokens, (token, tokenIndex) => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: tokenIndex\n    }, [_ctx.showHighlight && _ctx.isHighFrequencyWord(token.text) ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"span\", {\n      class: \"circled-word\",\n      style: _normalizeStyle({\n        '--stroke-width': _ctx.getStrokeWidth(token.text),\n        '--circle-color': _ctx.highlightColor\n      }),\n      title: `${token.text} (出现 ${_ctx.highFrequencyWords[token.text]} 次)`\n    }, _toDisplayString(token.text), 13 /* TEXT, STYLE, PROPS */, _hoisted_2), token.trailing ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(token.trailing), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createTextVNode(_toDisplayString(token.text) + _toDisplayString(token.trailing), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)), _ctx.commentCount > 0 && _ctx.showMarker ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(_ctx.commentCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 10 /* CLASS, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_normalizeClass","_ctx","hasComments","isActive","highlightContent","id","sentenceIndex","onClick","_cache","handleClick","arguments","_Fragment","_renderList","tokens","token","tokenIndex","showHighlight","isHighFrequencyWord","text","_createElementVNode","style","_normalizeStyle","getStrokeWidth","highlightColor","title","highFrequencyWords","_hoisted_2","trailing","_hoisted_3","_toDisplayString","_createCommentVNode","_createTextVNode","commentCount","showMarker","_hoisted_4","_hoisted_1"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\HighFrequencyWords.vue"],"sourcesContent":["<template>\r\n\t<span\r\n\t\tclass=\"sentence\"\r\n\t\t:id=\"'sentence-' + sentenceIndex\"\r\n\t\t:class=\"{\r\n\t\t\t'has-comments': hasComments,\r\n\t\t\t'active-sentence': isActive,\r\n\t\t\t'highlight-content': highlightContent && hasComments\r\n\t\t}\"\r\n\t\t@click=\"handleClick\">\r\n\t\t<template v-for=\"(token, tokenIndex) in tokens\" :key=\"tokenIndex\">\r\n\t\t\t<template v-if=\"showHighlight && isHighFrequencyWord(token.text)\">\r\n\t\t\t\t<span\r\n\t\t\t\t\tclass=\"circled-word\"\r\n\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\t'--stroke-width': getStrokeWidth(token.text),\r\n\t\t\t\t\t\t'--circle-color': highlightColor\r\n\t\t\t\t\t}\"\r\n\t\t\t\t\t:title=\"`${token.text} (出现 ${highFrequencyWords[token.text]} 次)`\">\r\n\t\t\t\t\t{{ token.text }}\r\n\t\t\t\t</span>\r\n\t\t\t\t<span v-if=\"token.trailing\">{{ token.trailing }}</span>\r\n\t\t\t</template>\r\n\t\t\t<template v-else> {{ token.text }}{{ token.trailing }} </template>\r\n\t\t</template>\r\n\t\t<span v-if=\"commentCount > 0 && showMarker\" class=\"annotation-marker\">\r\n\t\t\t{{ commentCount }}\r\n\t\t</span>\r\n\t</span>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t  props: {\r\n\t    sentence: String,\r\n\t    sentenceIndex: Number,\r\n\t    highFrequencyWords: {\r\n\t      type: Object,\r\n\t      default: () => ({})\r\n\t    },\r\n\t    showHighlight: Boolean,\r\n\t    hasComments: Boolean,\r\n\t    commentLevel: Object,\r\n\t    highlightContent: Boolean,\r\n\t    isActive: Boolean,\r\n\t    showMarker: Boolean,\r\n\t    commentCount: Number\r\n\t  },\r\n\t  computed: {\r\n\t    tokens() {\r\n\t      // 更精确的文本分割，保留标点符号\r\n\t      const regex = /([\\w\\u4e00-\\u9fa5]+)|([^\\w\\u4e00-\\u9fa5]+)/g;\r\n\t      const tokens = [];\r\n\t      let match;\r\n\t      while ((match = regex.exec(this.sentence)) {\r\n\t        if (match[1]) {\r\n\t          // 词语\r\n\t          tokens.push({\r\n\t            text: match[1],\r\n\t            trailing: ''\r\n\t          });\r\n\t        } else if (match[2]) {\r\n\t          // 标点或空格\r\n\t          if (tokens.length > 0) {\r\n\t            tokens[tokens.length - 1].trailing = match[2];\r\n\t          } else {\r\n\t            tokens.push({\r\n\t              text: '',\r\n\t              trailing: match[2]\r\n\t            });\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t      return tokens;\r\n\t    },\r\n\t    highlightColor() {\r\n\t      // 保持原有的高亮颜色逻辑\r\n\t      if (!this.hasComments) return '#FFEB3B'; // 默认黄色\r\n\r\n\t      const type = this.commentLevel?.type || 1;\r\n\t      return (\r\n\t        {\r\n\t          1: '#4285f4', // 陈述 - 蓝色\r\n\t          2: '#ea4335', // 疑问 - 红色\r\n\t          3: '#34a853', // 感叹 - 绿色\r\n\t          4: '#9c27b0', // 建议 - 紫色\r\n\t          5: '#ff6d00'  // 讽刺 - 橙色\r\n\t        }[type] || '#4285f4'\r\n\t      );\r\n\t    }\r\n\t  },\r\n\t  methods: {\r\n\t    handleClick() {\r\n\t      this.$emit('click', this.sentenceIndex);\r\n\t    },\r\n\t    isHighFrequencyWord(word) {\r\n\t      return word && word in this.highFrequencyWords;\r\n\t    },\r\n\t    getStrokeWidth(word) {\r\n\t      if (!this.highFrequencyWords || !this.highFrequencyWords[word]) return '1px';\r\n\r\n\t      const frequency = this.highFrequencyWords[word];\r\n\t      const frequencies = Object.values(this.highFrequencyWords);\r\n\t      const maxFrequency = Math.max(...frequencies);\r\n\r\n\t      // 线性映射频率到1px-4px的线条宽度\r\n\t      const minWidth = 1;\r\n\t      const maxWidth = 4;\r\n\t      const width = minWidth +\r\n\t                   (frequency / maxFrequency) *\r\n\t                   (maxWidth - minWidth);\r\n\r\n\t      // 确保在范围内\r\n\t      return Math.min(maxWidth, Math.max(minWidth, width)) + 'px';\r\n\t    }\r\n\t  }\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.sentence {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline;\r\n\t\tline-height: 1.8;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.sentence:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.has-comments {\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.active-sentence {\r\n\t\tbackground-color: rgba(255, 152, 0, 0.1);\r\n\t}\r\n\r\n\t.highlight-content {\r\n\t\tbackground-color: rgba(66, 133, 244, 0.1);\r\n\t}\r\n\r\n\t.annotation-marker {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline-block;\r\n\t\tmin-width: 16px;\r\n\t\theight: 16px;\r\n\t\tline-height: 16px;\r\n\t\tfont-size: 10px;\r\n\t\ttext-align: center;\r\n\t\tcolor: white;\r\n\t\tbackground-color: #ff9800;\r\n\t\tborder-radius: 8px;\r\n\t\tpadding: 0 4px;\r\n\t\tmargin-left: 4px;\r\n\t\tvertical-align: super;\r\n\t}\r\n\r\n\t.circled-word {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline-block;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t.circled-word::before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: calc(100% + 8px);\r\n\t\theight: calc(100% + 4px);\r\n\t\tborder: var(--stroke-width) solid var(--circle-color);\r\n\t\tborder-radius: 50%;\r\n\t\tbox-sizing: border-box;\r\n\t\tz-index: -1;\r\n\t\topacity: 0.8;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.circled-word:hover::before {\r\n\t\topacity: 1;\r\n\t\tbox-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;mBAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;EAyB8CC,KAAK,EAAC;;;uBAxBnDC,mBAAA,CA2BO;IA1BND,KAAK,EAFPE,eAAA,EAEQ,UAAU;sBAEcC,IAAA,CAAAC,WAAW;yBAAyBD,IAAA,CAAAE,QAAQ;2BAA2BF,IAAA,CAAAG,gBAAgB,IAAIH,IAAA,CAAAC;;IADxHG,EAAE,gBAAgBJ,IAAA,CAAAK,aAAa;IAM/BC,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEP,IAAA,CAAAQ,WAAA,IAAAR,IAAA,CAAAQ,WAAA,IAAAC,SAAA,CAAW;IAAA;yBACnBX,mBAAA,CAcWY,SAAA,QAxBbC,WAAA,CAU0CX,IAAA,CAAAY,MAAM,EAVhD,CAUoBC,KAAK,EAAEC,UAAU;yBAVrChB,mBAAA,CAAAY,SAAA;MAAAd,GAAA,EAUwDkB;IAAU,IAC/Cd,IAAA,CAAAe,aAAa,IAAIf,IAAA,CAAAgB,mBAAmB,CAACH,KAAK,CAACI,IAAI,K,cAA/DnB,mBAAA,CAWWY,SAAA;MAtBdd,GAAA;IAAA,IAYIsB,mBAAA,CAQO;MAPNrB,KAAK,EAAC,cAAc;MACnBsB,KAAK,EAdXC,eAAA;0BAcwCpB,IAAA,CAAAqB,cAAc,CAACR,KAAK,CAACI,IAAI;0BAA4BjB,IAAA,CAAAsB;;MAIvFC,KAAK,KAAKV,KAAK,CAACI,IAAI,QAAQjB,IAAA,CAAAwB,kBAAkB,CAACX,KAAK,CAACI,IAAI;wBACvDJ,KAAK,CAACI,IAAI,gCAnBlBQ,UAAA,GAqBgBZ,KAAK,CAACa,QAAQ,I,cAA1B5B,mBAAA,CAAuD,QArB3D6B,UAAA,EAAAC,gBAAA,CAqBmCf,KAAK,CAACa,QAAQ,oBArBjDG,mBAAA,e,8CAuBG/B,mBAAA,CAAkEY,SAAA;MAvBrEd,GAAA;IAAA,IAAAkC,gBAAA,CAAAF,gBAAA,CAuBwBf,KAAK,CAACI,IAAI,IAAAW,gBAAA,CAAMf,KAAK,CAACa,QAAQ,iB;kCAExC1B,IAAA,CAAA+B,YAAY,QAAQ/B,IAAA,CAAAgC,UAAU,I,cAA1ClC,mBAAA,CAEO,QAFPmC,UAEO,EAAAL,gBAAA,CADH5B,IAAA,CAAA+B,YAAY,oBA1BlBF,mBAAA,e,yBAAAK,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}