{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a0c44a0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chart-legend-container\"\n};\nconst _hoisted_2 = {\n  class: \"pie-legend\"\n};\nconst _hoisted_3 = {\n  class: \"legend-labels horizontal\"\n};\nconst _hoisted_4 = {\n  class: \"legend-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 饼图图注 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"pie-chart\",\n    style: _normalizeStyle($setup.pieChartStyle)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.typeLegend, item => {\n    return _createElementVNode(\"div\", {\n      key: item.label,\n      class: \"legend-label\"\n    }, [_createElementVNode(\"span\", {\n      class: \"legend-color\",\n      style: _normalizeStyle({\n        backgroundColor: item.color\n      })\n    }, null, 4 /* STYLE */), _createElementVNode(\"span\", _hoisted_4, _toDisplayString(item.label), 1 /* TEXT */)]);\n  }), 64 /* STABLE_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","style","_normalizeStyle","$setup","pieChartStyle","_hoisted_3","_Fragment","_renderList","typeLegend","item","key","label","backgroundColor","color","_hoisted_4","_toDisplayString"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\CommentStats.vue"],"sourcesContent":["<template>\r\n\t<div class=\"chart-legend-container\">\r\n\t\t<!-- 饼图图注 -->\r\n\t\t<div class=\"pie-legend\">\r\n\t\t\t<div class=\"pie-chart\" :style=\"pieChartStyle\"></div>\r\n\t\t\t<div class=\"legend-labels horizontal\">\r\n\t\t\t\t<div v-for=\"item in typeLegend\" :key=\"item.label\" class=\"legend-label\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"legend-color\"\r\n\t\t\t\t\t\t:style=\"{ backgroundColor: item.color }\"></span>\r\n\t\t\t\t\t<span class=\"legend-text\">{{ item.label }}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcomments: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true\r\n\t\t}\r\n\t});\r\n\r\n\t// 类型数据计算\r\n\tconst typeStats = computed(() => {\r\n\t\tconst stats = {\r\n\t\t\tstatement: 0,\r\n\t\t\tquestion: 0,\r\n\t\t\texclamation: 0,\r\n\t\t\tsuggestion: 0,\r\n\t\t\tsarcasm: 0,\r\n\t\t\ttotal: 0\r\n\t\t};\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tconst type = comment.comment_type || 1;\r\n\t\t\tif (type === 1) stats.statement++;\r\n\t\t\telse if (type === 2) stats.question++;\r\n\t\t\telse if (type === 3) stats.exclamation++;\r\n\t\t\telse if (type === 4) stats.suggestion++;\r\n\t\t\telse if (type === 5) stats.sarcasm++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tstatement: stats.statement,\r\n\t\t\tquestion: stats.question,\r\n\t\t\texclamation: stats.exclamation,\r\n\t\t\tsuggestion: stats.suggestion,\r\n\t\t\tsarcasm: stats.sarcasm,\r\n\t\t\ttotal: stats.total\r\n\t\t};\r\n\t});\r\n\r\n\t// 饼图样式\r\n\tconst pieChartStyle = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return { background: \"#f0f0f0\" };\r\n\r\n\t\tconst statementPct = (statement / total) * 100;\r\n\t\tconst questionPct = (question / total) * 100;\r\n\t\tconst exclamationPct = (exclamation / total) * 100;\r\n\t\tconst suggestionPct = (suggestion / total) * 100;\r\n\t\tconst sarcasmPct = (sarcasm / total) * 100;\r\n\r\n\t\treturn {\r\n\t\t\tbackground: `conic-gradient(\r\n      #4285f4 0% ${statementPct}%,\r\n      #ea4335 ${statementPct}% ${statementPct + questionPct}%,\r\n      #34a853 ${statementPct + questionPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct\r\n\t\t\t}%,\r\n      #9c27b0 ${statementPct + questionPct + exclamationPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t}%,\r\n      #ff9800 ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t}% 100%\r\n    )`,\r\n\t\t\twidth: \"40px\",\r\n\t\t\theight: \"40px\",\r\n\t\t\tborderRadius: \"50%\"\r\n\t\t};\r\n\t});\r\n\r\n\t// 类型图注\r\n\tconst typeLegend = [\r\n\t\t{ label: \"陈述\", key: \"statement\", color: \"#4285f4\" },\r\n\t\t{ label: \"疑问\", key: \"question\", color: \"#ea4335\" },\r\n\t\t{ label: \"感叹\", key: \"exclamation\", color: \"#34a853\" },\r\n\t\t{ label: \"建议\", key: \"suggestion\", color: \"#9c27b0\" },\r\n\t\t{ label: \"讽刺\", key: \"sarcasm\", color: \"#ff9800\" }\r\n\t];\r\n</script>\r\n\r\n<style scoped>\r\n\t.chart-legend-container {\r\n\t\tdisplay: flex;\r\n\t\tgap: 15px;\r\n\t}\r\n\r\n\t.pie-legend {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 8px;\r\n\t}\r\n\r\n\t.pie-chart {\r\n\t\twidth: 40px;\r\n\t\theight: 40px;\r\n\t\tborder-radius: 50%;\r\n\t\tflex-shrink: 0;\r\n\t\tbackground: #f0f0f0; /* 默认背景色 */\r\n\t}\r\n\r\n\t.legend-labels {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 4px;\r\n\t}\r\n\r\n\t.legend-labels.horizontal {\r\n\t\tflex-direction: row;\r\n\t\tflex-wrap: wrap;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.legend-label {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 1.2;\r\n\t\tmargin-right: 8px;\r\n\t}\r\n\r\n\t.legend-color {\r\n\t\twidth: 10px;\r\n\t\theight: 10px;\r\n\t\tborder-radius: 2px;\r\n\t\tflex-shrink: 0;\r\n\t\tdisplay: inline-block;\r\n\t}\r\n\r\n\t.legend-text {\r\n\t\twhite-space: nowrap;\r\n\t\tcolor: #555;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.pie-legend {\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: flex-start;\r\n\t\t}\r\n\r\n\t\t.legend-labels.horizontal {\r\n\t\t\tflex-direction: row;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\tgap: 8px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAwB;;EAE7BA,KAAK,EAAC;AAAY;;EAEjBA,KAAK,EAAC;AAA0B;;EAK7BA,KAAK,EAAC;AAAa;;uBAT7BC,mBAAA,CAaM,OAbNC,UAaM,GAZLC,mBAAA,UAAa,EACbC,mBAAA,CAUM,OAVNC,UAUM,GATLD,mBAAA,CAAoD;IAA/CJ,KAAK,EAAC,WAAW;IAAEM,KAAK,EAJhCC,eAAA,CAIkCC,MAAA,CAAAC,aAAa;2BAC5CL,mBAAA,CAOM,OAPNM,UAOM,I,cANLT,mBAAA,CAKMU,SAAA,QAXVC,WAAA,CAMwBJ,MAAA,CAAAK,UAAU,EAAlBC,IAAI;WAAhBV,mBAAA,CAKM;MAL2BW,GAAG,EAAED,IAAI,CAACE,KAAK;MAAEhB,KAAK,EAAC;QACvDI,mBAAA,CAEiD;MADhDJ,KAAK,EAAC,cAAc;MACnBM,KAAK,EATZC,eAAA;QAAAU,eAAA,EASiCH,IAAI,CAACI;MAAK;6BACtCd,mBAAA,CAAiD,QAAjDe,UAAiD,EAAAC,gBAAA,CAApBN,IAAI,CAACE,KAAK,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}