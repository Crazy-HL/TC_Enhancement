{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a0c44a0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"comment-stats\"\n};\nconst _hoisted_2 = [\"title\"];\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"stacked-bar\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"bar-segment support\"\n}), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"bar-segment neutral\"\n}), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"bar-segment oppose\"\n})], -1 /* HOISTED */));\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = [\"title\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"span\", _hoisted_1, [_createCommentVNode(\" 立场堆叠图 \"), $props.showStandpoint ? (_openBlock(), _createElementBlock(\"span\", {\n    key: 0,\n    class: \"standpoint-chart\",\n    title: $setup.standpointTooltip,\n    style: _normalizeStyle($setup.standpointStyle)\n  }, [..._hoisted_4], 12 /* STYLE, PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 类型饼图 \"), $props.showType ? (_openBlock(), _createElementBlock(\"span\", {\n    key: 1,\n    class: \"type-pie-chart\",\n    title: $setup.typeTooltip,\n    style: _normalizeStyle({\n      ...$setup.pieChartStyle,\n      width: $setup.pieChartSize + 'px',\n      height: $setup.pieChartSize + 'px'\n    })\n  }, null, 12 /* STYLE, PROPS */, _hoisted_5)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_3","_createElementBlock","_hoisted_1","_createCommentVNode","$props","showStandpoint","key","title","$setup","standpointTooltip","style","_normalizeStyle","standpointStyle","_hoisted_4","_hoisted_2","showType","typeTooltip","pieChartStyle","pieChartSize","_hoisted_5"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\CommentStats.vue"],"sourcesContent":["<template>\r\n\t<span class=\"comment-stats\">\r\n\t\t<!-- 立场堆叠图 -->\r\n\t\t<span\r\n\t\t\tv-if=\"showStandpoint\"\r\n\t\t\tclass=\"standpoint-chart\"\r\n\t\t\t:title=\"standpointTooltip\"\r\n\t\t\t:style=\"standpointStyle\">\r\n\t\t\t<span class=\"stacked-bar\">\r\n\t\t\t\t<span class=\"bar-segment support\"></span>\r\n\t\t\t\t<span class=\"bar-segment neutral\"></span>\r\n\t\t\t\t<span class=\"bar-segment oppose\"></span>\r\n\t\t\t</span>\r\n\t\t</span>\r\n\r\n\t\t<!-- 类型饼图 -->\r\n\t\t<span\r\n\t\t\tv-if=\"showType\"\r\n\t\t\tclass=\"type-pie-chart\"\r\n\t\t\t:title=\"typeTooltip\"\r\n\t\t\t:style=\"{\r\n\t\t\t\t...pieChartStyle,\r\n\t\t\t\twidth: pieChartSize + 'px',\r\n\t\t\t\theight: pieChartSize + 'px'\r\n\t\t\t}\"></span>\r\n\t</span>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcomments: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tshowStandpoint: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tshowType: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tshowEmotion: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t}\r\n\t});\r\n\r\n\t// 计算饼图大小 - 基于评论数量动态调整 (8px-16px)\r\n\tconst pieChartSize = computed(() => {\r\n\t\tconst count = props.comments.length;\r\n\t\tif (count <= 1) return 8; // 最小尺寸\r\n\t\tif (count >= 10) return 20; // 最大尺寸不超过行高\r\n\t\treturn 8 + Math.round((count / 10) * 8); // 线性增长\r\n\t});\r\n\r\n\t// 类型相关方法\r\n\tconst getCommentType = comment => {\r\n\t\treturn comment?.comment_type || 1;\r\n\t};\r\n\r\n\tconst getCommentTypeLabel = comment => {\r\n\t\tconst type = getCommentType(comment);\r\n\t\tconst types = {\r\n\t\t\t1: \"陈述\",\r\n\t\t\t2: \"疑问\",\r\n\t\t\t3: \"感叹\",\r\n\t\t\t4: \"建议\",\r\n\t\t\t5: \"讽刺\"\r\n\t\t};\r\n\t\treturn types[type] || \"陈述\";\r\n\t};\r\n\r\n\t// 类型数据计算\r\n\tconst typeStats = computed(() => {\r\n\t\tconst stats = {\r\n\t\t\tstatement: 0,\r\n\t\t\tquestion: 0,\r\n\t\t\texclamation: 0,\r\n\t\t\tsuggestion: 0,\r\n\t\t\tsarcasm: 0,\r\n\t\t\ttotal: 0\r\n\t\t};\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tconst type = getCommentType(comment);\r\n\t\t\tif (type === 1) stats.statement++;\r\n\t\t\telse if (type === 2) stats.question++;\r\n\t\t\telse if (type === 3) stats.exclamation++;\r\n\t\t\telse if (type === 4) stats.suggestion++;\r\n\t\t\telse if (type === 5) stats.sarcasm++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tstatement: stats.statement,\r\n\t\t\tquestion: stats.question,\r\n\t\t\texclamation: stats.exclamation,\r\n\t\t\tsuggestion: stats.suggestion,\r\n\t\t\tsarcasm: stats.sarcasm,\r\n\t\t\ttotal: stats.total\r\n\t\t};\r\n\t});\r\n\r\n\t// 类型tooltip\r\n\tconst typeTooltip = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return \"无类型数据\";\r\n\r\n\t\tconst statementPct = Math.round((statement / total) * 100);\r\n\t\tconst questionPct = Math.round((question / total) * 100);\r\n\t\tconst exclamationPct = Math.round((exclamation / total) * 100);\r\n\t\tconst suggestionPct = Math.round((suggestion / total) * 100);\r\n\t\tconst sarcasmPct = Math.round((sarcasm / total) * 100);\r\n\r\n\t\treturn `陈述: ${statement} (${statementPct}%)\r\n疑问: ${question} (${questionPct}%)\r\n感叹: ${exclamation} (${exclamationPct}%)\r\n建议: ${suggestion} (${suggestionPct}%)\r\n讽刺: ${sarcasm} (${sarcasmPct}%)`;\r\n\t});\r\n\r\n\t// 饼图样式\r\n\tconst pieChartStyle = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return {};\r\n\r\n\t\tconst statementPct = (statement / total) * 100;\r\n\t\tconst questionPct = (question / total) * 100;\r\n\t\tconst exclamationPct = (exclamation / total) * 100;\r\n\t\tconst suggestionPct = (suggestion / total) * 100;\r\n\t\tconst sarcasmPct = (sarcasm / total) * 100;\r\n\r\n\t\treturn {\r\n\t\t\tbackground: `conic-gradient(\r\n        #4285f4 0% ${statementPct}%,\r\n        #ea4335 ${statementPct}% ${statementPct + questionPct}%,\r\n        #34a853 ${statementPct + questionPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct\r\n\t\t\t}%,\r\n        #9c27b0 ${statementPct + questionPct + exclamationPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t}%,\r\n        #ff9800 ${\r\n\t\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t\t}% 100%\r\n      )`\r\n\t\t};\r\n\t});\r\n\r\n\t// 立场数据计算\r\n\tconst standpointStats = computed(() => {\r\n\t\tconst stats = { support: 0, oppose: 0, neutral: 0, total: 0 };\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tif (comment.standpoint === 1) stats.support++;\r\n\t\t\telse if (comment.standpoint === -1) stats.oppose++;\r\n\t\t\telse stats.neutral++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn stats;\r\n\t});\r\n\r\n\t// 立场tooltip\r\n\tconst standpointTooltip = computed(() => {\r\n\t\tconst { support, oppose, neutral, total } = standpointStats.value;\r\n\t\tif (total === 0) return \"无立场数据\";\r\n\r\n\t\tconst supportPct = Math.round((support / total) * 100);\r\n\t\tconst opposePct = Math.round((oppose / total) * 100);\r\n\t\tconst neutralPct = Math.round((neutral / total) * 100);\r\n\r\n\t\treturn `支持 ${supportPct}% | 中立 ${neutralPct}% | 反对 ${opposePct}%`;\r\n\t});\r\n\r\n\t// 立场图表样式\r\n\tconst standpointStyle = computed(() => {\r\n\t\tconst { support, oppose, neutral, total } = standpointStats.value;\r\n\t\tif (total === 0) return {};\r\n\r\n\t\tconst supportHeight = Math.round((support / total) * 100);\r\n\t\tconst neutralHeight = Math.round((neutral / total) * 100);\r\n\t\tconst opposeHeight = Math.round((oppose / total) * 100);\r\n\r\n\t\treturn {\r\n\t\t\t\"--support-height\": `${supportHeight}%`,\r\n\t\t\t\"--neutral-height\": `${neutralHeight}%`,\r\n\t\t\t\"--oppose-height\": `${opposeHeight}%`\r\n\t\t};\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.comment-stats {\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: center;\r\n\t\tvertical-align: middle;\r\n\t\tgap: 4px;\r\n\t\tmargin: 0 2px;\r\n\t\tline-height: inherit;\r\n\t}\r\n\r\n\t/* 迷你立场堆叠图 (纵向) */\r\n\t.standpoint-chart {\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: flex-end;\r\n\t\twidth: 8px;\r\n\t\theight: 16px;\r\n\t}\r\n\r\n\t.stacked-bar {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tgap: 1px;\r\n\t}\r\n\r\n\t.bar-segment {\r\n\t\twidth: 100%;\r\n\t\tmin-height: 1px;\r\n\t\ttransition: height 0.2s ease;\r\n\t}\r\n\r\n\t.bar-segment.support {\r\n\t\tbackground-color: #ccebc5;\r\n\t\theight: var(--support-height, 0%);\r\n\t}\r\n\r\n\t.bar-segment.neutral {\r\n\t\tbackground-color: #b3cde3;\r\n\t\theight: var(--neutral-height, 0%);\r\n\t}\r\n\r\n\t.bar-segment.oppose {\r\n\t\tbackground-color: #fbb4ae;\r\n\t\theight: var(--oppose-height, 0%);\r\n\t}\r\n\r\n\t/* 类型饼图 - 确保垂直居中 */\r\n\t.type-pie-chart {\r\n\t\tdisplay: inline-block;\r\n\t\tborder-radius: 50%;\r\n\t\tvertical-align: middle;\r\n\t\tposition: relative;\r\n\t\ttop: 50%;\r\n\t\ttransform: translateY(-50%);\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAe;mBAD5B;gEAQGC,mBAAA,CAIO;EAJDD,KAAK,EAAC;AAAa,I,aACxBC,mBAAA,CAAyC;EAAnCD,KAAK,EAAC;AAAqB,I,aACjCC,mBAAA,CAAyC;EAAnCD,KAAK,EAAC;AAAqB,I,aACjCC,mBAAA,CAAwC;EAAlCD,KAAK,EAAC;AAAoB,G;oBAHjCE,UAIO,C;mBAZV;;uBACCC,mBAAA,CAwBO,QAxBPC,UAwBO,GAvBNC,mBAAA,WAAc,EAEPC,MAAA,CAAAC,cAAc,I,cADrBJ,mBAAA,CAUO;IAbTK,GAAA;IAKGR,KAAK,EAAC,kBAAkB;IACvBS,KAAK,EAAEC,MAAA,CAAAC,iBAAiB;IACxBC,KAAK,EAPTC,eAAA,CAOWH,MAAA,CAAAI,eAAe;KAP1B,IAAAC,UAAA,0BAAAC,UAAA,KAAAX,mBAAA,gBAeEA,mBAAA,UAAa,EAENC,MAAA,CAAAW,QAAQ,I,cADfd,mBAAA,CAQW;IAxBbK,GAAA;IAkBGR,KAAK,EAAC,gBAAgB;IACrBS,KAAK,EAAEC,MAAA,CAAAQ,WAAW;IAClBN,KAAK,EApBTC,eAAA;SAoBqBH,MAAA,CAAAS,aAAa;aAAcT,MAAA,CAAAU,YAAY;cAAsBV,MAAA,CAAAU,YAAY;;kCApB9FC,UAAA,KAAAhB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}