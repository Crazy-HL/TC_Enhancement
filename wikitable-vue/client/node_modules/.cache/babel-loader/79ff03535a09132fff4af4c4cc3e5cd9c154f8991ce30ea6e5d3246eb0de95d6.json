{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-305a2353\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"article-container\",\n  ref: \"articleContainer\"\n};\nconst _hoisted_2 = {\n  class: \"article-title\"\n};\nconst _hoisted_3 = {\n  class: \"article-meta\"\n};\nconst _hoisted_4 = {\n  class: \"author\"\n};\nconst _hoisted_5 = {\n  class: \"publish-time\"\n};\nconst _hoisted_6 = {\n  class: \"update-time\"\n};\nconst _hoisted_7 = {\n  class: \"article-content\"\n};\nconst _hoisted_8 = [\"onMouseenter\"];\nconst _hoisted_9 = {\n  class: \"article-footer\"\n};\nconst _hoisted_10 = {\n  class: \"stats\"\n};\nconst _hoisted_11 = {\n  class: \"vote-count\"\n};\nconst _hoisted_12 = {\n  class: \"comment-count\"\n};\nconst _hoisted_13 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 弹幕组件 \"), _createVNode($setup[\"DanmuDisplay\"], {\n    \"active-sentence\": $setup.activeSentence,\n    comments: $setup.comments\n  }, null, 8 /* PROPS */, [\"active-sentence\", \"comments\"]), _createElementVNode(\"h1\", _hoisted_2, _toDisplayString($setup.article.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, \"作者: \" + _toDisplayString($setup.article.user_nickname), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_5, \"发布时间: \" + _toDisplayString($setup.formatTime($setup.article.created_time)), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_6, \"更新时间: \" + _toDisplayString($setup.formatTime($setup.article.updated_time)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sentences, (sentence, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index,\n      class: _normalizeClass([\"sentence\", {\n        'sentence-active': $setup.activeSentence === index\n      }]),\n      onMouseenter: $event => $setup.activeSentence = index,\n      onMouseleave: _cache[0] || (_cache[0] = $event => $setup.activeSentence = null)\n    }, _toDisplayString(sentence), 43 /* TEXT, CLASS, PROPS, NEED_HYDRATION */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", _hoisted_11, \"点赞: \" + _toDisplayString($setup.article.voteup_count), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_12, \"评论: \" + _toDisplayString($setup.article.comment_count), 1 /* TEXT */)]), _createElementVNode(\"a\", {\n    href: $setup.article.content_url,\n    target: \"_blank\",\n    class: \"original-link\"\n  }, \"原文链接\", 8 /* PROPS */, _hoisted_13)])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","$setup","activeSentence","comments","_createElementVNode","_hoisted_2","_toDisplayString","article","title","_hoisted_3","_hoisted_4","user_nickname","_hoisted_5","formatTime","created_time","_hoisted_6","updated_time","_hoisted_7","_Fragment","_renderList","sentences","sentence","index","key","_normalizeClass","onMouseenter","$event","onMouseleave","_cache","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","voteup_count","_hoisted_12","comment_count","href","content_url","target","_hoisted_13"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\ArticleContent.vue"],"sourcesContent":["<template>\r\n\t<div class=\"article-container\" ref=\"articleContainer\">\r\n\t\t<!-- 弹幕组件 -->\r\n\t\t<DanmuDisplay :active-sentence=\"activeSentence\" :comments=\"comments\" />\r\n\r\n\t\t<h1 class=\"article-title\">{{ article.title }}</h1>\r\n\r\n\t\t<div class=\"article-meta\">\r\n\t\t\t<span class=\"author\">作者: {{ article.user_nickname }}</span>\r\n\t\t\t<span class=\"publish-time\"\r\n\t\t\t\t>发布时间: {{ formatTime(article.created_time) }}</span\r\n\t\t\t>\r\n\t\t\t<span class=\"update-time\"\r\n\t\t\t\t>更新时间: {{ formatTime(article.updated_time) }}</span\r\n\t\t\t>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"article-content\">\r\n\t\t\t<span\r\n\t\t\t\tv-for=\"(sentence, index) in sentences\"\r\n\t\t\t\t:key=\"index\"\r\n\t\t\t\tclass=\"sentence\"\r\n\t\t\t\t:class=\"{ 'sentence-active': activeSentence === index }\"\r\n\t\t\t\t@mouseenter=\"activeSentence = index\"\r\n\t\t\t\t@mouseleave=\"activeSentence = null\">\r\n\t\t\t\t{{ sentence }}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"article-footer\">\r\n\t\t\t<div class=\"stats\">\r\n\t\t\t\t<span class=\"vote-count\">点赞: {{ article.voteup_count }}</span>\r\n\t\t\t\t<span class=\"comment-count\">评论: {{ article.comment_count }}</span>\r\n\t\t\t</div>\r\n\t\t\t<a :href=\"article.content_url\" target=\"_blank\" class=\"original-link\"\r\n\t\t\t\t>原文链接</a\r\n\t\t\t>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\timport api from \"@/api\";\r\n\timport DanmuDisplay from \"@/components/DanmuDisplay.vue\";\r\n\r\n\tconst article = ref({});\r\n\tconst sentences = ref([]);\r\n\tconst comments = ref([]);\r\n\tconst activeSentence = ref(null);\r\n\tconst articleContainer = ref(null);\r\n\r\n\t// 获取文章数据\r\n\tconst fetchArticleData = async () => {\r\n\t\tconst [articleRes, commentsRes] = await Promise.all([\r\n\t\t\tapi.get(\"article\", {}),\r\n\t\t\tapi.get(\"comments\", {})\r\n\t\t]);\r\n\r\n\t\tarticle.value = articleRes[0];\r\n\t\tcomments.value = commentsRes;\r\n\t\tsentences.value = splitIntoSentences(article.value.content_text);\r\n\t};\r\n\r\n\t// 句子分割逻辑\r\n\tconst splitIntoSentences = text => {\r\n\t\tif (!text) return [];\r\n\t\tconst regex = /([^。！？.!?]+[。！？.!?]+)/g;\r\n\t\tconst result = [];\r\n\t\tlet match;\r\n\r\n\t\twhile ((match = regex.exec(text)) !== null) {\r\n\t\t\tconst sentence = match[0].trim();\r\n\t\t\tif (sentence.length > 0) result.push(sentence);\r\n\t\t}\r\n\t\treturn result.length > 0 ? result : [text];\r\n\t};\r\n\r\n\t// 格式化时间\r\n\tconst formatTime = time => {\r\n\t\tif (!time) return \"\";\r\n\t\treturn new Date(time * 1000).toLocaleString();\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tfetchArticleData();\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.article-container {\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground: #fff;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.article-title {\r\n\t\tfont-size: 24px;\r\n\t\tmargin-bottom: 15px;\r\n\t\tcolor: #333;\r\n\t\tline-height: 1.4;\r\n\t\tpadding-top: 100px; /* 为弹幕留出空间 */\r\n\t}\r\n\r\n\t.article-meta {\r\n\t\tmargin-bottom: 20px;\r\n\t\tfont-size: 14px;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.article-meta span {\r\n\t\tmargin-right: 15px;\r\n\t}\r\n\r\n\t.article-content {\r\n\t\tfont-size: 16px;\r\n\t\tline-height: 1.8;\r\n\t\tcolor: #333;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.sentence {\r\n\t\tdisplay: inline;\r\n\t\tmargin-right: 0.2em;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.sentence:hover,\r\n\t.sentence-active {\r\n\t\tbackground-color: #f0f7ff;\r\n\t}\r\n\r\n\t.article-footer {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tpadding-top: 15px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t\tfont-size: 14px;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.stats span {\r\n\t\tmargin-right: 15px;\r\n\t}\r\n\r\n\t.original-link {\r\n\t\tcolor: #0084ff;\r\n\t\ttext-decoration: none;\r\n\t}\r\n\r\n\t.original-link:hover {\r\n\t\ttext-decoration: underline;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC,mBAAmB;EAACC,GAAG,EAAC;;;EAI9BD,KAAK,EAAC;AAAe;;EAEpBA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAQ;;EACdA,KAAK,EAAC;AAAc;;EAGpBA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAiB;mBAjB9B;;EA6BOA,KAAK,EAAC;AAAgB;;EACrBA,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAe;oBAhC/B;;uBACCE,mBAAA,CAqCM,OArCNC,UAqCM,GApCLC,mBAAA,UAAa,EACbC,YAAA,CAAuEC,MAAA;IAAxD,iBAAe,EAAEA,MAAA,CAAAC,cAAc;IAAGC,QAAQ,EAAEF,MAAA,CAAAE;4DAE3DC,mBAAA,CAAkD,MAAlDC,UAAkD,EAAAC,gBAAA,CAArBL,MAAA,CAAAM,OAAO,CAACC,KAAK,kBAE1CJ,mBAAA,CAQM,OARNK,UAQM,GAPLL,mBAAA,CAA2D,QAA3DM,UAA2D,EAAtC,MAAI,GAAAJ,gBAAA,CAAGL,MAAA,CAAAM,OAAO,CAACI,aAAa,kBACjDP,mBAAA,CAC0D,QAD1DQ,UAC0D,EAAxD,QAAM,GAAAN,gBAAA,CAAGL,MAAA,CAAAY,UAAU,CAACZ,MAAA,CAAAM,OAAO,CAACO,YAAY,mBAE1CV,mBAAA,CAC0D,QAD1DW,UAC0D,EAAxD,QAAM,GAAAT,gBAAA,CAAGL,MAAA,CAAAY,UAAU,CAACZ,MAAA,CAAAM,OAAO,CAACS,YAAY,kB,GAI3CZ,mBAAA,CAUM,OAVNa,UAUM,I,kBATLpB,mBAAA,CAQOqB,SAAA,QA1BVC,WAAA,CAmBgClB,MAAA,CAAAmB,SAAS,EAnBzC,CAmBYC,QAAQ,EAAEC,KAAK;yBADxBzB,mBAAA,CAQO;MANL0B,GAAG,EAAED,KAAK;MACX3B,KAAK,EArBT6B,eAAA,EAqBU,UAAU;QAAA,mBACavB,MAAA,CAAAC,cAAc,KAAKoB;MAAK;MACpDG,YAAU,EAAAC,MAAA,IAAEzB,MAAA,CAAAC,cAAc,GAAGoB,KAAK;MAClCK,YAAU,EAAAC,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEzB,MAAA,CAAAC,cAAc;wBACxBmB,QAAQ,gDAzBfQ,UAAA;oCA6BEzB,mBAAA,CAQM,OARN0B,UAQM,GAPL1B,mBAAA,CAGM,OAHN2B,WAGM,GAFL3B,mBAAA,CAA8D,QAA9D4B,WAA8D,EAArC,MAAI,GAAA1B,gBAAA,CAAGL,MAAA,CAAAM,OAAO,CAAC0B,YAAY,kBACpD7B,mBAAA,CAAkE,QAAlE8B,WAAkE,EAAtC,MAAI,GAAA5B,gBAAA,CAAGL,MAAA,CAAAM,OAAO,CAAC4B,aAAa,iB,GAEzD/B,mBAAA,CACe;IADXgC,IAAI,EAAEnC,MAAA,CAAAM,OAAO,CAAC8B,WAAW;IAAEC,MAAM,EAAC,QAAQ;IAAC3C,KAAK,EAAC;KACnD,MAAI,iBAnCT4C,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}