{"ast":null,"code":"import { computed } from \"vue\";\nexport default {\n  __name: 'CommentStats',\n  props: {\n    comments: {\n      type: Array,\n      required: true\n    },\n    showStandpoint: {\n      type: Boolean,\n      default: true\n    },\n    showType: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 计算立场分布\n    const standpointStats = computed(() => {\n      const stats = {\n        support: 0,\n        oppose: 0,\n        neutral: 0,\n        total: 0\n      };\n      props.comments.forEach(comment => {\n        if (comment.standpoint === 1) stats.support++;else if (comment.standpoint === -1) stats.oppose++;else stats.neutral++;\n        stats.total++;\n      });\n      return stats;\n    });\n\n    // 立场tooltip\n    const standpointTooltip = computed(() => {\n      const {\n        support,\n        oppose,\n        neutral,\n        total\n      } = standpointStats.value;\n      if (total === 0) return \"无立场数据\";\n      const supportPct = Math.round(support / total * 100);\n      const opposePct = Math.round(oppose / total * 100);\n      const neutralPct = Math.round(neutral / total * 100);\n      return `支持 ${supportPct}% | 中立 ${neutralPct}% | 反对 ${opposePct}%`;\n    });\n\n    // 计算类型分布\n    const typeStats = computed(() => {\n      const stats = {\n        statement: 0,\n        question: 0,\n        exclamation: 0,\n        suggestion: 0,\n        sarcasm: 0,\n        total: 0\n      };\n      props.comments.forEach(comment => {\n        const type = comment.comment_type || 1;\n        if (type === 1) stats.statement++;else if (type === 2) stats.question++;else if (type === 3) stats.exclamation++;else if (type === 4) stats.suggestion++;else if (type === 5) stats.sarcasm++;\n        stats.total++;\n      });\n      return stats;\n    });\n\n    // 类型tooltip\n    const typeTooltip = computed(() => {\n      const {\n        statement,\n        question,\n        exclamation,\n        suggestion,\n        sarcasm,\n        total\n      } = typeStats.value;\n      if (total === 0) return \"无类型数据\";\n      const statementPct = Math.round(statement / total * 100);\n      const questionPct = Math.round(question / total * 100);\n      const exclamationPct = Math.round(exclamation / total * 100);\n      const suggestionPct = Math.round(suggestion / total * 100);\n      const sarcasmPct = Math.round(sarcasm / total * 100);\n      return `陈述 ${statementPct}% | 疑问 ${questionPct}% | 感叹 ${exclamationPct}% | 建议 ${suggestionPct}% | 讽刺 ${sarcasmPct}%`;\n    });\n\n    // 立场图表样式\n    const standpointStyle = computed(() => {\n      const {\n        support,\n        oppose,\n        neutral,\n        total\n      } = standpointStats.value;\n      if (total === 0) return {};\n      const supportHeight = Math.round(support / total * 100);\n      const neutralHeight = Math.round(neutral / total * 100);\n      const opposeHeight = Math.round(oppose / total * 100);\n      return {\n        \"--support-height\": `${supportHeight}%`,\n        \"--neutral-height\": `${neutralHeight}%`,\n        \"--oppose-height\": `${opposeHeight}%`\n      };\n    });\n\n    // 类型图表样式\n    const typeStyle = computed(() => {\n      const {\n        statement,\n        question,\n        exclamation,\n        suggestion,\n        sarcasm,\n        total\n      } = typeStats.value;\n      if (total === 0) return {};\n      const statementPercent = Math.round(statement / total * 100);\n      const questionPercent = Math.round(question / total * 100);\n      const exclamationPercent = Math.round(exclamation / total * 100);\n      const suggestionPercent = Math.round(suggestion / total * 100);\n      const sarcasmPercent = Math.round(sarcasm / total * 100);\n      return {\n        \"--statement-percent\": `${statementPercent}%`,\n        \"--question-percent\": `${questionPercent}%`,\n        \"--exclamation-percent\": `${exclamationPercent}%`,\n        \"--suggestion-percent\": `${suggestionPercent}%`,\n        \"--sarcasm-percent\": `${sarcasmPercent}%`\n      };\n    });\n    const __returned__ = {\n      props,\n      standpointStats,\n      standpointTooltip,\n      typeStats,\n      typeTooltip,\n      standpointStyle,\n      typeStyle,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","standpointStats","stats","support","oppose","neutral","total","comments","forEach","comment","standpoint","standpointTooltip","value","supportPct","Math","round","opposePct","neutralPct","typeStats","statement","question","exclamation","suggestion","sarcasm","type","comment_type","typeTooltip","statementPct","questionPct","exclamationPct","suggestionPct","sarcasmPct","standpointStyle","supportHeight","neutralHeight","opposeHeight","typeStyle","statementPercent","questionPercent","exclamationPercent","suggestionPercent","sarcasmPercent"],"sources":["D:/ZhiHu/zhihu-bullet/wikitable-vue/client/src/components/CommentStats.vue"],"sourcesContent":["<template>\r\n\t<span class=\"comment-stats\">\r\n\t\t<!-- 立场堆叠图 (迷你纵向) -->\r\n\t\t<span\r\n\t\t\tv-if=\"showStandpoint\"\r\n\t\t\tclass=\"standpoint-chart\"\r\n\t\t\t:title=\"standpointTooltip\"\r\n\t\t\t:style=\"standpointStyle\">\r\n\t\t\t<span class=\"stacked-bar\">\r\n\t\t\t\t<span class=\"bar-segment support\"></span>\r\n\t\t\t\t<span class=\"bar-segment neutral\"></span>\r\n\t\t\t\t<span class=\"bar-segment oppose\"></span>\r\n\t\t\t</span>\r\n\t\t</span>\r\n\r\n\t\t<!-- 类型饼图 (迷你) -->\r\n\t\t<span\r\n\t\t\tv-if=\"showType\"\r\n\t\t\tclass=\"type-chart\"\r\n\t\t\t:title=\"typeTooltip\"\r\n\t\t\t:style=\"typeStyle\"></span>\r\n\t</span>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcomments: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tshowStandpoint: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tshowType: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t}\r\n\t});\r\n\r\n\t// 计算立场分布\r\n\tconst standpointStats = computed(() => {\r\n\t\tconst stats = { support: 0, oppose: 0, neutral: 0, total: 0 };\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tif (comment.standpoint === 1) stats.support++;\r\n\t\t\telse if (comment.standpoint === -1) stats.oppose++;\r\n\t\t\telse stats.neutral++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn stats;\r\n\t});\r\n\r\n\t// 立场tooltip\r\n\tconst standpointTooltip = computed(() => {\r\n\t\tconst { support, oppose, neutral, total } = standpointStats.value;\r\n\t\tif (total === 0) return \"无立场数据\";\r\n\r\n\t\tconst supportPct = Math.round((support / total) * 100);\r\n\t\tconst opposePct = Math.round((oppose / total) * 100);\r\n\t\tconst neutralPct = Math.round((neutral / total) * 100);\r\n\r\n\t\treturn `支持 ${supportPct}% | 中立 ${neutralPct}% | 反对 ${opposePct}%`;\r\n\t});\r\n\r\n\t// 计算类型分布\r\n\tconst typeStats = computed(() => {\r\n\t\tconst stats = {\r\n\t\t\tstatement: 0,\r\n\t\t\tquestion: 0,\r\n\t\t\texclamation: 0,\r\n\t\t\tsuggestion: 0,\r\n\t\t\tsarcasm: 0,\r\n\t\t\ttotal: 0\r\n\t\t};\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tconst type = comment.comment_type || 1;\r\n\t\t\tif (type === 1) stats.statement++;\r\n\t\t\telse if (type === 2) stats.question++;\r\n\t\t\telse if (type === 3) stats.exclamation++;\r\n\t\t\telse if (type === 4) stats.suggestion++;\r\n\t\t\telse if (type === 5) stats.sarcasm++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn stats;\r\n\t});\r\n\r\n\t// 类型tooltip\r\n\tconst typeTooltip = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return \"无类型数据\";\r\n\r\n\t\tconst statementPct = Math.round((statement / total) * 100);\r\n\t\tconst questionPct = Math.round((question / total) * 100);\r\n\t\tconst exclamationPct = Math.round((exclamation / total) * 100);\r\n\t\tconst suggestionPct = Math.round((suggestion / total) * 100);\r\n\t\tconst sarcasmPct = Math.round((sarcasm / total) * 100);\r\n\r\n\t\treturn `陈述 ${statementPct}% | 疑问 ${questionPct}% | 感叹 ${exclamationPct}% | 建议 ${suggestionPct}% | 讽刺 ${sarcasmPct}%`;\r\n\t});\r\n\r\n\t// 立场图表样式\r\n\tconst standpointStyle = computed(() => {\r\n\t\tconst { support, oppose, neutral, total } = standpointStats.value;\r\n\t\tif (total === 0) return {};\r\n\r\n\t\tconst supportHeight = Math.round((support / total) * 100);\r\n\t\tconst neutralHeight = Math.round((neutral / total) * 100);\r\n\t\tconst opposeHeight = Math.round((oppose / total) * 100);\r\n\r\n\t\treturn {\r\n\t\t\t\"--support-height\": `${supportHeight}%`,\r\n\t\t\t\"--neutral-height\": `${neutralHeight}%`,\r\n\t\t\t\"--oppose-height\": `${opposeHeight}%`\r\n\t\t};\r\n\t});\r\n\r\n\t// 类型图表样式\r\n\tconst typeStyle = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return {};\r\n\r\n\t\tconst statementPercent = Math.round((statement / total) * 100);\r\n\t\tconst questionPercent = Math.round((question / total) * 100);\r\n\t\tconst exclamationPercent = Math.round((exclamation / total) * 100);\r\n\t\tconst suggestionPercent = Math.round((suggestion / total) * 100);\r\n\t\tconst sarcasmPercent = Math.round((sarcasm / total) * 100);\r\n\r\n\t\treturn {\r\n\t\t\t\"--statement-percent\": `${statementPercent}%`,\r\n\t\t\t\"--question-percent\": `${questionPercent}%`,\r\n\t\t\t\"--exclamation-percent\": `${exclamationPercent}%`,\r\n\t\t\t\"--suggestion-percent\": `${suggestionPercent}%`,\r\n\t\t\t\"--sarcasm-percent\": `${sarcasmPercent}%`\r\n\t\t};\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.comment-stats {\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: center;\r\n\t\tvertical-align: middle;\r\n\t\tgap: 2px;\r\n\t\tmargin: 0 2px;\r\n\t\tline-height: 1;\r\n\t}\r\n\r\n\t/* 迷你立场堆叠图 (纵向) */\r\n\t.standpoint-chart {\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: flex-end;\r\n\t\twidth: 8px;\r\n\t\theight: 16px;\r\n\t}\r\n\r\n\t.stacked-bar {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tgap: 1px;\r\n\t}\r\n\r\n\t.bar-segment {\r\n\t\twidth: 100%;\r\n\t\tmin-height: 1px;\r\n\t\ttransition: height 0.2s ease;\r\n\t}\r\n\r\n\t.bar-segment.support {\r\n\t\tbackground-color: #ccebc5;\r\n\t\theight: var(--support-height, 0%);\r\n\t}\r\n\r\n\t.bar-segment.neutral {\r\n\t\tbackground-color: #b3cde3;\r\n\t\theight: var(--neutral-height, 0%);\r\n\t}\r\n\r\n\t.bar-segment.oppose {\r\n\t\tbackground-color: #fbb4ae;\r\n\t\theight: var(--oppose-height, 0%);\r\n\t}\r\n\r\n\t/* 迷你类型饼图 */\r\n\t.type-chart {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 14px;\r\n\t\theight: 14px;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground: conic-gradient(\r\n\t\t\t#4285f4 0% var(--statement-percent, 0%),\r\n\t\t\t#ea4335 var(--statement-percent, 0%)\r\n\t\t\t\tcalc(var(--statement-percent, 0%) + var(--question-percent, 0%)),\r\n\t\t\t#34a853 calc(var(--statement-percent, 0%) + var(--question-percent, 0%))\r\n\t\t\t\tcalc(\r\n\t\t\t\t\tvar(--statement-percent, 0%) + var(--question-percent, 0%) +\r\n\t\t\t\t\t\tvar(--exclamation-percent, 0%)\r\n\t\t\t\t),\r\n\t\t\t#fbbc05\r\n\t\t\t\tcalc(\r\n\t\t\t\t\tvar(--statement-percent, 0%) + var(--question-percent, 0%) +\r\n\t\t\t\t\t\tvar(--exclamation-percent, 0%)\r\n\t\t\t\t)\r\n\t\t\t\tcalc(\r\n\t\t\t\t\tvar(--statement-percent, 0%) + var(--question-percent, 0%) +\r\n\t\t\t\t\t\tvar(--exclamation-percent, 0%) + var(--suggestion-percent, 0%)\r\n\t\t\t\t),\r\n\t\t\t#ff6d00\r\n\t\t\t\tcalc(\r\n\t\t\t\t\tvar(--statement-percent, 0%) + var(--question-percent, 0%) +\r\n\t\t\t\t\t\tvar(--exclamation-percent, 0%) + var(--suggestion-percent, 0%)\r\n\t\t\t\t)\r\n\t\t\t\t100%\r\n\t\t);\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}