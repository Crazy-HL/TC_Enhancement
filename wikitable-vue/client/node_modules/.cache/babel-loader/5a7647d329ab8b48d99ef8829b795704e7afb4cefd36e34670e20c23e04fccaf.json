{"ast":null,"code":"import { computed } from \"vue\";\nexport default {\n  __name: 'HighFrequencyWords',\n  props: {\n    sentence: {\n      type: String,\n      required: true\n    },\n    sentenceIndex: {\n      type: Number,\n      required: true\n    },\n    highFrequencyWords: {\n      type: Object,\n      default: () => ({})\n    },\n    showHighlight: {\n      type: Boolean,\n      default: true\n    },\n    hasComments: {\n      type: Boolean,\n      default: false\n    },\n    commentLevel: {\n      type: Object,\n      default: () => ({\n        level: 0\n      })\n    },\n    isActive: {\n      type: Boolean,\n      default: false\n    },\n    showMarker: {\n      type: Boolean,\n      default: true\n    },\n    commentCount: {\n      type: Number,\n      default: 0\n    },\n    visibleCommentTypes: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"click\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const processedSentence = computed(() => {\n      try {\n        // 安全访问高频词数据\n        const wordList = props.highFrequencyWords?.[props.sentenceIndex] || [];\n        if (!props.showHighlight || wordList.length === 0) {\n          return props.sentence;\n        }\n        let result = props.sentence;\n\n        // 按频率排序并取前5个\n        const sortedWords = wordList.filter(entry => Array.isArray(entry) && entry.length >= 2).sort((a, b) => (b[1] || 0) - (a[1] || 0)).slice(0, 5);\n        sortedWords.forEach((_ref2, index) => {\n          let [word] = _ref2;\n          if (word && typeof word === \"string\" && result.includes(word)) {\n            const regex = new RegExp(escapeRegExp(word), \"g\");\n            result = result.replace(regex, `<span class=\"circled-word\" style=\"--circle-color: ${getCircleColor(index)}\"\n           title=\"高频词汇\">${word}</span>`);\n          }\n        });\n        return result;\n      } catch (error) {\n        console.error(\"处理高频词时出错:\", error);\n        return props.sentence;\n      }\n    });\n    const escapeRegExp = string => {\n      return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    };\n    const getCircleColor = index => {\n      const colors = [\"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\", \"#F44336\"];\n      return colors[index % colors.length];\n    };\n    const handleClick = () => {\n      emit(\"click\", props.sentenceIndex);\n    };\n    const __returned__ = {\n      props,\n      emit,\n      processedSentence,\n      escapeRegExp,\n      getCircleColor,\n      handleClick,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","emit","__emit","processedSentence","wordList","highFrequencyWords","sentenceIndex","showHighlight","length","sentence","result","sortedWords","filter","entry","Array","isArray","sort","a","b","slice","forEach","_ref2","index","word","includes","regex","RegExp","escapeRegExp","replace","getCircleColor","error","console","string","colors","handleClick"],"sources":["D:/ZhiHu/zhihu-bullet/wikitable-vue/client/src/components/HighFrequencyWords.vue"],"sourcesContent":["<template>\r\n\t<span class=\"sentence-wrapper\">\r\n\t\t<span\r\n\t\t\tclass=\"sentence\"\r\n\t\t\t:class=\"{\r\n\t\t\t\t'has-comment': hasComments,\r\n\t\t\t\tselected: isActive\r\n\t\t\t}\"\r\n\t\t\t@click=\"handleClick\"\r\n\t\t\tv-html=\"processedSentence\">\r\n\t\t\t<sup v-if=\"showMarker && hasComments\" class=\"annotation-marker\">\r\n\t\t\t\t{{ commentCount }}\r\n\t\t\t</sup>\r\n\t\t</span>\r\n\t</span>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tsentence: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tsentenceIndex: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\thighFrequencyWords: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t},\r\n\t\tshowHighlight: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\thasComments: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tcommentLevel: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({ level: 0 })\r\n\t\t},\r\n\t\tisActive: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tshowMarker: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tcommentCount: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 0\r\n\t\t},\r\n\t\tvisibleCommentTypes: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t}\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"click\"]);\r\n\r\n\tconst processedSentence = computed(() => {\r\n\t\ttry {\r\n\t\t\t// 安全访问高频词数据\r\n\t\t\tconst wordList = props.highFrequencyWords?.[props.sentenceIndex] || [];\r\n\r\n\t\t\tif (!props.showHighlight || wordList.length === 0) {\r\n\t\t\t\treturn props.sentence;\r\n\t\t\t}\r\n\r\n\t\t\tlet result = props.sentence;\r\n\r\n\t\t\t// 按频率排序并取前5个\r\n\t\t\tconst sortedWords = wordList\r\n\t\t\t\t.filter(entry => Array.isArray(entry) && entry.length >= 2)\r\n\t\t\t\t.sort((a, b) => (b[1] || 0) - (a[1] || 0))\r\n\t\t\t\t.slice(0, 5);\r\n\r\n\t\t\tsortedWords.forEach(([word], index) => {\r\n\t\t\t\tif (word && typeof word === \"string\" && result.includes(word)) {\r\n\t\t\t\t\tconst regex = new RegExp(escapeRegExp(word), \"g\");\r\n\t\t\t\t\tresult = result.replace(\r\n\t\t\t\t\t\tregex,\r\n\t\t\t\t\t\t`<span class=\"circled-word\" style=\"--circle-color: ${getCircleColor(\r\n\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t)}\"\r\n           title=\"高频词汇\">${word}</span>`\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn result;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"处理高频词时出错:\", error);\r\n\t\t\treturn props.sentence;\r\n\t\t}\r\n\t});\r\n\r\n\tconst escapeRegExp = string => {\r\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n\t};\r\n\r\n\tconst getCircleColor = index => {\r\n\t\tconst colors = [\"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\", \"#F44336\"];\r\n\t\treturn colors[index % colors.length];\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\temit(\"click\", props.sentenceIndex);\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.sentence-wrapper {\r\n\t\tdisplay: inline;\r\n\t}\r\n\r\n\t.sentence {\r\n\t\tdisplay: inline;\r\n\t\tmargin-right: 0.2em;\r\n\t\tposition: relative;\r\n\t\ttransition: all 0.2s;\r\n\t\tpadding: 0 1px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.sentence.has-comment {\r\n\t\t/* 有评论时的基本样式 */\r\n\t}\r\n\r\n\t.sentence.selected {\r\n\t\tbackground-color: rgba(255, 236, 179, 0.4); /* 点击后的黄色高亮效果 */\r\n\t}\r\n\r\n\t.annotation-marker {\r\n\t\tcolor: #ff9800;\r\n\t\tfont-size: 0.8em;\r\n\t\tvertical-align: super;\r\n\t\tmargin-left: 2px;\r\n\t}\r\n\r\n\t/* 高频词圆圈样式 */\r\n\t:deep(.circled-word) {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline-block;\r\n\t\tpadding: 0 2px;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t:deep(.circled-word::before) {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: calc(100% + 8px);\r\n\t\theight: calc(100% + 4px);\r\n\t\tborder: 2px solid var(--circle-color);\r\n\t\tborder-radius: 50%;\r\n\t\tbox-sizing: border-box;\r\n\t\tz-index: -1;\r\n\t\topacity: 0.8;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t:deep(.circled-word:hover::before) {\r\n\t\topacity: 1;\r\n\t\tborder-width: 3px;\r\n\t\tbox-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n\t}\r\n</style>\r\n"],"mappings":"AAkBC,SAASA,QAAQ,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAE9B,MAAMC,KAAK,GAAGC,OAyCZ;IAEF,MAAMC,IAAI,GAAGC,MAAsB;IAEnC,MAAMC,iBAAiB,GAAGL,QAAQ,CAAC,MAAM;MACxC,IAAI;QACH;QACA,MAAMM,QAAQ,GAAGL,KAAK,CAACM,kBAAkB,GAAGN,KAAK,CAACO,aAAa,CAAC,IAAI,EAAE;QAEtE,IAAI,CAACP,KAAK,CAACQ,aAAa,IAAIH,QAAQ,CAACI,MAAM,KAAK,CAAC,EAAE;UAClD,OAAOT,KAAK,CAACU,QAAQ;QACtB;QAEA,IAAIC,MAAM,GAAGX,KAAK,CAACU,QAAQ;;QAE3B;QACA,MAAME,WAAW,GAAGP,QAAQ,CAC1BQ,MAAM,CAACC,KAAK,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACL,MAAM,IAAI,CAAC,CAAC,CAC1DQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAKD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CACzCE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAEbR,WAAW,CAACS,OAAO,CAAC,CAAAC,KAAA,EAASC,KAAK,KAAK;UAAA,IAAlB,CAACC,IAAI,CAAC,GAAAF,KAAA;UAC1B,IAAIE,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIb,MAAM,CAACc,QAAQ,CAACD,IAAI,CAAC,EAAE;YAC9D,MAAME,KAAK,GAAG,IAAIC,MAAM,CAACC,YAAY,CAACJ,IAAI,CAAC,EAAE,GAAG,CAAC;YACjDb,MAAM,GAAGA,MAAM,CAACkB,OAAO,CACtBH,KAAK,EACL,qDAAqDI,cAAc,CAClEP,KACD,CAAC;AACP,0BAA0BC,IAAI,SACzB,CAAC;UACF;QACD,CAAC,CAAC;QAEF,OAAOb,MAAM;MACd,CAAC,CAAC,OAAOoB,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,OAAO/B,KAAK,CAACU,QAAQ;MACtB;IACD,CAAC,CAAC;IAEF,MAAMkB,YAAY,GAAGK,MAAM,IAAI;MAC9B,OAAOA,MAAM,CAACJ,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC;IACrD,CAAC;IAED,MAAMC,cAAc,GAAGP,KAAK,IAAI;MAC/B,MAAMW,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;MACtE,OAAOA,MAAM,CAACX,KAAK,GAAGW,MAAM,CAACzB,MAAM,CAAC;IACrC,CAAC;IAED,MAAM0B,WAAW,GAAGA,CAAA,KAAM;MACzBjC,IAAI,CAAC,OAAO,EAAEF,KAAK,CAACO,aAAa,CAAC;IACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}