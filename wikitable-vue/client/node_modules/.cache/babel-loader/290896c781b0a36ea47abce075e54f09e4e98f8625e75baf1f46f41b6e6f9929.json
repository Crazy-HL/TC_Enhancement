{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ec3c90c2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"sentence-wrapper\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"span\", _hoisted_1, [_createElementVNode(\"span\", {\n    class: _normalizeClass([\"sentence\", {\n      'has-comment': $props.hasComments,\n      [`comment-level-${$props.commentLevel.level}`]: $props.hasComments && $props.highlightContent,\n      selected: $props.isActive\n    }]),\n    onClick: $setup.handleClick,\n    innerHTML: $setup.sanitizedHtml\n  }, null, 10 /* CLASS, PROPS */, _hoisted_2)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","$props","hasComments","commentLevel","level","highlightContent","isActive","onClick","$setup","handleClick","innerHTML","sanitizedHtml","_hoisted_2"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\HighFrequencyWords.vue"],"sourcesContent":["<template>\r\n\t<span class=\"sentence-wrapper\">\r\n\t\t<span\r\n\t\t\tclass=\"sentence\"\r\n\t\t\t:class=\"{\r\n\t\t\t\t'has-comment': hasComments,\r\n\t\t\t\t[`comment-level-${commentLevel.level}`]:\r\n\t\t\t\t\thasComments && highlightContent,\r\n\t\t\t\tselected: isActive\r\n\t\t\t}\"\r\n\t\t\t@click=\"handleClick\"\r\n\t\t\tv-html=\"sanitizedHtml\">\r\n\t\t\t<sup v-if=\"showMarker && hasComments\" class=\"annotation-marker\">\r\n\t\t\t\t{{ commentCount }}\r\n\t\t\t</sup>\r\n\t\t</span>\r\n\t</span>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\timport DOMPurify from \"dompurify\"; // 用于HTML净化\r\n\r\n\tconst props = defineProps({\r\n\t\tsentence: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tsentenceIndex: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\thighFrequencyWords: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t},\r\n\t\tshowHighlight: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\thasComments: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tcommentLevel: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({ level: 0 })\r\n\t\t},\r\n\t\thighlightContent: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tisActive: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tshowMarker: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tcommentCount: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 0\r\n\t\t},\r\n\t\tvisibleCommentTypes: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t}\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"click\"]);\r\n\r\n\tconst handleClick = () => {\r\n\t\temit(\"click\", props.sentenceIndex);\r\n\t};\r\n\r\n\t// 转义正则表达式特殊字符\r\n\tconst escapeRegExp = string => {\r\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n\t};\r\n\r\n\t// 高亮高频词汇\r\n\tconst highlightedSentence = computed(() => {\r\n\t\tif (\r\n\t\t\t!props.showHighlight ||\r\n\t\t\t!props.highFrequencyWords[props.sentenceIndex]\r\n\t\t) {\r\n\t\t\treturn props.sentence;\r\n\t\t}\r\n\r\n\t\tconst keywords = [...props.highFrequencyWords[props.sentenceIndex]];\r\n\t\tlet highlighted = props.sentence;\r\n\r\n\t\t// 根据权重排序\r\n\t\tkeywords.sort((a, b) => b[1] - a[1]);\r\n\r\n\t\t// 只处理前3个关键词\r\n\t\tkeywords.slice(0, 3).forEach(([word], index) => {\r\n\t\t\t// 确保词汇在句子中存在\r\n\t\t\tif (props.sentence.includes(word)) {\r\n\t\t\t\tconst regex = new RegExp(escapeRegExp(word), \"g\");\r\n\t\t\t\thighlighted = highlighted.replace(\r\n\t\t\t\t\tregex,\r\n\t\t\t\t\t`<span class=\"highlight-word\" style=\"background-color: ${getHighlightColor(\r\n\t\t\t\t\t\tindex\r\n\t\t\t\t\t)}\" \r\n         title=\"相关评论中出现频率较高\">${word}</span>`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn highlighted;\r\n\t});\r\n\r\n\t// 净化HTML内容\r\n\tconst sanitizedHtml = computed(() => {\r\n\t\t// 在浏览器环境中使用DOMPurify\r\n\t\tif (typeof window !== \"undefined\" && window.DOMPurify) {\r\n\t\t\treturn DOMPurify.sanitize(highlightedSentence.value);\r\n\t\t}\r\n\t\t// 服务器端渲染时的简单处理\r\n\t\treturn highlightedSentence.value\r\n\t\t\t.replace(/</g, \"&lt;\")\r\n\t\t\t.replace(/>/g, \"&gt;\");\r\n\t});\r\n\r\n\t// 根据排名获取颜色\r\n\tconst getHighlightColor = index => {\r\n\t\tconst colors = [\"#ffeb3b\", \"#ffc107\", \"#ff9800\"]; // 黄、橙黄、橙\r\n\t\treturn colors[index] || \"#ffeb3b\";\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\t.sentence-wrapper {\r\n\t\tdisplay: inline;\r\n\t}\r\n\r\n\t.sentence {\r\n\t\tdisplay: inline;\r\n\t\tmargin-right: 0.2em;\r\n\t\tposition: relative;\r\n\t\ttransition: all 0.2s;\r\n\t\tpadding: 0 1px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.sentence.has-comment {\r\n\t\tbackground-color: rgba(255, 236, 179, 0.2);\r\n\t}\r\n\r\n\t.sentence.comment-level-1 {\r\n\t\tbackground-color: rgba(255, 236, 179, 0.2);\r\n\t}\r\n\t.sentence.comment-level-2 {\r\n\t\tbackground-color: rgba(255, 236, 179, 0.4);\r\n\t}\r\n\t.sentence.comment-level-3 {\r\n\t\tbackground-color: rgba(255, 236, 179, 0.6);\r\n\t}\r\n\t.sentence.comment-level-4 {\r\n\t\tbackground-color: rgba(255, 236, 179, 0.8);\r\n\t}\r\n\t.sentence.comment-level-5 {\r\n\t\tbackground-color: rgba(255, 236, 179, 1);\r\n\t}\r\n\r\n\t.sentence.selected {\r\n\t\tbackground-color: rgba(255, 236, 179, 0.4);\r\n\t}\r\n\r\n\t.annotation-marker {\r\n\t\tcolor: #ff9800;\r\n\t\tfont-size: 0.8em;\r\n\t\tvertical-align: super;\r\n\t\tmargin-left: 2px;\r\n\t}\r\n\r\n\t/* 高亮词汇样式需要改为全局或使用深度选择器 */\r\n\t:deep(.highlight-word) {\r\n\t\tpadding: 0 2px;\r\n\t\tborder-radius: 3px;\r\n\t\tfont-weight: bold;\r\n\t\ttransition: all 0.3s;\r\n\t\tbox-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);\r\n\t\tposition: relative;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t:deep(.highlight-word:hover) {\r\n\t\ttransform: scale(1.05);\r\n\t\tbox-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n\t\tz-index: 2;\r\n\t}\r\n\r\n\t:deep(.highlight-word::after) {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\tbottom: -2px;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 2px;\r\n\t\tbackground: currentColor;\r\n\t\topacity: 0.5;\r\n\t\ttransition: all 0.3s;\r\n\t}\r\n\r\n\t:deep(.highlight-word:hover::after) {\r\n\t\tbottom: -4px;\r\n\t\topacity: 0.8;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAkB;mBAD/B;;uBACCC,mBAAA,CAeO,QAfPC,UAeO,GAdNC,mBAAA,CAaO;IAZNH,KAAK,EAHRI,eAAA,EAGS,UAAU;qBACcC,MAAA,CAAAC,WAAW;wBAAyBD,MAAA,CAAAE,YAAY,CAACC,KAAK,KAAWH,MAAA,CAAAC,WAAW,IAAID,MAAA,CAAAI,gBAAgB;gBAAiBJ,MAAA,CAAAK;;IAM9IC,OAAK,EAAEC,MAAA,CAAAC,WAAW;IACnBC,SAAsB,EAAdF,MAAA,CAAAG;kCAXXC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}