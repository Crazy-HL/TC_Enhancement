{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from \"vue\";\nimport api from \"@/api\";\nimport ArticleHeader from \"./ArticleHeader.vue\";\nimport ArticleContent from \"./ArticleContent.vue\";\nimport ArticleFooter from \"./ArticleFooter.vue\";\nimport DanmuDisplay from \"./DanmuDisplay.vue\";\nexport default {\n  __name: 'ArticleView',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const article = ref({});\n    const sentences = ref([]);\n    const comments = ref([]);\n    const activeSentence = ref(null);\n    const articleContainer = ref(null);\n\n    // 获取文章数据\n    const fetchArticleData = async () => {\n      const [articleRes, commentsRes] = await Promise.all([api.get(\"article\", {}), api.get(\"comments\", {})]);\n      article.value = articleRes[0];\n      comments.value = commentsRes;\n      sentences.value = splitIntoSentences(article.value.content_text);\n    };\n\n    // 句子分割逻辑\n    const splitIntoSentences = text => {\n      if (!text) return [];\n      const regex = /([^。！？.!?]+[。！？.!?]+)/g;\n      const result = [];\n      let match;\n      while ((match = regex.exec(text)) !== null) {\n        const sentence = match[0].trim();\n        if (sentence.length > 0) result.push(sentence);\n      }\n      return result.length > 0 ? result : [text];\n    };\n\n    // 处理句子悬停事件\n    const handleSentenceHover = index => {\n      activeSentence.value = index;\n    };\n    onMounted(() => {\n      fetchArticleData();\n    });\n    const __returned__ = {\n      article,\n      sentences,\n      comments,\n      activeSentence,\n      articleContainer,\n      fetchArticleData,\n      splitIntoSentences,\n      handleSentenceHover,\n      ref,\n      onMounted,\n      get api() {\n        return api;\n      },\n      ArticleHeader,\n      ArticleContent,\n      ArticleFooter,\n      DanmuDisplay\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","api","ArticleHeader","ArticleContent","ArticleFooter","DanmuDisplay","article","sentences","comments","activeSentence","articleContainer","fetchArticleData","articleRes","commentsRes","Promise","all","get","value","splitIntoSentences","content_text","text","regex","result","match","exec","sentence","trim","length","push","handleSentenceHover","index"],"sources":["D:/ZhiHu/zhihu-bullet/wikitable-vue/client/src/components/ArticleView.vue"],"sourcesContent":["<template>\r\n\t<div class=\"article-container\" ref=\"articleContainer\">\r\n\t\t<DanmuDisplay\r\n\t\t\t:active-sentence=\"activeSentence\"\r\n\t\t\t:comments=\"comments\"\r\n\t\t\t@stop-danmu=\"activeSentence = null\" />\r\n\r\n\t\t<ArticleHeader\r\n\t\t\t:title=\"article.title\"\r\n\t\t\t:author=\"article.user_nickname\"\r\n\t\t\t:created-time=\"article.created_time\"\r\n\t\t\t:updated-time=\"article.updated_time\" />\r\n\r\n\t\t<ArticleContent\r\n\t\t\t:sentences=\"sentences\"\r\n\t\t\t:active-sentence=\"activeSentence\"\r\n\t\t\t@sentence-hover=\"handleSentenceHover\" />\r\n\r\n\t\t<ArticleFooter\r\n\t\t\t:voteup-count=\"article.voteup_count\"\r\n\t\t\t:comment-count=\"article.comment_count\"\r\n\t\t\t:content-url=\"article.content_url\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\timport api from \"@/api\";\r\n\timport ArticleHeader from \"./ArticleHeader.vue\";\r\n\timport ArticleContent from \"./ArticleContent.vue\";\r\n\timport ArticleFooter from \"./ArticleFooter.vue\";\r\n\timport DanmuDisplay from \"./DanmuDisplay.vue\";\r\n\r\n\tconst article = ref({});\r\n\tconst sentences = ref([]);\r\n\tconst comments = ref([]);\r\n\tconst activeSentence = ref(null);\r\n\tconst articleContainer = ref(null);\r\n\r\n\t// 获取文章数据\r\n\tconst fetchArticleData = async () => {\r\n\t\tconst [articleRes, commentsRes] = await Promise.all([\r\n\t\t\tapi.get(\"article\", {}),\r\n\t\t\tapi.get(\"comments\", {})\r\n\t\t]);\r\n\r\n\t\tarticle.value = articleRes[0];\r\n\t\tcomments.value = commentsRes;\r\n\t\tsentences.value = splitIntoSentences(article.value.content_text);\r\n\t};\r\n\r\n\t// 句子分割逻辑\r\n\tconst splitIntoSentences = text => {\r\n\t\tif (!text) return [];\r\n\t\tconst regex = /([^。！？.!?]+[。！？.!?]+)/g;\r\n\t\tconst result = [];\r\n\t\tlet match;\r\n\r\n\t\twhile ((match = regex.exec(text)) !== null) {\r\n\t\t\tconst sentence = match[0].trim();\r\n\t\t\tif (sentence.length > 0) result.push(sentence);\r\n\t\t}\r\n\t\treturn result.length > 0 ? result : [text];\r\n\t};\r\n\r\n\t// 处理句子悬停事件\r\n\tconst handleSentenceHover = index => {\r\n\t\tactiveSentence.value = index;\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tfetchArticleData();\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.article-container {\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground: #fff;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n\t\tposition: relative;\r\n\t}\r\n</style>\r\n"],"mappings":";AA0BC,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,YAAY,MAAM,oBAAoB;;;;;;;;IAE7C,MAAMC,OAAO,GAAGP,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,MAAMQ,SAAS,GAAGR,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMS,QAAQ,GAAGT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMU,cAAc,GAAGV,GAAG,CAAC,IAAI,CAAC;IAChC,MAAMW,gBAAgB,GAAGX,GAAG,CAAC,IAAI,CAAC;;IAElC;IACA,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACpC,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACnDd,GAAG,CAACe,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EACtBf,GAAG,CAACe,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CACvB,CAAC;MAEFV,OAAO,CAACW,KAAK,GAAGL,UAAU,CAAC,CAAC,CAAC;MAC7BJ,QAAQ,CAACS,KAAK,GAAGJ,WAAW;MAC5BN,SAAS,CAACU,KAAK,GAAGC,kBAAkB,CAACZ,OAAO,CAACW,KAAK,CAACE,YAAY,CAAC;IACjE,CAAC;;IAED;IACA,MAAMD,kBAAkB,GAAGE,IAAI,IAAI;MAClC,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;MACpB,MAAMC,KAAK,GAAG,wBAAwB;MACtC,MAAMC,MAAM,GAAG,EAAE;MACjB,IAAIC,KAAK;MAET,OAAO,CAACA,KAAK,GAAGF,KAAK,CAACG,IAAI,CAACJ,IAAI,CAAC,MAAM,IAAI,EAAE;QAC3C,MAAMK,QAAQ,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC;QAChC,IAAID,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAEL,MAAM,CAACM,IAAI,CAACH,QAAQ,CAAC;MAC/C;MACA,OAAOH,MAAM,CAACK,MAAM,GAAG,CAAC,GAAGL,MAAM,GAAG,CAACF,IAAI,CAAC;IAC3C,CAAC;;IAED;IACA,MAAMS,mBAAmB,GAAGC,KAAK,IAAI;MACpCrB,cAAc,CAACQ,KAAK,GAAGa,KAAK;IAC7B,CAAC;IAED9B,SAAS,CAAC,MAAM;MACfW,gBAAgB,CAAC,CAAC;IACnB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}