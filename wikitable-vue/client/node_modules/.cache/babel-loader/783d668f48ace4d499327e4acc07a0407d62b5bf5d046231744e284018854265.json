{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-292f6a0b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chart-legend-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"chart-group\"\n};\nconst _hoisted_3 = {\n  class: \"pie-legend\"\n};\nconst _hoisted_4 = {\n  class: \"legend-labels\"\n};\nconst _hoisted_5 = {\n  class: \"legend-text\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"chart-group\"\n};\nconst _hoisted_7 = {\n  class: \"stacked-legend\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"stacked-bar\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"bar-segment support\"\n}), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"bar-segment neutral\"\n}), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"bar-segment oppose\"\n})], -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_8];\nconst _hoisted_10 = {\n  class: \"legend-labels\"\n};\nconst _hoisted_11 = {\n  class: \"legend-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 饼图图注 \"), $props.showPieChart ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"pie-chart\",\n    style: _normalizeStyle($setup.pieChartStyle)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.typeLegend, item => {\n    return _createElementVNode(\"div\", {\n      key: item.label,\n      class: \"legend-label\"\n    }, [_createElementVNode(\"span\", {\n      class: \"legend-color\",\n      style: _normalizeStyle({\n        backgroundColor: item.color\n      })\n    }, null, 4 /* STYLE */), _createElementVNode(\"span\", _hoisted_5, _toDisplayString(item.label), 1 /* TEXT */)]);\n  }), 64 /* STABLE_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 堆叠图图注 \"), $props.showStackedChart ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", {\n    class: \"stacked-chart\",\n    style: _normalizeStyle($setup.standpointStyle)\n  }, [..._hoisted_9], 4 /* STYLE */), _createElementVNode(\"div\", _hoisted_10, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.standpointLegend, item => {\n    return _createElementVNode(\"div\", {\n      key: item.label,\n      class: \"legend-label\"\n    }, [_createElementVNode(\"span\", {\n      class: \"legend-color\",\n      style: _normalizeStyle({\n        backgroundColor: item.color\n      })\n    }, null, 4 /* STYLE */), _createElementVNode(\"span\", _hoisted_11, _toDisplayString(item.label), 1 /* TEXT */)]);\n  }), 64 /* STABLE_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_hoisted_8","_createElementBlock","_hoisted_1","_createCommentVNode","$props","showPieChart","_hoisted_2","_hoisted_3","style","_normalizeStyle","$setup","pieChartStyle","_hoisted_4","_Fragment","_renderList","typeLegend","item","label","backgroundColor","color","_hoisted_5","_toDisplayString","showStackedChart","_hoisted_6","_hoisted_7","standpointStyle","_hoisted_9","_hoisted_10","standpointLegend","_hoisted_11"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\ChartLegend.vue"],"sourcesContent":["<template>\r\n\t<div class=\"chart-legend-container\">\r\n\t\t<!-- 饼图图注 -->\r\n\t\t<div class=\"chart-group\" v-if=\"showPieChart\">\r\n\t\t\t<div class=\"pie-legend\">\r\n\t\t\t\t<div class=\"pie-chart\" :style=\"pieChartStyle\"></div>\r\n\t\t\t\t<div class=\"legend-labels\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"item in typeLegend\"\r\n\t\t\t\t\t\t:key=\"item.label\"\r\n\t\t\t\t\t\tclass=\"legend-label\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"legend-color\"\r\n\t\t\t\t\t\t\t:style=\"{ backgroundColor: item.color }\"></span>\r\n\t\t\t\t\t\t<span class=\"legend-text\">{{ item.label }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 堆叠图图注 -->\r\n\t\t<div class=\"chart-group\" v-if=\"showStackedChart\">\r\n\t\t\t<div class=\"stacked-legend\">\r\n\t\t\t\t<div class=\"stacked-chart\" :style=\"standpointStyle\">\r\n\t\t\t\t\t<div class=\"stacked-bar\">\r\n\t\t\t\t\t\t<div class=\"bar-segment support\"></div>\r\n\t\t\t\t\t\t<div class=\"bar-segment neutral\"></div>\r\n\t\t\t\t\t\t<div class=\"bar-segment oppose\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"legend-labels\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"item in standpointLegend\"\r\n\t\t\t\t\t\t:key=\"item.label\"\r\n\t\t\t\t\t\tclass=\"legend-label\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"legend-color\"\r\n\t\t\t\t\t\t\t:style=\"{ backgroundColor: item.color }\"></span>\r\n\t\t\t\t\t\t<span class=\"legend-text\">{{ item.label }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcomments: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tshowPieChart: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tshowStackedChart: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t}\r\n\t});\r\n\r\n\t// 类型数据计算\r\n\tconst typeStats = computed(() => {\r\n\t\tconst stats = {\r\n\t\t\tstatement: 0,\r\n\t\t\tquestion: 0,\r\n\t\t\texclamation: 0,\r\n\t\t\tsuggestion: 0,\r\n\t\t\tsarcasm: 0,\r\n\t\t\ttotal: 0\r\n\t\t};\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tconst type = comment.comment_type || 1;\r\n\t\t\tif (type === 1) stats.statement++;\r\n\t\t\telse if (type === 2) stats.question++;\r\n\t\t\telse if (type === 3) stats.exclamation++;\r\n\t\t\telse if (type === 4) stats.suggestion++;\r\n\t\t\telse if (type === 5) stats.sarcasm++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tstatement:\r\n\t\t\t\tstats.total > 0 ? Math.round((stats.statement / stats.total) * 100) : 0,\r\n\t\t\tquestion:\r\n\t\t\t\tstats.total > 0 ? Math.round((stats.question / stats.total) * 100) : 0,\r\n\t\t\texclamation:\r\n\t\t\t\tstats.total > 0\r\n\t\t\t\t\t? Math.round((stats.exclamation / stats.total) * 100)\r\n\t\t\t\t\t: 0,\r\n\t\t\tsuggestion:\r\n\t\t\t\tstats.total > 0\r\n\t\t\t\t\t? Math.round((stats.suggestion / stats.total) * 100)\r\n\t\t\t\t\t: 0,\r\n\t\t\tsarcasm:\r\n\t\t\t\tstats.total > 0 ? Math.round((stats.sarcasm / stats.total) * 100) : 0\r\n\t\t};\r\n\t});\r\n\r\n\t// 立场数据计算\r\n\tconst standpointStats = computed(() => {\r\n\t\tconst stats = { support: 0, oppose: 0, neutral: 0, total: 0 };\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tif (comment.standpoint === 1) stats.support++;\r\n\t\t\telse if (comment.standpoint === -1) stats.oppose++;\r\n\t\t\telse stats.neutral++;\r\n\t\t\tstats.total++;\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tsupport:\r\n\t\t\t\tstats.total > 0 ? Math.round((stats.support / stats.total) * 100) : 0,\r\n\t\t\toppose:\r\n\t\t\t\tstats.total > 0 ? Math.round((stats.oppose / stats.total) * 100) : 0,\r\n\t\t\tneutral:\r\n\t\t\t\tstats.total > 0 ? Math.round((stats.neutral / stats.total) * 100) : 0\r\n\t\t};\r\n\t});\r\n\r\n\t// 饼图样式\r\n\tconst pieChartStyle = computed(() => {\r\n\t\tconst { statement, question, exclamation, suggestion, sarcasm, total } =\r\n\t\t\ttypeStats.value;\r\n\t\tif (total === 0) return {};\r\n\r\n\t\tconst statementPct = (statement / total) * 100;\r\n\t\tconst questionPct = (question / total) * 100;\r\n\t\tconst exclamationPct = (exclamation / total) * 100;\r\n\t\tconst suggestionPct = (suggestion / total) * 100;\r\n\t\tconst sarcasmPct = (sarcasm / total) * 100;\r\n\r\n\t\treturn {\r\n\t\t\tbackground: `conic-gradient(\r\n      #4285f4 0% ${statementPct}%,\r\n      #ea4335 ${statementPct}% ${statementPct + questionPct}%,\r\n      #34a853 ${statementPct + questionPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct\r\n\t\t\t}%,\r\n      #9c27b0 ${statementPct + questionPct + exclamationPct}% ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t}%,\r\n      #ff9800 ${\r\n\t\t\t\tstatementPct + questionPct + exclamationPct + suggestionPct\r\n\t\t\t}% 100%\r\n    )`,\r\n\t\t\twidth: \"40px\",\r\n\t\t\theight: \"40px\",\r\n\t\t\tborderRadius: \"50%\"\r\n\t\t};\r\n\t});\r\n\r\n\t// 立场图表样式\r\n\tconst standpointStyle = computed(() => {\r\n\t\tconst { support, oppose, neutral, total } = standpointStats.value;\r\n\t\tif (total === 0) return {};\r\n\r\n\t\tconst supportHeight = Math.round((support / total) * 100);\r\n\t\tconst neutralHeight = Math.round((neutral / total) * 100);\r\n\t\tconst opposeHeight = Math.round((oppose / total) * 100);\r\n\r\n\t\treturn {\r\n\t\t\t\"--support-height\": `${supportHeight}%`,\r\n\t\t\t\"--neutral-height\": `${neutralHeight}%`,\r\n\t\t\t\"--oppose-height\": `${opposeHeight}%`\r\n\t\t};\r\n\t});\r\n\r\n\t// 类型图注\r\n\tconst typeLegend = [\r\n\t\t{ label: \"陈述\", key: \"statement\", color: \"#4285f4\" },\r\n\t\t{ label: \"疑问\", key: \"question\", color: \"#ea4335\" },\r\n\t\t{ label: \"感叹\", key: \"exclamation\", color: \"#34a853\" },\r\n\t\t{ label: \"建议\", key: \"suggestion\", color: \"#9c27b0\" },\r\n\t\t{ label: \"讽刺\", key: \"sarcasm\", color: \"#ff9800\" }\r\n\t];\r\n\r\n\t// 立场图注\r\n\tconst standpointLegend = [\r\n\t\t{ label: \"支持\", key: \"support\", color: \"#ccebc5\" },\r\n\t\t{ label: \"反对\", key: \"oppose\", color: \"#fbb4ae\" },\r\n\t\t{ label: \"中立\", key: \"neutral\", color: \"#b3cde3\" }\r\n\t];\r\n</script>\r\n\r\n<style scoped>\r\n\t.chart-legend-container {\r\n\t\tdisplay: flex;\r\n\t\tgap: 15px;\r\n\t}\r\n\r\n\t.chart-group {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 8px;\r\n\t}\r\n\r\n\t.pie-legend,\r\n\t.stacked-legend {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 8px;\r\n\t}\r\n\r\n\t.pie-chart {\r\n\t\tflex-shrink: 0;\r\n\t}\r\n\r\n\t.stacked-chart {\r\n\t\twidth: 20px;\r\n\t\theight: 40px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: flex-end;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 3px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.stacked-bar {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.bar-segment {\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.bar-segment.support {\r\n\t\tbackground-color: #ccebc5;\r\n\t\theight: var(--support-height, 33%);\r\n\t}\r\n\r\n\t.bar-segment.neutral {\r\n\t\tbackground-color: #b3cde3;\r\n\t\theight: var(--neutral-height, 34%);\r\n\t}\r\n\r\n\t.bar-segment.oppose {\r\n\t\tbackground-color: #fbb4ae;\r\n\t\theight: var(--oppose-height, 33%);\r\n\t}\r\n\r\n\t.legend-labels {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 4px;\r\n\t}\r\n\r\n\t.legend-label {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 1.2;\r\n\t}\r\n\r\n\t.legend-color {\r\n\t\twidth: 10px;\r\n\t\theight: 10px;\r\n\t\tborder-radius: 2px;\r\n\t\tflex-shrink: 0;\r\n\t}\r\n\r\n\t.legend-text {\r\n\t\twhite-space: nowrap;\r\n\t\tcolor: #555;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.chart-legend-container {\r\n\t\t\tflex-direction: column;\r\n\t\t\tgap: 8px;\r\n\t\t}\r\n\r\n\t\t.pie-legend,\r\n\t\t.stacked-legend {\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: flex-start;\r\n\t\t}\r\n\r\n\t\t.legend-labels {\r\n\t\t\tflex-direction: row;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\tgap: 8px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAwB;;EADpCC,GAAA;EAGOD,KAAK,EAAC;;;EACLA,KAAK,EAAC;AAAY;;EAEjBA,KAAK,EAAC;AAAe;;EAQlBA,KAAK,EAAC;AAAa;;EAd/BC,GAAA;EAqBOD,KAAK,EAAC;;;EACLA,KAAK,EAAC;AAAgB;gEAEzBE,mBAAA,CAIM;EAJDF,KAAK,EAAC;AAAa,I,aACvBE,mBAAA,CAAuC;EAAlCF,KAAK,EAAC;AAAqB,I,aAChCE,mBAAA,CAAuC;EAAlCF,KAAK,EAAC;AAAqB,I,aAChCE,mBAAA,CAAsC;EAAjCF,KAAK,EAAC;AAAoB,G;oBAHhCG,UAIM,C;;EAEFH,KAAK,EAAC;AAAe;;EAQlBA,KAAK,EAAC;AAAa;;uBArC9BI,mBAAA,CA0CM,OA1CNC,UA0CM,GAzCLC,mBAAA,UAAa,EACkBC,MAAA,CAAAC,YAAY,I,cAA3CJ,mBAAA,CAeM,OAfNK,UAeM,GAdLP,mBAAA,CAaM,OAbNQ,UAaM,GAZLR,mBAAA,CAAoD;IAA/CF,KAAK,EAAC,WAAW;IAAEW,KAAK,EALjCC,eAAA,CAKmCC,MAAA,CAAAC,aAAa;2BAC5CZ,mBAAA,CAUM,OAVNa,UAUM,I,cATLX,mBAAA,CAQMY,SAAA,QAfXC,WAAA,CAQqBJ,MAAA,CAAAK,UAAU,EAAlBC,IAAI;WADZjB,mBAAA,CAQM;MANJD,GAAG,EAAEkB,IAAI,CAACC,KAAK;MAChBpB,KAAK,EAAC;QACNE,mBAAA,CAEiD;MADhDF,KAAK,EAAC,cAAc;MACnBW,KAAK,EAbbC,eAAA;QAAAS,eAAA,EAakCF,IAAI,CAACG;MAAK;6BACtCpB,mBAAA,CAAiD,QAAjDqB,UAAiD,EAAAC,gBAAA,CAApBL,IAAI,CAACC,KAAK,iB;0CAd7Cd,mBAAA,gBAoBEA,mBAAA,WAAc,EACiBC,MAAA,CAAAkB,gBAAgB,I,cAA/CrB,mBAAA,CAqBM,OArBNsB,UAqBM,GApBLxB,mBAAA,CAmBM,OAnBNyB,UAmBM,GAlBLzB,mBAAA,CAMM;IANDF,KAAK,EAAC,eAAe;IAAEW,KAAK,EAvBrCC,eAAA,CAuBuCC,MAAA,CAAAe,eAAe;KAvBtD,IAAAC,UAAA,mBA8BI3B,mBAAA,CAUM,OAVN4B,WAUM,I,cATL1B,mBAAA,CAQMY,SAAA,QAvCXC,WAAA,CAgCqBJ,MAAA,CAAAkB,gBAAgB,EAAxBZ,IAAI;WADZjB,mBAAA,CAQM;MANJD,GAAG,EAAEkB,IAAI,CAACC,KAAK;MAChBpB,KAAK,EAAC;QACNE,mBAAA,CAEiD;MADhDF,KAAK,EAAC,cAAc;MACnBW,KAAK,EArCbC,eAAA;QAAAS,eAAA,EAqCkCF,IAAI,CAACG;MAAK;6BACtCpB,mBAAA,CAAiD,QAAjD8B,WAAiD,EAAAR,gBAAA,CAApBL,IAAI,CAACC,KAAK,iB;0CAtC7Cd,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}