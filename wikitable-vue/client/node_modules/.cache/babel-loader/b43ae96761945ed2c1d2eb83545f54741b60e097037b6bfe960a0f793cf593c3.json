{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-69ad0d39\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"danmu-container\"\n};\nconst _hoisted_2 = {\n  class: \"danmu-user\"\n};\nconst _hoisted_3 = {\n  class: \"danmu-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.activeSentence !== null && $setup.getCommentsForSentence($props.activeSentence).length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.getCommentsForSentence($props.activeSentence), comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.comment_id,\n      class: \"danmu-item\",\n      style: _normalizeStyle({\n        top: `${Math.random() * 80}px`,\n        animationDuration: `${10 + Math.random() * 10}s`,\n        color: $setup.getRandomColor()\n      })\n    }, [_createElementVNode(\"span\", _hoisted_2, _toDisplayString(comment.user_nickname) + \"：\", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_3, _toDisplayString(comment.content), 1 /* TEXT */)], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","$props","activeSentence","$setup","getCommentsForSentence","length","_createElementBlock","_hoisted_1","_Fragment","_renderList","comment","comment_id","style","_normalizeStyle","Math","random","getRandomColor","_createElementVNode","_hoisted_2","_toDisplayString","user_nickname","_hoisted_3","content","_createCommentVNode"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\DanmuDisplay.vue"],"sourcesContent":["<template>\r\n\t<div\r\n\t\tclass=\"danmu-container\"\r\n\t\tv-if=\"\r\n\t\t\tactiveSentence !== null &&\r\n\t\t\tgetCommentsForSentence(activeSentence).length > 0\r\n\t\t\">\r\n\t\t<div\r\n\t\t\tv-for=\"comment in getCommentsForSentence(activeSentence)\"\r\n\t\t\t:key=\"comment.comment_id\"\r\n\t\t\tclass=\"danmu-item\"\r\n\t\t\t:style=\"{\r\n\t\t\t\ttop: `${Math.random() * 80}px`,\r\n\t\t\t\tanimationDuration: `${10 + Math.random() * 10}s`,\r\n\t\t\t\tcolor: getRandomColor()\r\n\t\t\t}\">\r\n\t\t\t<span class=\"danmu-user\">{{ comment.user_nickname }}：</span>\r\n\t\t\t<span class=\"danmu-content\">{{ comment.content }}</span>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcomments: Array,\r\n\t\tactiveSentence: Number\r\n\t});\r\n\r\n\t// 颜色池\r\n\tconst colorPool = [\r\n\t\t\"#FF6B6B\",\r\n\t\t\"#4ECDC4\",\r\n\t\t\"#45B7D1\",\r\n\t\t\"#FFA07A\",\r\n\t\t\"#98D8C8\",\r\n\t\t\"#F06292\",\r\n\t\t\"#7986CB\",\r\n\t\t\"#9575CD\",\r\n\t\t\"#64B5F6\",\r\n\t\t\"#4DB6AC\",\r\n\t\t\"#81C784\",\r\n\t\t\"#FFD54F\"\r\n\t];\r\n\r\n\t// 获取随机颜色\r\n\tconst getRandomColor = () => {\r\n\t\treturn colorPool[Math.floor(Math.random() * colorPool.length)];\r\n\t};\r\n\r\n\t// 获取某句子的相关评论\r\n\tconst getCommentsForSentence = sentenceIndex => {\r\n\t\treturn props.comments.filter(comment => comment.link === sentenceIndex);\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.danmu-container {\r\n\t\tposition: fixed;\r\n\t\ttop: 20px;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\toverflow: hidden;\r\n\t\tz-index: 100;\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\t.danmu-item {\r\n\t\tposition: absolute;\r\n\t\twhite-space: nowrap;\r\n\t\tfont-size: 16px;\r\n\t\ttext-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);\r\n\t\tpadding: 4px 8px;\r\n\t\tborder-radius: 15px;\r\n\t\tbackground-color: rgba(255, 255, 255, 0.8);\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\t\tanimation: danmu-move linear;\r\n\t\tleft: 100%;\r\n\t}\r\n\r\n\t.danmu-user {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-right: 5px;\r\n\t}\r\n\r\n\t@keyframes danmu-move {\r\n\t\tto {\r\n\t\t\ttransform: translateX(-100vw);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":";;;EAAAA,GAAA;EAEEC,KAAK,EAAC;;;EAcCA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAe;;SAdjBC,MAAA,CAAAC,cAAc,aAAiBC,MAAA,CAAAC,sBAAsB,CAACH,MAAA,CAAAC,cAAc,EAAEG,MAAM,Q,cAFxFC,mBAAA,CAkBM,OAlBNC,UAkBM,I,kBAZLD,mBAAA,CAWME,SAAA,QAlBRC,WAAA,CAQqBN,MAAA,CAAAC,sBAAsB,CAACH,MAAA,CAAAC,cAAc,GAAhDQ,OAAO;yBADfJ,mBAAA,CAWM;MATJP,GAAG,EAAEW,OAAO,CAACC,UAAU;MACxBX,KAAK,EAAC,YAAY;MACjBY,KAAK,EAXTC,eAAA;gBAW0BC,IAAI,CAACC,MAAM;mCAA6CD,IAAI,CAACC,MAAM;eAAwBZ,MAAA,CAAAa,cAAc;;QAKhIC,mBAAA,CAA4D,QAA5DC,UAA4D,EAAAC,gBAAA,CAAhCT,OAAO,CAACU,aAAa,IAAG,GAAC,iBACrDH,mBAAA,CAAwD,QAAxDI,UAAwD,EAAAF,gBAAA,CAAzBT,OAAO,CAACY,OAAO,iB;sCAjBjDC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}