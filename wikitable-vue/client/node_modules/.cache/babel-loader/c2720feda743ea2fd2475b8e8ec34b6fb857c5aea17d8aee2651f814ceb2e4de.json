{"ast":null,"code":"import { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3bf0793b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"article-container\",\n  ref: \"articleContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"DanmuDisplay\"], {\n    \"active-sentence\": $setup.activeSentence,\n    comments: $setup.comments,\n    onStopDanmu: _cache[0] || (_cache[0] = $event => $setup.activeSentence = null)\n  }, null, 8 /* PROPS */, [\"active-sentence\", \"comments\"]), _createVNode($setup[\"ArticleHeader\"], {\n    title: $setup.article.title,\n    author: $setup.article.user_nickname,\n    \"created-time\": $setup.article.created_time,\n    \"updated-time\": $setup.article.updated_time\n  }, null, 8 /* PROPS */, [\"title\", \"author\", \"created-time\", \"updated-time\"]), _createVNode($setup[\"ArticleContent\"], {\n    sentences: $setup.sentences,\n    \"active-sentence\": $setup.activeSentence,\n    onSentenceHover: $setup.handleSentenceHover\n  }, null, 8 /* PROPS */, [\"sentences\", \"active-sentence\"]), _createVNode($setup[\"ArticleFooter\"], {\n    \"voteup-count\": $setup.article.voteup_count,\n    \"comment-count\": $setup.article.comment_count,\n    \"content-url\": $setup.article.content_url\n  }, null, 8 /* PROPS */, [\"voteup-count\", \"comment-count\", \"content-url\"])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createVNode","$setup","activeSentence","comments","onStopDanmu","_cache","$event","title","article","author","user_nickname","created_time","updated_time","sentences","onSentenceHover","handleSentenceHover","voteup_count","comment_count","content_url"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\ArticleView.vue"],"sourcesContent":["<template>\r\n\t<div class=\"article-container\" ref=\"articleContainer\">\r\n\t\t<DanmuDisplay\r\n\t\t\t:active-sentence=\"activeSentence\"\r\n\t\t\t:comments=\"comments\"\r\n\t\t\t@stop-danmu=\"activeSentence = null\" />\r\n\r\n\t\t<ArticleHeader\r\n\t\t\t:title=\"article.title\"\r\n\t\t\t:author=\"article.user_nickname\"\r\n\t\t\t:created-time=\"article.created_time\"\r\n\t\t\t:updated-time=\"article.updated_time\" />\r\n\r\n\t\t<ArticleContent\r\n\t\t\t:sentences=\"sentences\"\r\n\t\t\t:active-sentence=\"activeSentence\"\r\n\t\t\t@sentence-hover=\"handleSentenceHover\" />\r\n\r\n\t\t<ArticleFooter\r\n\t\t\t:voteup-count=\"article.voteup_count\"\r\n\t\t\t:comment-count=\"article.comment_count\"\r\n\t\t\t:content-url=\"article.content_url\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\timport api from \"@/api\";\r\n\timport ArticleHeader from \"./ArticleHeader.vue\";\r\n\timport ArticleContent from \"./ArticleContent.vue\";\r\n\timport ArticleFooter from \"./ArticleFooter.vue\";\r\n\timport DanmuDisplay from \"./DanmuDisplay.vue\";\r\n\r\n\tconst article = ref({});\r\n\tconst sentences = ref([]);\r\n\tconst comments = ref([]);\r\n\tconst activeSentence = ref(null);\r\n\tconst articleContainer = ref(null);\r\n\r\n\t// 获取文章数据\r\n\tconst fetchArticleData = async () => {\r\n\t\tconst [articleRes, commentsRes] = await Promise.all([\r\n\t\t\tapi.get(\"article\", {}),\r\n\t\t\tapi.get(\"comments\", {})\r\n\t\t]);\r\n\r\n\t\tarticle.value = articleRes[0];\r\n\t\tcomments.value = commentsRes;\r\n\t\tsentences.value = splitIntoSentences(article.value.content_text);\r\n\t};\r\n\r\n\t// 句子分割逻辑\r\n\tconst splitIntoSentences = text => {\r\n\t\tif (!text) return [];\r\n\t\tconst regex = /([^。！？.!?]+[。！？.!?]+)/g;\r\n\t\tconst result = [];\r\n\t\tlet match;\r\n\r\n\t\twhile ((match = regex.exec(text)) !== null) {\r\n\t\t\tconst sentence = match[0].trim();\r\n\t\t\tif (sentence.length > 0) result.push(sentence);\r\n\t\t}\r\n\t\treturn result.length > 0 ? result : [text];\r\n\t};\r\n\r\n\t// 处理句子悬停事件\r\n\tconst handleSentenceHover = index => {\r\n\t\tactiveSentence.value = index;\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tfetchArticleData();\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.article-container {\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground: #fff;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n\t\tposition: relative;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC,mBAAmB;EAACC,GAAG,EAAC;;;uBAAnCC,mBAAA,CAqBM,OArBNC,UAqBM,GApBLC,YAAA,CAGuCC,MAAA;IAFrC,iBAAe,EAAEA,MAAA,CAAAC,cAAc;IAC/BC,QAAQ,EAAEF,MAAA,CAAAE,QAAQ;IAClBC,WAAU,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,MAAA,CAAAC,cAAc;4DAE5BF,YAAA,CAIwCC,MAAA;IAHtCM,KAAK,EAAEN,MAAA,CAAAO,OAAO,CAACD,KAAK;IACpBE,MAAM,EAAER,MAAA,CAAAO,OAAO,CAACE,aAAa;IAC7B,cAAY,EAAET,MAAA,CAAAO,OAAO,CAACG,YAAY;IAClC,cAAY,EAAEV,MAAA,CAAAO,OAAO,CAACI;gFAExBZ,YAAA,CAGyCC,MAAA;IAFvCY,SAAS,EAAEZ,MAAA,CAAAY,SAAS;IACpB,iBAAe,EAAEZ,MAAA,CAAAC,cAAc;IAC/BY,eAAc,EAAEb,MAAA,CAAAc;6DAElBf,YAAA,CAGsCC,MAAA;IAFpC,cAAY,EAAEA,MAAA,CAAAO,OAAO,CAACQ,YAAY;IAClC,eAAa,EAAEf,MAAA,CAAAO,OAAO,CAACS,aAAa;IACpC,aAAW,EAAEhB,MAAA,CAAAO,OAAO,CAACU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}