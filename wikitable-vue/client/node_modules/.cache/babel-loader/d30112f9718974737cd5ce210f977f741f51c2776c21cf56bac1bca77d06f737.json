{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, nextTick } from \"vue\";\nimport api from \"@/api\";\nexport default {\n  __name: 'ArticleContent',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const article = ref(null);\n    const articleContent = ref(null);\n    const comments = ref([]);\n    const sentences = ref([]);\n    const selectedSentence = ref(null);\n    const highlightedSentence = ref(null);\n    const isEditing = ref(false);\n    const showCommentModal = ref(false);\n    const modalSentenceIndex = ref(null);\n    const newComment = ref(\"\");\n\n    // 初始化文章和评论数据\n    onMounted(async () => {\n      // 获取文章数据\n      api.get(\"article\", {}, data => {\n        article.value = data[0];\n        // 分割文章内容为句子\n        if (article.value.content_text) {\n          sentences.value = splitIntoSentences(article.value.content_text);\n        }\n      });\n\n      // 获取评论数据\n      api.get(\"comments\", {}, data => {\n        comments.value = data;\n      });\n    });\n\n    // 将文章内容分割为句子\n    const splitIntoSentences = text => {\n      // 简单的句子分割逻辑，可根据实际需求调整\n      return text.split(/(?<=[。！？；.!?;])/g).map(s => s.trim()).filter(s => s.length > 0);\n    };\n\n    // 检查句子是否有评论\n    const hasComment = sentenceIndex => {\n      return comments.value.some(c => c.sentence_id === sentenceIndex);\n    };\n\n    // 获取特定句子的评论\n    const getCommentsForSentence = sentenceIndex => {\n      if (sentenceIndex === null) return [];\n      return comments.value.filter(c => c.sentence_id === sentenceIndex);\n    };\n\n    // 高亮句子\n    const highlightSentence = index => {\n      highlightedSentence.value = index;\n    };\n\n    // 取消高亮\n    const unhighlightSentence = () => {\n      highlightedSentence.value = null;\n    };\n\n    // 打开评论面板\n    const openCommentPanel = sentenceIndex => {\n      selectedSentence.value = sentenceIndex;\n    };\n\n    // 关闭评论面板\n    const closeCommentPanel = () => {\n      selectedSentence.value = null;\n    };\n\n    // 打开评论模态框\n    const openCommentModal = sentenceIndex => {\n      modalSentenceIndex.value = sentenceIndex;\n      showCommentModal.value = true;\n    };\n\n    // 关闭评论模态框\n    const closeCommentModal = () => {\n      showCommentModal.value = false;\n      newComment.value = \"\";\n    };\n\n    // 提交评论\n    const submitComment = () => {\n      if (!newComment.value.trim()) return;\n      const newCommentObj = {\n        comment_id: Date.now().toString(),\n        user_nickname: \"当前用户\",\n        user_avatar: \"\",\n        content: newComment.value,\n        publish_time: Math.floor(Date.now() / 1000),\n        like_count: 0,\n        sentence_id: showCommentModal.value ? modalSentenceIndex.value : selectedSentence.value\n      };\n      comments.value.push(newCommentObj);\n      newComment.value = \"\";\n      showCommentModal.value = false;\n\n      // 在实际应用中，这里应该调用API保存评论\n      // api.post('comments', newCommentObj, response => {\n      //   // 处理响应\n      // });\n    };\n\n    // 切换编辑模式\n    const toggleEditMode = () => {\n      isEditing.value = !isEditing.value;\n      if (!isEditing.value) {\n        selectedSentence.value = null;\n      }\n    };\n    const formatTime = time => {\n      if (!time) return \"\";\n      const date = new Date(time * 1000);\n      return date.toLocaleString();\n    };\n    const __returned__ = {\n      article,\n      articleContent,\n      comments,\n      sentences,\n      selectedSentence,\n      highlightedSentence,\n      isEditing,\n      showCommentModal,\n      modalSentenceIndex,\n      newComment,\n      splitIntoSentences,\n      hasComment,\n      getCommentsForSentence,\n      highlightSentence,\n      unhighlightSentence,\n      openCommentPanel,\n      closeCommentPanel,\n      openCommentModal,\n      closeCommentModal,\n      submitComment,\n      toggleEditMode,\n      formatTime,\n      ref,\n      computed,\n      onMounted,\n      nextTick,\n      get api() {\n        return api;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","nextTick","api","article","articleContent","comments","sentences","selectedSentence","highlightedSentence","isEditing","showCommentModal","modalSentenceIndex","newComment","get","data","value","content_text","splitIntoSentences","text","split","map","s","trim","filter","length","hasComment","sentenceIndex","some","c","sentence_id","getCommentsForSentence","highlightSentence","index","unhighlightSentence","openCommentPanel","closeCommentPanel","openCommentModal","closeCommentModal","submitComment","newCommentObj","comment_id","Date","now","toString","user_nickname","user_avatar","content","publish_time","Math","floor","like_count","push","toggleEditMode","formatTime","time","date","toLocaleString"],"sources":["D:/ZhiHu/zhihu-bullet/wikitable-vue/client/src/components/ArticleContent.vue"],"sourcesContent":["<template>\r\n\t<div class=\"article-container\" v-if=\"article\">\r\n\t\t<h1 class=\"article-title\">{{ article.title }}</h1>\r\n\r\n\t\t<div class=\"article-meta\">\r\n\t\t\t<span class=\"author\">作者: {{ article.user_nickname }}</span>\r\n\t\t\t<span class=\"publish-time\"\r\n\t\t\t\t>发布时间: {{ formatTime(article.created_time) }}</span\r\n\t\t\t>\r\n\t\t\t<span class=\"update-time\"\r\n\t\t\t\t>更新时间: {{ formatTime(article.updated_time) }}</span\r\n\t\t\t>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"article-content-wrapper\">\r\n\t\t\t<div class=\"article-content\" ref=\"articleContent\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(sentence, index) in sentences\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\tclass=\"sentence\"\r\n\t\t\t\t\t:class=\"{\r\n\t\t\t\t\t\t'has-comment': hasComment(index),\r\n\t\t\t\t\t\thighlighted: highlightedSentence === index\r\n\t\t\t\t\t}\"\r\n\t\t\t\t\t@mouseenter=\"highlightSentence(index)\"\r\n\t\t\t\t\t@mouseleave=\"unhighlightSentence\"\r\n\t\t\t\t\t:data-sentence-id=\"index\">\r\n\t\t\t\t\t{{ sentence }}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tv-if=\"isEditing\"\r\n\t\t\t\t\t\tclass=\"add-comment-btn\"\r\n\t\t\t\t\t\t@click=\"openCommentModal(index)\">\r\n\t\t\t\t\t\t+\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 右侧评论面板 -->\r\n\t\t\t<div\r\n\t\t\t\tclass=\"comment-panel\"\r\n\t\t\t\t:class=\"{ 'panel-visible': selectedSentence !== null }\">\r\n\t\t\t\t<div class=\"panel-header\">\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t评论 ({{ getCommentsForSentence(selectedSentence)?.length || 0 }})\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<button class=\"close-panel\" @click=\"closeCommentPanel\">×</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"comment-list\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"comment in getCommentsForSentence(selectedSentence)\"\r\n\t\t\t\t\t\t:key=\"comment.comment_id\"\r\n\t\t\t\t\t\tclass=\"comment-item\">\r\n\t\t\t\t\t\t<div class=\"comment-header\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t:src=\"comment.user_avatar || 'default-avatar.png'\"\r\n\t\t\t\t\t\t\t\tclass=\"avatar\" />\r\n\t\t\t\t\t\t\t<span class=\"username\">{{ comment.user_nickname }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"comment-text\">{{ comment.content }}</div>\r\n\t\t\t\t\t\t<div class=\"comment-footer\">\r\n\t\t\t\t\t\t\t<span class=\"comment-time\">{{\r\n\t\t\t\t\t\t\t\tformatTime(comment.publish_time)\r\n\t\t\t\t\t\t\t}}</span>\r\n\t\t\t\t\t\t\t<span class=\"like-count\">点赞: {{ comment.like_count }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"comment-form\" v-if=\"isEditing\">\r\n\t\t\t\t\t<textarea v-model=\"newComment\" placeholder=\"添加评论...\"></textarea>\r\n\t\t\t\t\t<button @click=\"submitComment\">提交</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"article-footer\">\r\n\t\t\t<div class=\"stats\">\r\n\t\t\t\t<span class=\"vote-count\">点赞: {{ article.voteup_count }}</span>\r\n\t\t\t\t<span class=\"comment-count\">评论: {{ comments.length }}</span>\r\n\t\t\t</div>\r\n\t\t\t<button class=\"edit-toggle\" @click=\"toggleEditMode\">\r\n\t\t\t\t{{ isEditing ? \"退出编辑\" : \"关联评论\" }}\r\n\t\t\t</button>\r\n\t\t\t<a :href=\"article.content_url\" target=\"_blank\" class=\"original-link\"\r\n\t\t\t\t>原文链接</a\r\n\t\t\t>\r\n\t\t</div>\r\n\r\n\t\t<!-- 评论模态框 -->\r\n\t\t<div class=\"modal\" v-if=\"showCommentModal\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<h3>为句子添加评论</h3>\r\n\t\t\t\t<p class=\"sentence-preview\">{{ sentences[modalSentenceIndex] }}</p>\r\n\t\t\t\t<textarea v-model=\"newComment\" placeholder=\"输入评论内容...\"></textarea>\r\n\t\t\t\t<div class=\"modal-actions\">\r\n\t\t\t\t\t<button @click=\"submitComment\">提交</button>\r\n\t\t\t\t\t<button @click=\"closeCommentModal\">取消</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, nextTick } from \"vue\";\r\n\timport api from \"@/api\";\r\n\r\n\tconst article = ref(null);\r\n\tconst articleContent = ref(null);\r\n\tconst comments = ref([]);\r\n\tconst sentences = ref([]);\r\n\tconst selectedSentence = ref(null);\r\n\tconst highlightedSentence = ref(null);\r\n\tconst isEditing = ref(false);\r\n\tconst showCommentModal = ref(false);\r\n\tconst modalSentenceIndex = ref(null);\r\n\tconst newComment = ref(\"\");\r\n\r\n\t// 初始化文章和评论数据\r\n\tonMounted(async () => {\r\n\t\t// 获取文章数据\r\n\t\tapi.get(\"article\", {}, data => {\r\n\t\t\tarticle.value = data[0];\r\n\t\t\t// 分割文章内容为句子\r\n\t\t\tif (article.value.content_text) {\r\n\t\t\t\tsentences.value = splitIntoSentences(article.value.content_text);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// 获取评论数据\r\n\t\tapi.get(\"comments\", {}, data => {\r\n\t\t\tcomments.value = data;\r\n\t\t});\r\n\t});\r\n\r\n\t// 将文章内容分割为句子\r\n\tconst splitIntoSentences = text => {\r\n\t\t// 简单的句子分割逻辑，可根据实际需求调整\r\n\t\treturn text\r\n\t\t\t.split(/(?<=[。！？；.!?;])/g)\r\n\t\t\t.map(s => s.trim())\r\n\t\t\t.filter(s => s.length > 0);\r\n\t};\r\n\r\n\t// 检查句子是否有评论\r\n\tconst hasComment = sentenceIndex => {\r\n\t\treturn comments.value.some(c => c.sentence_id === sentenceIndex);\r\n\t};\r\n\r\n\t// 获取特定句子的评论\r\n\tconst getCommentsForSentence = sentenceIndex => {\r\n\t\tif (sentenceIndex === null) return [];\r\n\t\treturn comments.value.filter(c => c.sentence_id === sentenceIndex);\r\n\t};\r\n\r\n\t// 高亮句子\r\n\tconst highlightSentence = index => {\r\n\t\thighlightedSentence.value = index;\r\n\t};\r\n\r\n\t// 取消高亮\r\n\tconst unhighlightSentence = () => {\r\n\t\thighlightedSentence.value = null;\r\n\t};\r\n\r\n\t// 打开评论面板\r\n\tconst openCommentPanel = sentenceIndex => {\r\n\t\tselectedSentence.value = sentenceIndex;\r\n\t};\r\n\r\n\t// 关闭评论面板\r\n\tconst closeCommentPanel = () => {\r\n\t\tselectedSentence.value = null;\r\n\t};\r\n\r\n\t// 打开评论模态框\r\n\tconst openCommentModal = sentenceIndex => {\r\n\t\tmodalSentenceIndex.value = sentenceIndex;\r\n\t\tshowCommentModal.value = true;\r\n\t};\r\n\r\n\t// 关闭评论模态框\r\n\tconst closeCommentModal = () => {\r\n\t\tshowCommentModal.value = false;\r\n\t\tnewComment.value = \"\";\r\n\t};\r\n\r\n\t// 提交评论\r\n\tconst submitComment = () => {\r\n\t\tif (!newComment.value.trim()) return;\r\n\r\n\t\tconst newCommentObj = {\r\n\t\t\tcomment_id: Date.now().toString(),\r\n\t\t\tuser_nickname: \"当前用户\",\r\n\t\t\tuser_avatar: \"\",\r\n\t\t\tcontent: newComment.value,\r\n\t\t\tpublish_time: Math.floor(Date.now() / 1000),\r\n\t\t\tlike_count: 0,\r\n\t\t\tsentence_id: showCommentModal.value\r\n\t\t\t\t? modalSentenceIndex.value\r\n\t\t\t\t: selectedSentence.value\r\n\t\t};\r\n\r\n\t\tcomments.value.push(newCommentObj);\r\n\t\tnewComment.value = \"\";\r\n\t\tshowCommentModal.value = false;\r\n\r\n\t\t// 在实际应用中，这里应该调用API保存评论\r\n\t\t// api.post('comments', newCommentObj, response => {\r\n\t\t//   // 处理响应\r\n\t\t// });\r\n\t};\r\n\r\n\t// 切换编辑模式\r\n\tconst toggleEditMode = () => {\r\n\t\tisEditing.value = !isEditing.value;\r\n\t\tif (!isEditing.value) {\r\n\t\t\tselectedSentence.value = null;\r\n\t\t}\r\n\t};\r\n\r\n\tconst formatTime = time => {\r\n\t\tif (!time) return \"\";\r\n\t\tconst date = new Date(time * 1000);\r\n\t\treturn date.toLocaleString();\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.article-container {\r\n\t\tmax-width: 1000px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground: #fff;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.article-content-wrapper {\r\n\t\tdisplay: flex;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.article-content {\r\n\t\tflex: 1;\r\n\t\tfont-size: 16px;\r\n\t\tline-height: 1.8;\r\n\t\tcolor: #333;\r\n\t\tpadding-right: 20px;\r\n\t}\r\n\r\n\t.sentence {\r\n\t\tmargin-bottom: 8px;\r\n\t\tposition: relative;\r\n\t\tpadding: 4px 8px;\r\n\t\tborder-radius: 4px;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.sentence:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.sentence.highlighted {\r\n\t\tbackground-color: #fff8e6;\r\n\t}\r\n\r\n\t.sentence.has-comment {\r\n\t\tborder-left: 3px solid #ffd700;\r\n\t\tpadding-left: 12px;\r\n\t}\r\n\r\n\t.add-comment-btn {\r\n\t\tposition: absolute;\r\n\t\tright: 0;\r\n\t\ttop: 0;\r\n\t\twidth: 24px;\r\n\t\theight: 24px;\r\n\t\tbackground: #0084ff;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 50%;\r\n\t\tfont-size: 16px;\r\n\t\tline-height: 24px;\r\n\t\tcursor: pointer;\r\n\t\topacity: 0;\r\n\t\ttransition: opacity 0.2s;\r\n\t}\r\n\r\n\t.sentence:hover .add-comment-btn {\r\n\t\topacity: 1;\r\n\t}\r\n\r\n\t.comment-panel {\r\n\t\twidth: 300px;\r\n\t\tbackground: #fff;\r\n\t\tborder-left: 1px solid #eee;\r\n\t\tpadding: 15px;\r\n\t\tposition: sticky;\r\n\t\ttop: 20px;\r\n\t\tmax-height: calc(100vh - 100px);\r\n\t\toverflow-y: auto;\r\n\t\ttransform: translateX(100%);\r\n\t\ttransition: transform 0.3s ease;\r\n\t}\r\n\r\n\t.comment-panel.panel-visible {\r\n\t\ttransform: translateX(0);\r\n\t}\r\n\r\n\t.panel-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 15px;\r\n\t\tpadding-bottom: 10px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-panel {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tfont-size: 20px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.comment-item {\r\n\t\tpadding: 10px;\r\n\t\tmargin-bottom: 15px;\r\n\t\tbackground: #f9f9f9;\r\n\t\tborder-radius: 6px;\r\n\t}\r\n\r\n\t.comment-header {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 8px;\r\n\t}\r\n\r\n\t.avatar {\r\n\t\twidth: 30px;\r\n\t\theight: 30px;\r\n\t\tborder-radius: 50%;\r\n\t\tmargin-right: 10px;\r\n\t}\r\n\r\n\t.username {\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.comment-text {\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 1.6;\r\n\t\tmargin-bottom: 8px;\r\n\t}\r\n\r\n\t.comment-footer {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.comment-form {\r\n\t\tmargin-top: 20px;\r\n\t}\r\n\r\n\t.comment-form textarea {\r\n\t\twidth: 100%;\r\n\t\tpadding: 10px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 4px;\r\n\t\tmargin-bottom: 10px;\r\n\t\tmin-height: 80px;\r\n\t}\r\n\r\n\t.comment-form button {\r\n\t\tbackground: #0084ff;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tpadding: 8px 15px;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.article-footer {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tpadding-top: 15px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t\tfont-size: 14px;\r\n\t\tcolor: #666;\r\n\t\tmargin-top: 20px;\r\n\t}\r\n\r\n\t.edit-toggle {\r\n\t\tbackground: #f0f0f0;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tpadding: 5px 10px;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tmargin-right: 15px;\r\n\t}\r\n\r\n\t.edit-toggle:hover {\r\n\t\tbackground: #e0e0e0;\r\n\t}\r\n\r\n\t.modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground: rgba(0, 0, 0, 0.5);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 500px;\r\n\t\tmax-width: 90%;\r\n\t}\r\n\r\n\t.sentence-preview {\r\n\t\tpadding: 10px;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.modal-actions {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-end;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.modal-actions button {\r\n\t\tpadding: 8px 15px;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.modal-actions button:first-child {\r\n\t\tbackground: #0084ff;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t}\r\n\r\n\t.modal-actions button:last-child {\r\n\t\tbackground: #f0f0f0;\r\n\t\tborder: 1px solid #ddd;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}