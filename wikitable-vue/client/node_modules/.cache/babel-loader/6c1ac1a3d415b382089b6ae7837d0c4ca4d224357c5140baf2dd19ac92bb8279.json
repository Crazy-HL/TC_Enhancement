{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a0c44a0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"comment-stats\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"stacked-chart\"\n};\nconst _hoisted_3 = {\n  class: \"stacked-bar\"\n};\nconst _hoisted_4 = [\"title\"];\nconst _hoisted_5 = {\n  class: \"stacked-legend\"\n};\nconst _hoisted_6 = {\n  class: \"legend-label\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"pie-chart\"\n};\nconst _hoisted_8 = [\"width\", \"height\"];\nconst _hoisted_9 = [\"d\", \"fill\"];\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"circle\", {\n  cx: \"50\",\n  cy: \"50\",\n  r: \"30\",\n  fill: \"#fff\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_11 = {\n  x: \"50\",\n  y: \"50\",\n  \"text-anchor\": \"middle\",\n  \"dominant-baseline\": \"middle\",\n  \"font-size\": \"12\"\n};\nconst _hoisted_12 = {\n  class: \"legend\"\n};\nconst _hoisted_13 = {\n  class: \"legend-label\"\n};\nconst _hoisted_14 = {\n  key: 2,\n  class: \"type-pie-chart\"\n};\nconst _hoisted_15 = [\"width\", \"height\"];\nconst _hoisted_16 = [\"d\", \"fill\"];\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"circle\", {\n  cx: \"50\",\n  cy: \"50\",\n  r: \"30\",\n  fill: \"#fff\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_18 = {\n  x: \"50\",\n  y: \"50\",\n  \"text-anchor\": \"middle\",\n  \"dominant-baseline\": \"middle\",\n  \"font-size\": \"12\"\n};\nconst _hoisted_19 = {\n  class: \"legend\"\n};\nconst _hoisted_20 = {\n  class: \"legend-label\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 立场堆叠图 \"), $props.showStandpoint ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.standpoints, standpoint => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: standpoint.type,\n      class: \"stacked-segment\",\n      style: _normalizeStyle({\n        width: `${standpoint.percentage * 100}%`,\n        backgroundColor: $setup.getStandpointColor(standpoint.type)\n      }),\n      title: `${$setup.getStandpointLabel(standpoint.type)}: ${Math.round(standpoint.percentage * 100)}%`\n    }, null, 12 /* STYLE, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.standpoints, standpoint => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: standpoint.type,\n      class: \"legend-item\"\n    }, [_createElementVNode(\"span\", {\n      class: \"legend-color\",\n      style: _normalizeStyle({\n        backgroundColor: $setup.getStandpointColor(standpoint.type)\n      })\n    }, null, 4 /* STYLE */), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($setup.getStandpointLabel(standpoint.type)) + \" (\" + _toDisplayString(Math.round(standpoint.percentage * 100)) + \"%)\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 情感饼图 \"), $props.showEmotion ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [(_openBlock(), _createElementBlock(\"svg\", {\n    width: $props.size,\n    height: $props.size,\n    viewBox: \"0 0 100 100\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.emotionSegments, (segment, index) => {\n    return _openBlock(), _createElementBlock(\"path\", {\n      key: index,\n      d: segment.path,\n      fill: $setup.getEmotionColor(segment.type),\n      stroke: \"#fff\",\n      \"stroke-width\": \"0.5\"\n    }, null, 8 /* PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_10, _createElementVNode(\"text\", _hoisted_11, _toDisplayString($setup.totalCount), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_8)), _createElementVNode(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.emotions, emotion => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: emotion.type,\n      class: \"legend-item\"\n    }, [_createElementVNode(\"span\", {\n      class: \"legend-color\",\n      style: _normalizeStyle({\n        backgroundColor: $setup.getEmotionColor(emotion.type)\n      })\n    }, null, 4 /* STYLE */), _createElementVNode(\"span\", _hoisted_13, _toDisplayString($setup.getEmotionLabel(emotion.type)) + \" (\" + _toDisplayString(Math.round(emotion.percentage * 100)) + \"%)\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 评论类型饼图 \"), $props.showType ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [(_openBlock(), _createElementBlock(\"svg\", {\n    width: $props.size,\n    height: $props.size,\n    viewBox: \"0 0 100 100\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.typeSegments, (segment, index) => {\n    return _openBlock(), _createElementBlock(\"path\", {\n      key: index,\n      d: segment.path,\n      fill: $setup.getTypeColor(segment.type),\n      stroke: \"#fff\",\n      \"stroke-width\": \"0.5\"\n    }, null, 8 /* PROPS */, _hoisted_16);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_17, _createElementVNode(\"text\", _hoisted_18, _toDisplayString($setup.totalCount), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_15)), _createElementVNode(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.typeDistribution, type => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: type.type,\n      class: \"legend-item\"\n    }, [_createElementVNode(\"span\", {\n      class: \"legend-color\",\n      style: _normalizeStyle({\n        backgroundColor: $setup.getTypeColor(type.type)\n      })\n    }, null, 4 /* STYLE */), _createElementVNode(\"span\", _hoisted_20, _toDisplayString($setup.getTypeLabel(type.type)) + \" (\" + _toDisplayString(type.count) + \", \" + _toDisplayString(Math.round(type.count / $setup.totalCount * 100)) + \"%)\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","cx","cy","r","fill","x","y","_createElementBlock","_hoisted_1","_createCommentVNode","$props","showStandpoint","_hoisted_2","_hoisted_3","_Fragment","_renderList","$setup","standpoints","standpoint","type","style","_normalizeStyle","percentage","getStandpointColor","title","getStandpointLabel","Math","round","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","showEmotion","_hoisted_7","width","size","height","viewBox","emotionSegments","segment","index","d","path","getEmotionColor","stroke","_hoisted_9","_hoisted_10","_hoisted_11","totalCount","_hoisted_8","_hoisted_12","emotions","emotion","backgroundColor","_hoisted_13","getEmotionLabel","showType","_hoisted_14","typeSegments","getTypeColor","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_15","_hoisted_19","typeDistribution","_hoisted_20","getTypeLabel","count"],"sources":["D:\\ZhiHu\\zhihu-bullet\\wikitable-vue\\client\\src\\components\\CommentStats.vue"],"sourcesContent":["<template>\r\n\t<div class=\"comment-stats\">\r\n\t\t<!-- 立场堆叠图 -->\r\n\t\t<div v-if=\"showStandpoint\" class=\"stacked-chart\">\r\n\t\t\t<div class=\"stacked-bar\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"standpoint in standpoints\"\r\n\t\t\t\t\t:key=\"standpoint.type\"\r\n\t\t\t\t\tclass=\"stacked-segment\"\r\n\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\twidth: `${standpoint.percentage * 100}%`,\r\n\t\t\t\t\t\tbackgroundColor: getStandpointColor(standpoint.type)\r\n\t\t\t\t\t}\"\r\n\t\t\t\t\t:title=\"`${getStandpointLabel(standpoint.type)}: ${Math.round(\r\n\t\t\t\t\t\tstandpoint.percentage * 100\r\n\t\t\t\t\t)}%`\"></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"stacked-legend\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"standpoint in standpoints\"\r\n\t\t\t\t\t:key=\"standpoint.type\"\r\n\t\t\t\t\tclass=\"legend-item\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"legend-color\"\r\n\t\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\t\tbackgroundColor: getStandpointColor(standpoint.type)\r\n\t\t\t\t\t\t}\"></span>\r\n\t\t\t\t\t<span class=\"legend-label\"\r\n\t\t\t\t\t\t>{{ getStandpointLabel(standpoint.type) }} ({{\r\n\t\t\t\t\t\t\tMath.round(standpoint.percentage * 100)\r\n\t\t\t\t\t\t}}%)</span\r\n\t\t\t\t\t>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 情感饼图 -->\r\n\t\t<div v-if=\"showEmotion\" class=\"pie-chart\">\r\n\t\t\t<svg :width=\"size\" :height=\"size\" viewBox=\"0 0 100 100\">\r\n\t\t\t\t<path\r\n\t\t\t\t\tv-for=\"(segment, index) in emotionSegments\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:d=\"segment.path\"\r\n\t\t\t\t\t:fill=\"getEmotionColor(segment.type)\"\r\n\t\t\t\t\tstroke=\"#fff\"\r\n\t\t\t\t\tstroke-width=\"0.5\" />\r\n\t\t\t\t<circle cx=\"50\" cy=\"50\" r=\"30\" fill=\"#fff\" />\r\n\t\t\t\t<text\r\n\t\t\t\t\tx=\"50\"\r\n\t\t\t\t\ty=\"50\"\r\n\t\t\t\t\ttext-anchor=\"middle\"\r\n\t\t\t\t\tdominant-baseline=\"middle\"\r\n\t\t\t\t\tfont-size=\"12\">\r\n\t\t\t\t\t{{ totalCount }}\r\n\t\t\t\t</text>\r\n\t\t\t</svg>\r\n\t\t\t<div class=\"legend\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"emotion in emotions\"\r\n\t\t\t\t\t:key=\"emotion.type\"\r\n\t\t\t\t\tclass=\"legend-item\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"legend-color\"\r\n\t\t\t\t\t\t:style=\"{ backgroundColor: getEmotionColor(emotion.type) }\"></span>\r\n\t\t\t\t\t<span class=\"legend-label\"\r\n\t\t\t\t\t\t>{{ getEmotionLabel(emotion.type) }} ({{\r\n\t\t\t\t\t\t\tMath.round(emotion.percentage * 100)\r\n\t\t\t\t\t\t}}%)</span\r\n\t\t\t\t\t>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 评论类型饼图 -->\r\n\t\t<div v-if=\"showType\" class=\"type-pie-chart\">\r\n\t\t\t<svg :width=\"size\" :height=\"size\" viewBox=\"0 0 100 100\">\r\n\t\t\t\t<path\r\n\t\t\t\t\tv-for=\"(segment, index) in typeSegments\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:d=\"segment.path\"\r\n\t\t\t\t\t:fill=\"getTypeColor(segment.type)\"\r\n\t\t\t\t\tstroke=\"#fff\"\r\n\t\t\t\t\tstroke-width=\"0.5\" />\r\n\t\t\t\t<circle cx=\"50\" cy=\"50\" r=\"30\" fill=\"#fff\" />\r\n\t\t\t\t<text\r\n\t\t\t\t\tx=\"50\"\r\n\t\t\t\t\ty=\"50\"\r\n\t\t\t\t\ttext-anchor=\"middle\"\r\n\t\t\t\t\tdominant-baseline=\"middle\"\r\n\t\t\t\t\tfont-size=\"12\">\r\n\t\t\t\t\t{{ totalCount }}\r\n\t\t\t\t</text>\r\n\t\t\t</svg>\r\n\t\t\t<div class=\"legend\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"type in typeDistribution\"\r\n\t\t\t\t\t:key=\"type.type\"\r\n\t\t\t\t\tclass=\"legend-item\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"legend-color\"\r\n\t\t\t\t\t\t:style=\"{ backgroundColor: getTypeColor(type.type) }\"></span>\r\n\t\t\t\t\t<span class=\"legend-label\"\r\n\t\t\t\t\t\t>{{ getTypeLabel(type.type) }} ({{ type.count }},\r\n\t\t\t\t\t\t{{ Math.round((type.count / totalCount) * 100) }}%)</span\r\n\t\t\t\t\t>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcomments: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tshowStandpoint: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tshowEmotion: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tshowType: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tsize: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 80\r\n\t\t}\r\n\t});\r\n\r\n\t// 计算立场分布\r\n\tconst standpoints = computed(() => {\r\n\t\tconst counts = {\r\n\t\t\t1: 0, // 支持\r\n\t\t\t[-1]: 0, // 反对\r\n\t\t\t0: 0 // 中立\r\n\t\t};\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tcounts[comment.standpoint]++;\r\n\t\t});\r\n\r\n\t\tconst total = props.comments.length;\r\n\t\treturn [\r\n\t\t\t{ type: 1, percentage: counts[1] / total, count: counts[1] },\r\n\t\t\t{ type: -1, percentage: counts[-1] / total, count: counts[-1] },\r\n\t\t\t{ type: 0, percentage: counts[0] / total, count: counts[0] }\r\n\t\t].filter(item => item.count > 0);\r\n\t});\r\n\r\n\t// 计算情感分布\r\n\tconst emotions = computed(() => {\r\n\t\tconst counts = {\r\n\t\t\t1: 0, // 积极\r\n\t\t\t[-1]: 0, // 消极\r\n\t\t\t0: 0 // 中立\r\n\t\t};\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tcounts[comment.emotion]++;\r\n\t\t});\r\n\r\n\t\tconst total = props.comments.length;\r\n\t\treturn [\r\n\t\t\t{ type: 1, percentage: counts[1] / total, count: counts[1] },\r\n\t\t\t{ type: -1, percentage: counts[-1] / total, count: counts[-1] },\r\n\t\t\t{ type: 0, percentage: counts[0] / total, count: counts[0] }\r\n\t\t].filter(item => item.count > 0);\r\n\t});\r\n\r\n\t// 计算评论类型分布\r\n\tconst typeDistribution = computed(() => {\r\n\t\tconst types = {\r\n\t\t\t1: { type: 1, count: 0, label: \"陈述\" },\r\n\t\t\t2: { type: 2, count: 0, label: \"疑问\" },\r\n\t\t\t3: { type: 3, count: 0, label: \"感叹\" },\r\n\t\t\t4: { type: 4, count: 0, label: \"建议\" },\r\n\t\t\t5: { type: 5, count: 0, label: \"讽刺\" }\r\n\t\t};\r\n\r\n\t\tprops.comments.forEach(comment => {\r\n\t\t\tconst type = comment.comment_type || 1;\r\n\t\t\ttypes[type].count++;\r\n\t\t});\r\n\r\n\t\treturn Object.values(types).filter(t => t.count > 0);\r\n\t});\r\n\r\n\tconst totalCount = computed(() => {\r\n\t\treturn props.comments.length;\r\n\t});\r\n\r\n\t// 计算情感饼图分段\r\n\tconst emotionSegments = computed(() => {\r\n\t\tconst segments = [];\r\n\t\tlet startAngle = 0;\r\n\r\n\t\temotions.value.forEach(emotion => {\r\n\t\t\tconst endAngle = startAngle + emotion.percentage * 360;\r\n\r\n\t\t\tif (emotion.percentage > 0) {\r\n\t\t\t\tsegments.push({\r\n\t\t\t\t\ttype: emotion.type,\r\n\t\t\t\t\tpath: describeArc(50, 50, 40, 40, startAngle, endAngle),\r\n\t\t\t\t\tpercentage: emotion.percentage\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tstartAngle = endAngle;\r\n\t\t});\r\n\r\n\t\treturn segments;\r\n\t});\r\n\r\n\t// 计算评论类型饼图分段\r\n\tconst typeSegments = computed(() => {\r\n\t\tconst segments = [];\r\n\t\tlet startAngle = 0;\r\n\r\n\t\ttypeDistribution.value.forEach(type => {\r\n\t\t\tconst percentage = type.count / totalCount.value;\r\n\t\t\tconst endAngle = startAngle + percentage * 360;\r\n\r\n\t\t\tif (percentage > 0) {\r\n\t\t\t\tsegments.push({\r\n\t\t\t\t\ttype: type.type,\r\n\t\t\t\t\tpath: describeArc(50, 50, 40, 40, startAngle, endAngle),\r\n\t\t\t\t\tpercentage: percentage\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tstartAngle = endAngle;\r\n\t\t});\r\n\r\n\t\treturn segments;\r\n\t});\r\n\r\n\t// 饼图路径计算函数\r\n\tfunction describeArc(x, y, radius, innerRadius, startAngle, endAngle) {\r\n\t\tconst start = polarToCartesian(x, y, radius, endAngle);\r\n\t\tconst end = polarToCartesian(x, y, radius, startAngle);\r\n\t\tconst innerStart = polarToCartesian(x, y, innerRadius, endAngle);\r\n\t\tconst innerEnd = polarToCartesian(x, y, innerRadius, startAngle);\r\n\r\n\t\tconst largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n\r\n\t\treturn [\r\n\t\t\t\"M\",\r\n\t\t\tstart.x,\r\n\t\t\tstart.y,\r\n\t\t\t\"A\",\r\n\t\t\tradius,\r\n\t\t\tradius,\r\n\t\t\t0,\r\n\t\t\tlargeArcFlag,\r\n\t\t\t0,\r\n\t\t\tend.x,\r\n\t\t\tend.y,\r\n\t\t\t\"L\",\r\n\t\t\tinnerEnd.x,\r\n\t\t\tinnerEnd.y,\r\n\t\t\t\"A\",\r\n\t\t\tinnerRadius,\r\n\t\t\tinnerRadius,\r\n\t\t\t0,\r\n\t\t\tlargeArcFlag,\r\n\t\t\t1,\r\n\t\t\tinnerStart.x,\r\n\t\t\tinnerStart.y,\r\n\t\t\t\"Z\"\r\n\t\t].join(\" \");\r\n\t}\r\n\r\n\tfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\r\n\t\tconst angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\r\n\t\treturn {\r\n\t\t\tx: centerX + radius * Math.cos(angleInRadians),\r\n\t\t\ty: centerY + radius * Math.sin(angleInRadians)\r\n\t\t};\r\n\t}\r\n\r\n\t// 立场颜色映射\r\n\tfunction getStandpointColor(type) {\r\n\t\treturn (\r\n\t\t\t{\r\n\t\t\t\t1: \"#ccebc5\", // 支持 - 绿色\r\n\t\t\t\t[-1]: \"#fbb4ae\", // 反对 - 红色\r\n\t\t\t\t0: \"#b3cde3\" // 中立 - 蓝色\r\n\t\t\t}[type] || \"#9E9E9E\"\r\n\t\t);\r\n\t}\r\n\r\n\tfunction getStandpointLabel(type) {\r\n\t\treturn (\r\n\t\t\t{\r\n\t\t\t\t1: \"支持\",\r\n\t\t\t\t[-1]: \"反对\",\r\n\t\t\t\t0: \"中立\"\r\n\t\t\t}[type] || \"未知\"\r\n\t\t);\r\n\t}\r\n\r\n\t// 情感颜色映射\r\n\tfunction getEmotionColor(type) {\r\n\t\treturn (\r\n\t\t\t{\r\n\t\t\t\t1: \"#4daf4a\", // 积极 - 绿色\r\n\t\t\t\t[-1]: \"#e41a1c\", // 消极 - 红色\r\n\t\t\t\t0: \"#377eb8\" // 中立 - 蓝色\r\n\t\t\t}[type] || \"#9E9E9E\"\r\n\t\t);\r\n\t}\r\n\r\n\tfunction getEmotionLabel(type) {\r\n\t\treturn (\r\n\t\t\t{\r\n\t\t\t\t1: \"积极\",\r\n\t\t\t\t[-1]: \"消极\",\r\n\t\t\t\t0: \"中立\"\r\n\t\t\t}[type] || \"未知\"\r\n\t\t);\r\n\t}\r\n\r\n\t// 评论类型颜色映射\r\n\tfunction getTypeColor(type) {\r\n\t\treturn (\r\n\t\t\t{\r\n\t\t\t\t1: \"#4285F4\", // 陈述 - 蓝色\r\n\t\t\t\t2: \"#EA4335\", // 疑问 - 红色\r\n\t\t\t\t3: \"#34A853\", // 感叹 - 绿色\r\n\t\t\t\t4: \"#9C27B0\", // 建议 - 紫色\r\n\t\t\t\t5: \"#FF9800\" // 讽刺 - 橙色\r\n\t\t\t}[type] || \"#9E9E9E\"\r\n\t\t);\r\n\t}\r\n\r\n\tfunction getTypeLabel(type) {\r\n\t\treturn (\r\n\t\t\t{\r\n\t\t\t\t1: \"陈述\",\r\n\t\t\t\t2: \"疑问\",\r\n\t\t\t\t3: \"感叹\",\r\n\t\t\t\t4: \"建议\",\r\n\t\t\t\t5: \"讽刺\"\r\n\t\t\t}[type] || \"未知\"\r\n\t\t);\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.comment-stats {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 8px;\r\n\t}\r\n\r\n\t.stacked-chart,\r\n\t.pie-chart,\r\n\t.type-pie-chart {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 6px;\r\n\t}\r\n\r\n\t.stacked-bar {\r\n\t\tdisplay: flex;\r\n\t\twidth: 100%;\r\n\t\theight: 12px;\r\n\t\tborder-radius: 6px;\r\n\t\toverflow: hidden;\r\n\t\tbackground-color: #f0f0f0;\r\n\t}\r\n\r\n\t.stacked-segment {\r\n\t\theight: 100%;\r\n\t\ttransition: width 0.3s ease;\r\n\t}\r\n\r\n\t.legend {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tjustify-content: center;\r\n\t\tgap: 4px 8px;\r\n\t\tfont-size: 10px;\r\n\t}\r\n\r\n\t.stacked-legend {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tjustify-content: center;\r\n\t\tgap: 4px 8px;\r\n\t\tfont-size: 10px;\r\n\t}\r\n\r\n\t.legend-item {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 4px;\r\n\t}\r\n\r\n\t.legend-color {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 10px;\r\n\t\theight: 10px;\r\n\t\tborder-radius: 2px;\r\n\t}\r\n\r\n\t.legend-label {\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\ttext {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tfill: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}